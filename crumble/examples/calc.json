[
  {
    "func_0x12475": [
      {
        "basicblock_0x12475": [
          "push 0x70", 
          "push 0x10015e0", 
          "call 0x127c8", 
          "xor ebx, ebx", 
          "push ebx", 
          "mov edi, dword ptr [0x1001020]", 
          "call edi", 
          "cmp word ptr [eax], 0x5a4d", 
          "jne 0x124b2"
        ]
      }, 
      {
        "basicblock_0x12493": [
          "mov ecx, dword ptr [eax + 0x3c]", 
          "add ecx, eax", 
          "cmp dword ptr [ecx], 0x4550", 
          "jne 0x124b2"
        ]
      }, 
      {
        "basicblock_0x124b2": [
          "mov dword ptr [ebp - 0x1c], ebx", 
          "jmp 0x124de"
        ]
      }, 
      {
        "basicblock_0x124a0": [
          "movzx eax, word ptr [ecx + 0x18]", 
          "cmp eax, 0x10b", 
          "je 0x124ca"
        ]
      }, 
      {
        "basicblock_0x124de": [
          "mov dword ptr [ebp - 4], ebx", 
          "push 2", 
          "call dword ptr [0x100120c]", 
          "pop ecx", 
          "or dword ptr [0x1015010], 0xffffffff", 
          "or dword ptr [0x1015014], 0xffffffff", 
          "call dword ptr [0x1001208]", 
          "mov ecx, dword ptr [0x101500c]", 
          "mov dword ptr [eax], ecx", 
          "call dword ptr [0x1001204]", 
          "mov ecx, dword ptr [0x1015008]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [0x1001200]", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [0x1015018], eax", 
          "call 0x127c2", 
          "cmp dword ptr [0x10149d0], ebx", 
          "jne 0x12539"
        ]
      }, 
      {
        "basicblock_0x124ab": [
          "cmp eax, 0x20b", 
          "je 0x124b7"
        ]
      }, 
      {
        "basicblock_0x124ca": [
          "cmp dword ptr [ecx + 0x74], 0xe", 
          "jbe 0x124b2"
        ]
      }, 
      {
        "basicblock_0x1252d": [
          "push 0x10127c2", 
          "call dword ptr [0x10011fc]", 
          "pop ecx", 
          "call 0x127b0", 
          "push 0x1001234", 
          "push 0x1001230", 
          "call 0x127aa", 
          "mov eax, dword ptr [0x1015004]", 
          "mov dword ptr [ebp - 0x20], eax", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "push dword ptr [0x1015000]", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x28]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x2c]", 
          "push eax", 
          "call dword ptr [0x10011f4]", 
          "mov dword ptr [ebp - 0x30], eax", 
          "push 0x100122c", 
          "push 0x1001228", 
          "call 0x127aa", 
          "add esp, 0x24", 
          "mov eax, dword ptr [0x10011f0]", 
          "mov esi, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x34], esi", 
          "cmp byte ptr [esi], 0x22", 
          "jne 0x125cf"
        ]
      }, 
      {
        "basicblock_0x12539": [
          "call 0x127b0", 
          "push 0x1001234", 
          "push 0x1001230", 
          "call 0x127aa", 
          "mov eax, dword ptr [0x1015004]", 
          "mov dword ptr [ebp - 0x20], eax", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "push dword ptr [0x1015000]", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x28]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x2c]", 
          "push eax", 
          "call dword ptr [0x10011f4]", 
          "mov dword ptr [ebp - 0x30], eax", 
          "push 0x100122c", 
          "push 0x1001228", 
          "call 0x127aa", 
          "add esp, 0x24", 
          "mov eax, dword ptr [0x10011f0]", 
          "mov esi, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x34], esi", 
          "cmp byte ptr [esi], 0x22", 
          "jne 0x125cf"
        ]
      }, 
      {
        "basicblock_0x124b7": [
          "cmp dword ptr [ecx + 0x84], 0xe", 
          "jbe 0x124b2"
        ]
      }, 
      {
        "basicblock_0x124d0": [
          "xor eax, eax", 
          "cmp dword ptr [ecx + 0xe8], ebx", 
          "setne al", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov dword ptr [ebp - 4], ebx", 
          "push 2", 
          "call dword ptr [0x100120c]", 
          "pop ecx", 
          "or dword ptr [0x1015010], 0xffffffff", 
          "or dword ptr [0x1015014], 0xffffffff", 
          "call dword ptr [0x1001208]", 
          "mov ecx, dword ptr [0x101500c]", 
          "mov dword ptr [eax], ecx", 
          "call dword ptr [0x1001204]", 
          "mov ecx, dword ptr [0x1015008]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [0x1001200]", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [0x1015018], eax", 
          "call 0x127c2", 
          "cmp dword ptr [0x10149d0], ebx", 
          "jne 0x12539"
        ]
      }, 
      {
        "basicblock_0x12595": [
          "inc esi", 
          "mov dword ptr [ebp - 0x34], esi", 
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x125a3"
        ]
      }, 
      {
        "basicblock_0x125cf": [
          "cmp byte ptr [esi], 0x20", 
          "jbe 0x125ac"
        ]
      }, 
      {
        "basicblock_0x124c0": [
          "xor eax, eax", 
          "cmp dword ptr [ecx + 0xf8], ebx", 
          "jmp 0x124d8"
        ]
      }, 
      {
        "basicblock_0x1259f": [
          "cmp al, 0x22", 
          "jne 0x12595"
        ]
      }, 
      {
        "basicblock_0x125a3": [
          "cmp byte ptr [esi], 0x22", 
          "jne 0x125ac"
        ]
      }, 
      {
        "basicblock_0x125d4": [
          "inc esi", 
          "mov dword ptr [ebp - 0x34], esi", 
          "jmp 0x125cf"
        ]
      }, 
      {
        "basicblock_0x125ac": [
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x125b6"
        ]
      }, 
      {
        "basicblock_0x124d8": [
          "setne al", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov dword ptr [ebp - 4], ebx", 
          "push 2", 
          "call dword ptr [0x100120c]", 
          "pop ecx", 
          "or dword ptr [0x1015010], 0xffffffff", 
          "or dword ptr [0x1015014], 0xffffffff", 
          "call dword ptr [0x1001208]", 
          "mov ecx, dword ptr [0x101500c]", 
          "mov dword ptr [eax], ecx", 
          "call dword ptr [0x1001204]", 
          "mov ecx, dword ptr [0x1015008]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [0x1001200]", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [0x1015018], eax", 
          "call 0x127c2", 
          "cmp dword ptr [0x10149d0], ebx", 
          "jne 0x12539"
        ]
      }, 
      {
        "basicblock_0x125a8": [
          "inc esi", 
          "mov dword ptr [ebp - 0x34], esi", 
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x125b6"
        ]
      }, 
      {
        "basicblock_0x125b2": [
          "cmp al, 0x20", 
          "jbe 0x125a8"
        ]
      }, 
      {
        "basicblock_0x125b6": [
          "mov dword ptr [ebp - 0x4c], ebx", 
          "lea eax, dword ptr [ebp - 0x78]", 
          "push eax", 
          "call dword ptr [0x1001048]", 
          "test byte ptr [ebp - 0x4c], 1", 
          "je 0x125da"
        ]
      }, 
      {
        "basicblock_0x125c9": [
          "movzx eax, word ptr [ebp - 0x48]", 
          "jmp 0x125dd"
        ]
      }, 
      {
        "basicblock_0x125da": [
          "push 0xa", 
          "pop eax", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push ebx", 
          "call edi", 
          "push eax", 
          "call 0x1f51", 
          "mov esi, eax", 
          "mov dword ptr [ebp - 0x7c], esi", 
          "cmp dword ptr [ebp - 0x1c], ebx", 
          "jne 0x125fa"
        ]
      }, 
      {
        "basicblock_0x125dd": [
          "push eax", 
          "push esi", 
          "push ebx", 
          "push ebx", 
          "call edi", 
          "push eax", 
          "call 0x1f51", 
          "mov esi, eax", 
          "mov dword ptr [ebp - 0x7c], esi", 
          "cmp dword ptr [ebp - 0x1c], ebx", 
          "jne 0x125fa"
        ]
      }, 
      {
        "basicblock_0x125f3": [
          "push esi", 
          "call dword ptr [0x10011ec]", 
          "call dword ptr [0x10011e8]", 
          "jmp 0x1262f"
        ]
      }, 
      {
        "basicblock_0x125fa": [
          "call dword ptr [0x10011e8]", 
          "jmp 0x1262f"
        ]
      }, 
      {
        "basicblock_0x1262f": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "mov eax, esi", 
          "call 0x12801", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x127c8": [
      {
        "basicblock_0x127c8": [
          "push 0x10128e2", 
          "mov eax, dword ptr fs:[0]", 
          "push eax", 
          "mov dword ptr fs:[0], esp", 
          "mov eax, dword ptr [esp + 0x10]", 
          "mov dword ptr [esp + 0x10], ebp", 
          "lea ebp, dword ptr [esp + 0x10]", 
          "sub esp, eax", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0x18], esp", 
          "push eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [ebp - 4], 0xffffffff", 
          "mov dword ptr [ebp - 8], eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x127c2": [
      {
        "basicblock_0x127c2": [
          "xor eax, eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x127b0": [
      {
        "basicblock_0x127b0": [
          "push 0x30000", 
          "push 0x10000", 
          "call 0x128dc", 
          "pop ecx", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x127aa": [
      {
        "basicblock_0x127aa": [
          "jmp dword ptr [0x10011f8]"
        ]
      }
    ]
  }, 
  {
    "func_0x128dc": [
      {
        "basicblock_0x128dc": [
          "jmp dword ptr [0x1001218]"
        ]
      }
    ]
  }, 
  {
    "func_0x1f51": [
      {
        "basicblock_0x1f51": [
          "mov eax, 0x10128ee", 
          "call 0x12650", 
          "sub esp, 0xf0", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ebp - 0x10], esp", 
          "push 0x31", 
          "pop ecx", 
          "xor eax, eax", 
          "xor ebx, ebx", 
          "mov word ptr [ebp - 0xfc], bx", 
          "lea edi, dword ptr [ebp - 0xfa]", 
          "rep stosd dword ptr es:[edi], eax", 
          "stosw word ptr es:[edi], ax", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push eax", 
          "call dword ptr [0x10011b4]", 
          "test eax, eax", 
          "je 0x1fa8"
        ]
      }, 
      {
        "basicblock_0x1f8d": [
          "mov eax, dword ptr [ebp - 0x18]", 
          "test al, 1", 
          "je 0x1fa8"
        ]
      }, 
      {
        "basicblock_0x1fa8": [
          "push dword ptr [ebp + 0x10]", 
          "call 0x1665", 
          "mov eax, dword ptr [ebp + 8]", 
          "push dword ptr [ebp + 0xc]", 
          "mov dword ptr [0x1014a48], eax", 
          "call 0x17c7", 
          "test eax, eax", 
          "je 0x20a8"
        ]
      }, 
      {
        "basicblock_0x1f94": [
          "and eax, 0xfffffffe", 
          "push eax", 
          "call dword ptr [0x10011b0]"
        ]
      }, 
      {
        "basicblock_0x1fc8": [
          "push 0x800", 
          "push 0x40", 
          "mov dword ptr [ebp - 4], ebx", 
          "call dword ptr [0x1001080]", 
          "cmp eax, ebx", 
          "mov dword ptr [ebp + 0x10], eax", 
          "jne 0x1fe3"
        ]
      }, 
      {
        "basicblock_0x20a8": [
          "xor eax, eax", 
          "jmp 0x21c0"
        ]
      }, 
      {
        "basicblock_0x1fdf": [
          "push ebx", 
          "push ebx", 
          "jmp 0x2061"
        ]
      }, 
      {
        "basicblock_0x1fe3": [
          "and dword ptr [ebp + 0xc], 0", 
          "mov edi, dword ptr [0x1001078]", 
          "mov esi, 0x400", 
          "cmp dword ptr [ebp + 0xc], 0x54", 
          "jg 0x2049"
        ]
      }, 
      {
        "basicblock_0x21c0": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x2061": [
          "call 0x12670", 
          "xor esi, esi", 
          "cmp dword ptr [ebp + 0x10], esi", 
          "je 0x2076"
        ]
      }, 
      {
        "basicblock_0x1ff8": [
          "mov eax, dword ptr [ebp + 0x10]", 
          "mov dword ptr [ebp - 0x14], esi", 
          "sub dword ptr [ebp - 0x14], ebx", 
          "push dword ptr [ebp - 0x14]", 
          "lea eax, dword ptr [eax + ebx*2]", 
          "push eax", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x10011ac]", 
          "inc eax", 
          "cmp eax, dword ptr [ebp - 0x14]", 
          "jne 0x2038"
        ]
      }, 
      {
        "basicblock_0x2049": [
          "push 2", 
          "lea eax, dword ptr [ebx + ebx]", 
          "push eax", 
          "push dword ptr [ebp + 0x10]", 
          "call edi", 
          "mov esi, eax", 
          "xor ecx, ecx", 
          "cmp esi, ecx", 
          "mov dword ptr [ebp + 8], esi", 
          "jne 0x20af"
        ]
      }, 
      {
        "basicblock_0x206d": [
          "push dword ptr [ebp + 0x10]", 
          "call dword ptr [0x100107c]", 
          "push 0x64", 
          "lea eax, dword ptr [ebp - 0xfc]", 
          "push eax", 
          "push 0x54", 
          "push dword ptr [0x1014a48]", 
          "call dword ptr [0x10011ac]", 
          "test eax, eax", 
          "je 0x20a2"
        ]
      }, 
      {
        "basicblock_0x2076": [
          "push 0x64", 
          "lea eax, dword ptr [ebp - 0xfc]", 
          "push eax", 
          "push 0x54", 
          "push dword ptr [0x1014a48]", 
          "call dword ptr [0x10011ac]", 
          "test eax, eax", 
          "je 0x20a2"
        ]
      }, 
      {
        "basicblock_0x201a": [
          "add esi, 0x400", 
          "push 2", 
          "lea eax, dword ptr [esi + esi]", 
          "push eax", 
          "push dword ptr [ebp + 0x10]", 
          "call edi", 
          "test eax, eax", 
          "jne 0x2033"
        ]
      }, 
      {
        "basicblock_0x2038": [
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov dword ptr [ecx*4 + 0x1014a50], ebx", 
          "add ebx, eax", 
          "inc dword ptr [ebp + 0xc]", 
          "jmp 0x1ff2"
        ]
      }, 
      {
        "basicblock_0x205f": [
          "push ecx", 
          "push ecx", 
          "call 0x12670", 
          "xor esi, esi", 
          "cmp dword ptr [ebp + 0x10], esi", 
          "je 0x2076"
        ]
      }, 
      {
        "basicblock_0x20af": [
          "xor edx, edx", 
          "cmp edx, 0x54", 
          "jg 0x20c7"
        ]
      }, 
      {
        "basicblock_0x2091": [
          "push 0x10", 
          "push esi", 
          "lea eax, dword ptr [ebp - 0xfc]", 
          "push eax", 
          "push esi", 
          "call dword ptr [0x10011a8]", 
          "mov eax, 0x10020a8", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x20a2": [
          "mov eax, 0x10020a8", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x202f": [
          "push eax", 
          "push eax", 
          "jmp 0x2061"
        ]
      }, 
      {
        "basicblock_0x2033": [
          "mov dword ptr [ebp + 0x10], eax", 
          "jmp 0x1ff8"
        ]
      }, 
      {
        "basicblock_0x1ff2": [
          "cmp dword ptr [ebp + 0xc], 0x54", 
          "jg 0x2049"
        ]
      }, 
      {
        "basicblock_0x20b6": [
          "lea eax, dword ptr [edx*4 + 0x1014a50]", 
          "mov edi, dword ptr [eax]", 
          "lea edi, dword ptr [esi + edi*2]", 
          "mov dword ptr [eax], edi", 
          "inc edx", 
          "jmp 0x20b1"
        ]
      }, 
      {
        "basicblock_0x20c7": [
          "push ecx", 
          "push dword ptr [0x1014a48]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push ecx", 
          "push ecx", 
          "push ecx", 
          "mov eax, 0x80000000", 
          "push eax", 
          "push ecx", 
          "push eax", 
          "push 0x10000000", 
          "push 0x10012f0", 
          "push 0x10012e4", 
          "push ecx", 
          "call dword ptr [0x10011a4]", 
          "mov dword ptr [0x1014d70], eax", 
          "call 0x1e47", 
          "mov esi, dword ptr [0x1001094]", 
          "push 1", 
          "push 0x10012d4", 
          "mov edi, 0x1014018", 
          "push edi", 
          "call esi", 
          "xor ebx, ebx", 
          "push ebx", 
          "push 0x10012c4", 
          "push edi", 
          "mov dword ptr [0x1014d48], eax", 
          "call esi", 
          "push 1", 
          "mov dword ptr [0x1014d4c], eax", 
          "call 0x1a17", 
          "push 0x69", 
          "push dword ptr [0x1014a48]", 
          "call dword ptr [0x10011a0]", 
          "mov esi, dword ptr [0x100119c]", 
          "mov dword ptr [0x1014a44], eax", 
          "jmp 0x21a7"
        ]
      }, 
      {
        "basicblock_0x20b1": [
          "cmp edx, 0x54", 
          "jg 0x20c7"
        ]
      }, 
      {
        "basicblock_0x21a7": [
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x34]", 
          "push ebx", 
          "push eax", 
          "call esi", 
          "test eax, eax", 
          "jne 0x2149"
        ]
      }, 
      {
        "basicblock_0x21b4": [
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x100107c]", 
          "mov eax, dword ptr [ebp - 0x2c]", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x2149": [
          "mov eax, dword ptr [0x1014d74]", 
          "cmp eax, ebx", 
          "je 0x2161"
        ]
      }, 
      {
        "basicblock_0x2152": [
          "lea ecx, dword ptr [ebp - 0x34]", 
          "push ecx", 
          "push eax", 
          "call dword ptr [0x1001198]", 
          "test eax, eax", 
          "jne 0x21a7"
        ]
      }, 
      {
        "basicblock_0x2161": [
          "mov eax, dword ptr [0x1014d6c]", 
          "cmp dword ptr [ebp - 0x34], eax", 
          "je 0x2179"
        ]
      }, 
      {
        "basicblock_0x216b": [
          "push dword ptr [ebp - 0x34]", 
          "push eax", 
          "call dword ptr [0x1001194]", 
          "test eax, eax", 
          "je 0x2193"
        ]
      }, 
      {
        "basicblock_0x2179": [
          "lea eax, dword ptr [ebp - 0x34]", 
          "push eax", 
          "push dword ptr [0x1014a44]", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001190]", 
          "test eax, eax", 
          "jne 0x21a7"
        ]
      }, 
      {
        "basicblock_0x2193": [
          "lea eax, dword ptr [ebp - 0x34]", 
          "push eax", 
          "call dword ptr [0x100118c]", 
          "lea eax, dword ptr [ebp - 0x34]", 
          "push eax", 
          "call dword ptr [0x1001188]", 
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x34]", 
          "push ebx", 
          "push eax", 
          "call esi", 
          "test eax, eax", 
          "jne 0x2149"
        ]
      }
    ]
  }, 
  {
    "func_0x12650": [
      {
        "basicblock_0x12650": [
          "push -1", 
          "push eax", 
          "mov eax, dword ptr fs:[0]", 
          "push eax", 
          "mov eax, dword ptr [esp + 0xc]", 
          "mov dword ptr fs:[0], esp", 
          "mov dword ptr [esp + 0xc], ebp", 
          "lea ebp, dword ptr [esp + 0xc]", 
          "push eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x1665": [
      {
        "basicblock_0x1665": [
          "push esi", 
          "push edi", 
          "call dword ptr [0x100108c]", 
          "mov esi, dword ptr [0x100111c]", 
          "jmp 0x1684"
        ]
      }, 
      {
        "basicblock_0x1684": [
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x1675"
        ]
      }, 
      {
        "basicblock_0x168c": [
          "mov cx, word ptr [eax]", 
          "xor edi, edi", 
          "test cx, cx", 
          "je 0x17c2"
        ]
      }, 
      {
        "basicblock_0x1675": [
          "cmp cx, 0x20", 
          "je 0x1681"
        ]
      }, 
      {
        "basicblock_0x169a": [
          "test edi, edi", 
          "jne 0x16aa"
        ]
      }, 
      {
        "basicblock_0x17c2": [
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x167b": [
          "cmp cx, 9", 
          "jne 0x168c"
        ]
      }, 
      {
        "basicblock_0x1681": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x1675"
        ]
      }, 
      {
        "basicblock_0x169e": [
          "cmp cx, 0x20", 
          "je 0x16c4"
        ]
      }, 
      {
        "basicblock_0x16aa": [
          "cmp cx, 0x22", 
          "jne 0x16b9"
        ]
      }, 
      {
        "basicblock_0x16a4": [
          "cmp cx, 9", 
          "je 0x16c4"
        ]
      }, 
      {
        "basicblock_0x16c4": [
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "je 0x17c2"
        ]
      }, 
      {
        "basicblock_0x16b0": [
          "xor ecx, ecx", 
          "test edi, edi", 
          "sete cl", 
          "mov edi, ecx", 
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x169a"
        ]
      }, 
      {
        "basicblock_0x16b9": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x169a"
        ]
      }, 
      {
        "basicblock_0x16d0": [
          "push 2", 
          "pop edi", 
          "movzx ecx, cx", 
          "sub ecx, 0x50", 
          "je 0x178a"
        ]
      }, 
      {
        "basicblock_0x16df": [
          "sub ecx, edi", 
          "je 0x173f"
        ]
      }, 
      {
        "basicblock_0x178a": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x1778"
        ]
      }, 
      {
        "basicblock_0x16e3": [
          "sub ecx, 5", 
          "je 0x1712"
        ]
      }, 
      {
        "basicblock_0x173f": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x172d"
        ]
      }, 
      {
        "basicblock_0x1795": [
          "push 0x1014008", 
          "push eax", 
          "call 0x1630", 
          "cmp dword ptr [0x1014008], 0x40", 
          "jle 0x17b3"
        ]
      }, 
      {
        "basicblock_0x1778": [
          "cmp cx, 0x3a", 
          "je 0x178a"
        ]
      }, 
      {
        "basicblock_0x16e8": [
          "sub ecx, 0x19", 
          "je 0x178a"
        ]
      }, 
      {
        "basicblock_0x1712": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x1700"
        ]
      }, 
      {
        "basicblock_0x174a": [
          "push 0x1014010", 
          "push eax", 
          "call 0x1630", 
          "mov ecx, dword ptr [0x1014010]", 
          "cmp ecx, 0x10", 
          "jle 0x176c"
        ]
      }, 
      {
        "basicblock_0x172d": [
          "cmp cx, 0x3a", 
          "je 0x173f"
        ]
      }, 
      {
        "basicblock_0x17a9": []
      }, 
      {
        "basicblock_0x17b3": [
          "push eax", 
          "call esi", 
          "mov cx, word ptr [eax]", 
          "test cx, cx", 
          "jne 0x16d3"
        ]
      }, 
      {
        "basicblock_0x177e": [
          "cmp cx, 0x20", 
          "je 0x178a"
        ]
      }, 
      {
        "basicblock_0x16f1": [
          "sub ecx, edi", 
          "je 0x173f"
        ]
      }, 
      {
        "basicblock_0x171d": [
          "push 0x1014014", 
          "push eax", 
          "call 0x1630", 
          "jmp 0x17b3"
        ]
      }, 
      {
        "basicblock_0x1700": [
          "cmp cx, 0x3a", 
          "je 0x1712"
        ]
      }, 
      {
        "basicblock_0x1760": []
      }, 
      {
        "basicblock_0x176c": [
          "cmp ecx, edi", 
          "jge 0x17b3"
        ]
      }, 
      {
        "basicblock_0x1733": [
          "cmp cx, 0x20", 
          "je 0x173f"
        ]
      }, 
      {
        "basicblock_0x16d3": [
          "movzx ecx, cx", 
          "sub ecx, 0x50", 
          "je 0x178a"
        ]
      }, 
      {
        "basicblock_0x1784": [
          "cmp cx, 9", 
          "jne 0x1795"
        ]
      }, 
      {
        "basicblock_0x16f5": [
          "sub ecx, 5", 
          "jne 0x17b3"
        ]
      }, 
      {
        "basicblock_0x1706": [
          "cmp cx, 0x20", 
          "je 0x1712"
        ]
      }, 
      {
        "basicblock_0x1770": [
          "mov dword ptr [0x1014010], edi", 
          "jmp 0x17b3"
        ]
      }, 
      {
        "basicblock_0x1739": [
          "cmp cx, 9", 
          "jne 0x174a"
        ]
      }, 
      {
        "basicblock_0x16fe": [
          "jmp 0x1712"
        ]
      }, 
      {
        "basicblock_0x170c": [
          "cmp cx, 9", 
          "jne 0x171d"
        ]
      }
    ]
  }, 
  {
    "func_0x17c7": [
      {
        "basicblock_0x17c7": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x30", 
          "push esi", 
          "xor esi, esi", 
          "cmp dword ptr [ebp + 8], esi", 
          "jne 0x1845"
        ]
      }, 
      {
        "basicblock_0x17d5": [
          "mov eax, dword ptr [0x1014a48]", 
          "push 0x100125c", 
          "push eax", 
          "mov dword ptr [ebp - 0x30], 0x30", 
          "mov dword ptr [ebp - 0x2c], esi", 
          "mov dword ptr [ebp - 0x28], 0x1006118", 
          "mov dword ptr [ebp - 0x24], esi", 
          "mov dword ptr [ebp - 0x20], 0x1e", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "call dword ptr [0x100112c]", 
          "push 0x7f00", 
          "push esi", 
          "mov dword ptr [ebp - 0x18], eax", 
          "call dword ptr [0x1001128]", 
          "push 0xf", 
          "mov dword ptr [ebp - 0x14], eax", 
          "call dword ptr [0x1001124]", 
          "mov dword ptr [ebp - 0x10], eax", 
          "lea eax, dword ptr [ebp - 0x30]", 
          "push eax", 
          "mov dword ptr [ebp - 0xc], 0x6a", 
          "mov dword ptr [ebp - 8], 0x1014018", 
          "mov dword ptr [ebp - 4], esi", 
          "call dword ptr [0x1001120]", 
          "test ax, ax", 
          "jne 0x1845"
        ]
      }, 
      {
        "basicblock_0x1845": [
          "xor eax, eax", 
          "inc eax", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1841": [
          "xor eax, eax", 
          "jmp 0x1848"
        ]
      }, 
      {
        "basicblock_0x1848": [
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x12801": [
      {
        "basicblock_0x12801": [
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr fs:[0], ecx", 
          "pop ecx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "push ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x12670": [
      {
        "basicblock_0x12670": [
          "jmp dword ptr [0x10011c0]"
        ]
      }
    ]
  }, 
  {
    "func_0x1e47": [
      {
        "basicblock_0x1e47": [
          "push esi", 
          "push edi", 
          "push 0x1014dc0", 
          "call 0x21ff"
        ]
      }
    ]
  }, 
  {
    "func_0x1a17": [
      {
        "basicblock_0x1a17": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x80", 
          "push ebx", 
          "push esi", 
          "xor esi, esi", 
          "push edi", 
          "mov dword ptr [ebp - 4], esi", 
          "mov dword ptr [ebp - 0x30], esi", 
          "mov dword ptr [ebp - 0x2c], esi", 
          "mov dword ptr [ebp - 0x28], esi", 
          "mov dword ptr [ebp - 0x24], esi", 
          "call 0x184d", 
          "mov eax, dword ptr [0x101402c]", 
          "push 5", 
          "push 0x101402c", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, dword ptr [0x1014038]", 
          "push 0x10012c0", 
          "mov dword ptr [ebp - 0xc], eax", 
          "mov eax, dword ptr [0x1014000]", 
          "push 0x10012ac", 
          "mov dword ptr [0x1014db8], esi", 
          "mov esi, dword ptr [0x1001084]", 
          "mov ebx, 0x10012a0", 
          "push ebx", 
          "mov dword ptr [ebp - 8], eax", 
          "call esi", 
          "push 5", 
          "push 0x1014038", 
          "push 0x100129c", 
          "push 0x1001288", 
          "push ebx", 
          "call esi", 
          "push 0x10", 
          "pop ecx", 
          "xor eax, eax", 
          "push 0x20", 
          "lea edi, dword ptr [ebp - 0x80]", 
          "rep stosd dword ptr es:[edi], eax", 
          "lea eax, dword ptr [ebp - 0x80]", 
          "push eax", 
          "push 0x1001280", 
          "push 0x100126c", 
          "push ebx", 
          "call esi", 
          "lea eax, dword ptr [ebp - 0x80]", 
          "push eax", 
          "call 0x4459", 
          "xor esi, esi", 
          "inc esi", 
          "cmp eax, dword ptr [ebp - 8]", 
          "mov dword ptr [0x1014000], eax", 
          "je 0x1ac0"
        ]
      }, 
      {
        "basicblock_0x1abd": [
          "mov dword ptr [ebp - 4], esi", 
          "mov ax, word ptr [ebp - 0xc]", 
          "cmp word ptr [0x1014038], ax", 
          "je 0x1ad0"
        ]
      }, 
      {
        "basicblock_0x1ac0": [
          "mov ax, word ptr [ebp - 0xc]", 
          "cmp word ptr [0x1014038], ax", 
          "je 0x1ad0"
        ]
      }, 
      {
        "basicblock_0x1acd": [
          "mov dword ptr [ebp - 4], esi", 
          "mov eax, dword ptr [0x101402c]", 
          "cmp ax, word ptr [ebp - 0x10]", 
          "je 0x1af3"
        ]
      }, 
      {
        "basicblock_0x1ad0": [
          "mov eax, dword ptr [0x101402c]", 
          "cmp ax, word ptr [ebp - 0x10]", 
          "je 0x1af3"
        ]
      }, 
      {
        "basicblock_0x1adb": [
          "mov edi, eax", 
          "push edi", 
          "push 0x1014dc0", 
          "call 0x2597", 
          "mov eax, dword ptr [0x1014a64]", 
          "mov word ptr [eax], di", 
          "mov dword ptr [ebp - 4], esi", 
          "push 0xc", 
          "pop eax", 
          "xor edi, edi", 
          "push edi", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "push ecx", 
          "push eax", 
          "push 0x42", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "call dword ptr [0x1001184]", 
          "test eax, eax", 
          "je 0x1b22"
        ]
      }, 
      {
        "basicblock_0x1af3": [
          "push 0xc", 
          "pop eax", 
          "xor edi, edi", 
          "push edi", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "push ecx", 
          "push eax", 
          "push 0x42", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "call dword ptr [0x1001184]", 
          "test eax, eax", 
          "je 0x1b22"
        ]
      }, 
      {
        "basicblock_0x1b0d": [
          "mov eax, dword ptr [ebp - 0x18]", 
          "and eax, esi", 
          "cmp eax, dword ptr [0x1014d9c]", 
          "je 0x1b22"
        ]
      }, 
      {
        "basicblock_0x1b22": [
          "cmp dword ptr [ebp + 8], edi", 
          "je 0x1e2d"
        ]
      }, 
      {
        "basicblock_0x1b1a": [
          "mov dword ptr [0x1014d9c], eax", 
          "mov dword ptr [ebp - 4], esi", 
          "cmp dword ptr [ebp + 8], edi", 
          "je 0x1e2d"
        ]
      }, 
      {
        "basicblock_0x1b2b": [
          "mov eax, dword ptr [0x1014d6c]", 
          "cmp eax, edi", 
          "mov ebx, dword ptr [0x1001180]", 
          "mov dword ptr [ebp - 4], edi", 
          "je 0x1b77"
        ]
      }, 
      {
        "basicblock_0x1e2d": [
          "cmp dword ptr [ebp - 4], edi", 
          "je 0x1e40"
        ]
      }, 
      {
        "basicblock_0x1b3d": [
          "push dword ptr [0x1014d80]", 
          "push eax", 
          "call dword ptr [0x100117c]", 
          "lea eax, dword ptr [ebp - 0x30]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "mov dword ptr [ebp - 4], esi", 
          "call ebx", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001178]", 
          "push dword ptr [0x1014d7c]", 
          "call dword ptr [0x1001174]", 
          "mov dword ptr [0x1014d7c], edi", 
          "cmp dword ptr [0x1014d48], edi", 
          "mov esi, dword ptr [0x1001170]", 
          "push edi", 
          "push edi", 
          "push edi", 
          "je 0x1bda"
        ]
      }, 
      {
        "basicblock_0x1b77": [
          "cmp dword ptr [0x1014d48], edi", 
          "mov esi, dword ptr [0x1001170]", 
          "push edi", 
          "push edi", 
          "push edi", 
          "je 0x1bda"
        ]
      }, 
      {
        "basicblock_0x1e32": [
          "push esi", 
          "push edi", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001130]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1e40": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1b88": [
          "push 0x66", 
          "push dword ptr [0x1014a48]", 
          "call dword ptr [0x100116c]", 
          "push eax", 
          "mov dword ptr [0x1014d6c], eax", 
          "call dword ptr [0x10010a4]", 
          "cmp dword ptr [0x1014da0], edi", 
          "mov dword ptr [0x1014d80], eax", 
          "je 0x1cf0"
        ]
      }, 
      {
        "basicblock_0x1bda": [
          "push 0x65", 
          "push dword ptr [0x1014a48]", 
          "call dword ptr [0x100116c]", 
          "push eax", 
          "mov dword ptr [0x1014d6c], eax", 
          "call dword ptr [0x10010a4]", 
          "push 0x6c", 
          "push dword ptr [0x1014a48]", 
          "mov dword ptr [0x1014d80], eax", 
          "call dword ptr [0x1001160]", 
          "cmp dword ptr [0x1014da0], edi", 
          "mov dword ptr [0x1014d7c], eax", 
          "je 0x1c36"
        ]
      }, 
      {
        "basicblock_0x1bb3": [
          "push -0x14", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001168]", 
          "or eax, 0x500000", 
          "push eax", 
          "push -0x14", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001164]", 
          "jmp 0x1cf0"
        ]
      }, 
      {
        "basicblock_0x1cf0": [
          "push 0x193", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "mov esi, eax", 
          "cmp esi, edi", 
          "je 0x1d23"
        ]
      }, 
      {
        "basicblock_0x1c14": [
          "push -0x14", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001168]", 
          "or eax, 0x500000", 
          "push eax", 
          "push -0x14", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001164]", 
          "mov dword ptr [ebp + 8], 0x76", 
          "push edi", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "inc dword ptr [ebp + 8]", 
          "cmp dword ptr [ebp + 8], 0x79", 
          "jle 0x1c3d"
        ]
      }, 
      {
        "basicblock_0x1c36": [
          "mov dword ptr [ebp + 8], 0x76", 
          "push edi", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "inc dword ptr [ebp + 8]", 
          "cmp dword ptr [ebp + 8], 0x79", 
          "jle 0x1c3d"
        ]
      }, 
      {
        "basicblock_0x1d03": [
          "push -4", 
          "push esi", 
          "call dword ptr [0x1001168]", 
          "cmp eax, edi", 
          "mov dword ptr [0x1014f10], eax", 
          "je 0x1d23"
        ]
      }, 
      {
        "basicblock_0x1d23": [
          "cmp dword ptr [ebp - 4], edi", 
          "je 0x1d3f"
        ]
      }, 
      {
        "basicblock_0x1c59": [
          "push dword ptr [0x1014d54]", 
          "push dword ptr [0x1014d50]", 
          "push 0xa", 
          "call 0x6626", 
          "cmp dword ptr [0x1014008], 0x20", 
          "jle 0x1cf0"
        ]
      }, 
      {
        "basicblock_0x1c3d": [
          "push edi", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "inc dword ptr [ebp + 8]", 
          "cmp dword ptr [ebp + 8], 0x79", 
          "jle 0x1c3d"
        ]
      }, 
      {
        "basicblock_0x1d15": [
          "push 0x100652a", 
          "push -4", 
          "push esi", 
          "call dword ptr [0x1001164]", 
          "cmp dword ptr [ebp - 4], edi", 
          "je 0x1d3f"
        ]
      }, 
      {
        "basicblock_0x1d28": [
          "push 5", 
          "push edi", 
          "push edi", 
          "push dword ptr [ebp - 0x2c]", 
          "push dword ptr [ebp - 0x30]", 
          "push edi", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100114c]", 
          "mov ebx, dword ptr [0x1001148]", 
          "xor eax, eax", 
          "cmp dword ptr [0x1014d48], edi", 
          "push edi", 
          "setne al", 
          "mov esi, 0x130", 
          "add eax, esi", 
          "push eax", 
          "push 0x131", 
          "push esi", 
          "push dword ptr [0x1014d80]", 
          "call ebx", 
          "mov eax, dword ptr [0x1014d4c]", 
          "neg eax", 
          "sbb eax, eax", 
          "and eax, 8", 
          "push eax", 
          "push 0x12f", 
          "push dword ptr [0x1014d80]", 
          "call dword ptr [0x1001144]", 
          "mov eax, dword ptr [0x1014d7c]", 
          "cmp eax, edi", 
          "je 0x1dc4"
        ]
      }, 
      {
        "basicblock_0x1d3f": [
          "mov ebx, dword ptr [0x1001148]", 
          "xor eax, eax", 
          "cmp dword ptr [0x1014d48], edi", 
          "push edi", 
          "setne al", 
          "mov esi, 0x130", 
          "add eax, esi", 
          "push eax", 
          "push 0x131", 
          "push esi", 
          "push dword ptr [0x1014d80]", 
          "call ebx", 
          "mov eax, dword ptr [0x1014d4c]", 
          "neg eax", 
          "sbb eax, eax", 
          "and eax, 8", 
          "push eax", 
          "push 0x12f", 
          "push dword ptr [0x1014d80]", 
          "call dword ptr [0x1001144]", 
          "mov eax, dword ptr [0x1014d7c]", 
          "cmp eax, edi", 
          "je 0x1dc4"
        ]
      }, 
      {
        "basicblock_0x1c75": [
          "push 0x193", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "push ecx", 
          "push eax", 
          "mov dword ptr [ebp + 8], eax", 
          "call ebx", 
          "lea eax, dword ptr [ebp - 0x40]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001158]", 
          "push 2", 
          "lea eax, dword ptr [ebp - 0x40]", 
          "push eax", 
          "push edi", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001154]", 
          "mov ecx, dword ptr [ebp - 0x38]", 
          "sub ecx, dword ptr [ebp - 0x18]", 
          "mov eax, dword ptr [ebp - 0x40]", 
          "add ecx, eax", 
          "mov dword ptr [ebp - 0x20], ecx", 
          "mov ecx, dword ptr [ebp - 0x3c]", 
          "neg ecx", 
          "push ecx", 
          "neg eax", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "call dword ptr [0x1001150]", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "sub eax, dword ptr [ebp - 0x1c]", 
          "push 0x14", 
          "push eax", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "sub eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "push dword ptr [ebp - 0x1c]", 
          "push dword ptr [ebp - 0x20]", 
          "push edi", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x100114c]", 
          "push 0x193", 
          "push dword ptr [0x1014d6c]", 
          "call esi", 
          "mov esi, eax", 
          "cmp esi, edi", 
          "je 0x1d23"
        ]
      }, 
      {
        "basicblock_0x1d8e": [
          "xor ecx, ecx", 
          "cmp dword ptr [0x1014d48], edi", 
          "push edi", 
          "setne cl", 
          "add ecx, esi", 
          "push ecx", 
          "push 0x131", 
          "push esi", 
          "push eax", 
          "call ebx", 
          "mov eax, dword ptr [0x1014d4c]", 
          "neg eax", 
          "sbb eax, eax", 
          "and eax, 8", 
          "push eax", 
          "push 0x12f", 
          "push dword ptr [0x1014d7c]", 
          "call dword ptr [0x1001144]", 
          "or dword ptr [0x1014278], 0xffffffff", 
          "push 0xa", 
          "call 0x675b", 
          "push dword ptr [0x1014d94]", 
          "call 0xbd61", 
          "test eax, eax", 
          "mov eax, 0x1014da4", 
          "jne 0x1deb"
        ]
      }, 
      {
        "basicblock_0x1dc4": [
          "or dword ptr [0x1014278], 0xffffffff", 
          "push 0xa", 
          "call 0x675b", 
          "push dword ptr [0x1014d94]", 
          "call 0xbd61", 
          "test eax, eax", 
          "mov eax, 0x1014da4", 
          "jne 0x1deb"
        ]
      }, 
      {
        "basicblock_0x1de6": [
          "mov eax, 0x1001264", 
          "push eax", 
          "push 0x191", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001140]", 
          "push edi", 
          "push 3", 
          "push 0x127", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100113c]", 
          "push 5", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001138]", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001134]", 
          "jmp 0x1e40"
        ]
      }, 
      {
        "basicblock_0x1deb": [
          "push eax", 
          "push 0x191", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001140]", 
          "push edi", 
          "push 3", 
          "push 0x127", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100113c]", 
          "push 5", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001138]", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x1001134]", 
          "jmp 0x1e40"
        ]
      }
    ]
  }, 
  {
    "func_0x21ff": [
      {
        "basicblock_0x21ff": [
          "push esi", 
          "mov esi, dword ptr [esp + 8]", 
          "lea eax, dword ptr [esi + 8]", 
          "push eax", 
          "call 0x21d1", 
          "lea eax, dword ptr [esi + 0x98]", 
          "push eax", 
          "call 0x21d1", 
          "and dword ptr [esi], 0", 
          "or dword ptr [esi + 4], 0xffffffff", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x184d": [
      {
        "basicblock_0x184d": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "push 0x1014dc0", 
          "call 0x21ff", 
          "push dword ptr [0x1014d90]"
        ]
      }
    ]
  }, 
  {
    "func_0x4459": [
      {
        "basicblock_0x4459": [
          "push ebp", 
          "mov ebp, esp", 
          "mov eax, dword ptr [ebp + 8]", 
          "push edi", 
          "xor edi, edi", 
          "cmp eax, edi", 
          "jne 0x446a"
        ]
      }, 
      {
        "basicblock_0x4466": [
          "xor eax, eax", 
          "jmp 0x44af"
        ]
      }, 
      {
        "basicblock_0x446a": [
          "push ebx", 
          "xor ebx, ebx", 
          "cmp word ptr [eax], di", 
          "push esi", 
          "mov esi, eax", 
          "je 0x44ab"
        ]
      }, 
      {
        "basicblock_0x44af": [
          "pop edi", 
          "pop ebp", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x4475": [
          "push 0xa", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "push esi", 
          "call dword ptr [0x10011c4]", 
          "add esp, 0xc", 
          "test eax, eax", 
          "jbe 0x4497"
        ]
      }, 
      {
        "basicblock_0x44ab": [
          "pop esi", 
          "mov eax, ebx", 
          "pop ebx", 
          "pop edi", 
          "pop ebp", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x4489": [
          "cmp eax, 0x10", 
          "jae 0x4497"
        ]
      }, 
      {
        "basicblock_0x4497": [
          "mov eax, dword ptr [ebp + 8]", 
          "test eax, eax", 
          "je 0x44a3"
        ]
      }, 
      {
        "basicblock_0x448e": [
          "mov ecx, edi", 
          "shl eax, cl", 
          "add edi, 4", 
          "or ebx, eax", 
          "mov eax, dword ptr [ebp + 8]", 
          "test eax, eax", 
          "je 0x44a3"
        ]
      }, 
      {
        "basicblock_0x449e": [
          "lea esi, dword ptr [eax + 2]", 
          "jmp 0x44a5"
        ]
      }, 
      {
        "basicblock_0x44a3": [
          "inc esi", 
          "inc esi", 
          "cmp word ptr [esi], 0", 
          "jne 0x4475"
        ]
      }, 
      {
        "basicblock_0x44a5": [
          "cmp word ptr [esi], 0", 
          "jne 0x4475"
        ]
      }
    ]
  }, 
  {
    "func_0x21d1": [
      {
        "basicblock_0x21d1": [
          "push esi", 
          "mov esi, dword ptr [esp + 8]", 
          "and dword ptr [esi + 4], 0", 
          "push edi", 
          "push 0x1001310", 
          "lea edi, dword ptr [esi + 0xc]", 
          "push edi", 
          "mov dword ptr [esi], 1", 
          "call dword ptr [0x1001090]", 
          "push edi", 
          "call dword ptr [0x1001074]", 
          "pop edi", 
          "mov dword ptr [esi + 8], eax", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x1630": [
      {
        "basicblock_0x1630": [
          "mov eax, dword ptr [esp + 4]", 
          "push esi", 
          "xor esi, esi", 
          "jmp 0x1652"
        ]
      }, 
      {
        "basicblock_0x1652": [
          "mov cx, word ptr [eax]", 
          "cmp cx, 0x30", 
          "jae 0x1639"
        ]
      }, 
      {
        "basicblock_0x165b": [
          "mov ecx, dword ptr [esp + 0xc]", 
          "mov dword ptr [ecx], esi", 
          "pop esi", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x1639": [
          "cmp cx, 0x39", 
          "ja 0x165b"
        ]
      }, 
      {
        "basicblock_0x163f": [
          "movzx ecx, cx", 
          "lea edx, dword ptr [esi + esi*4]", 
          "push eax", 
          "lea esi, dword ptr [ecx + edx*2 - 0x30]", 
          "call dword ptr [0x100111c]", 
          "xor ecx, ecx", 
          "mov cx, word ptr [eax]", 
          "cmp cx, 0x30", 
          "jae 0x1639"
        ]
      }
    ]
  }, 
  {
    "func_0x2597": [
      {
        "basicblock_0x2597": [
          "mov ecx, dword ptr [esp + 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "cmp eax, 0xff", 
          "je 0x25af"
        ]
      }, 
      {
        "basicblock_0x25a3": [
          "mov dx, word ptr [0x101402c]", 
          "mov word ptr [ecx + eax*2 + 0x14], dx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x25af": [
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x6626": [
      {
        "basicblock_0x6626": [
          "cmp dword ptr [esp + 4], 0xa", 
          "push ebx", 
          "push ebp", 
          "push esi", 
          "push edi", 
          "mov ebp, 0x139", 
          "mov ebx, 0x136", 
          "jne 0x6682"
        ]
      }, 
      {
        "basicblock_0x663b": [
          "mov esi, dword ptr [esp + 0x18]", 
          "mov eax, dword ptr [0x1014d80]", 
          "add esi, 0x13a", 
          "test eax, eax", 
          "mov dword ptr [esp + 0x18], esi", 
          "je 0x665f"
        ]
      }, 
      {
        "basicblock_0x6682": [
          "mov esi, dword ptr [esp + 0x1c]", 
          "mov eax, dword ptr [0x1014d7c]", 
          "add esi, 0x136", 
          "test eax, eax", 
          "je 0x66a2"
        ]
      }, 
      {
        "basicblock_0x6652": [
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100117c]", 
          "push 0", 
          "push esi", 
          "mov esi, 0x13c", 
          "push esi", 
          "mov edi, 0x13a", 
          "push edi", 
          "push dword ptr [0x1014d80]", 
          "call dword ptr [0x1001148]", 
          "push dword ptr [esp + 0x18]", 
          "push esi", 
          "push edi", 
          "jmp 0x66b6"
        ]
      }, 
      {
        "basicblock_0x665f": [
          "push 0", 
          "push esi", 
          "mov esi, 0x13c", 
          "push esi", 
          "mov edi, 0x13a", 
          "push edi", 
          "push dword ptr [0x1014d80]", 
          "call dword ptr [0x1001148]", 
          "push dword ptr [esp + 0x18]", 
          "push esi", 
          "push edi", 
          "jmp 0x66b6"
        ]
      }, 
      {
        "basicblock_0x6695": [
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100117c]", 
          "push 0", 
          "push esi", 
          "push ebp", 
          "push ebx", 
          "push dword ptr [0x1014d7c]", 
          "call dword ptr [0x1001148]", 
          "push esi", 
          "push ebp", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100110c]", 
          "mov esi, dword ptr [esp + 0x14]", 
          "mov edi, dword ptr [0x1001170]", 
          "xor eax, eax", 
          "cmp esi, 0xa", 
          "setne al", 
          "sub esi, 0xa", 
          "neg esi", 
          "sbb esi, esi", 
          "and esi, 5", 
          "mov dword ptr [esp + 0x18], eax", 
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "push esi", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc ebx", 
          "cmp ebx, ebp", 
          "jle 0x66e2"
        ]
      }, 
      {
        "basicblock_0x66a2": [
          "push 0", 
          "push esi", 
          "push ebp", 
          "push ebx", 
          "push dword ptr [0x1014d7c]", 
          "call dword ptr [0x1001148]", 
          "push esi", 
          "push ebp", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100110c]", 
          "mov esi, dword ptr [esp + 0x14]", 
          "mov edi, dword ptr [0x1001170]", 
          "xor eax, eax", 
          "cmp esi, 0xa", 
          "setne al", 
          "sub esi, 0xa", 
          "neg esi", 
          "sbb esi, esi", 
          "and esi, 5", 
          "mov dword ptr [esp + 0x18], eax", 
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "push esi", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc ebx", 
          "cmp ebx, ebp", 
          "jle 0x66e2"
        ]
      }, 
      {
        "basicblock_0x66b6": [
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100110c]", 
          "mov esi, dword ptr [esp + 0x14]", 
          "mov edi, dword ptr [0x1001170]", 
          "xor eax, eax", 
          "cmp esi, 0xa", 
          "setne al", 
          "sub esi, 0xa", 
          "neg esi", 
          "sbb esi, esi", 
          "and esi, 5", 
          "mov dword ptr [esp + 0x18], eax", 
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "push esi", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc ebx", 
          "cmp ebx, ebp", 
          "jle 0x66e2"
        ]
      }, 
      {
        "basicblock_0x670c": [
          "xor ebx, ebx", 
          "cmp dword ptr [esp + 0x14], 0xa", 
          "mov esi, 0x13a", 
          "sete bl", 
          "push ebx", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "cmp dword ptr [esp + 0x14], 0xa", 
          "je 0x6737"
        ]
      }, 
      {
        "basicblock_0x66e2": [
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "push esi", 
          "push ebx", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc ebx", 
          "cmp ebx, ebp", 
          "jle 0x66e2"
        ]
      }, 
      {
        "basicblock_0x6733": [
          "xor eax, eax", 
          "jmp 0x673a"
        ]
      }, 
      {
        "basicblock_0x6737": [
          "push 5", 
          "pop eax", 
          "push eax", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc esi", 
          "cmp esi, 0x13c", 
          "jle 0x671b"
        ]
      }, 
      {
        "basicblock_0x673a": [
          "push eax", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x1001138]", 
          "inc esi", 
          "cmp esi, 0x13c", 
          "jle 0x671b"
        ]
      }, 
      {
        "basicblock_0x6754": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x671b": [
          "push ebx", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call edi", 
          "push eax", 
          "call dword ptr [0x100115c]", 
          "cmp dword ptr [esp + 0x14], 0xa", 
          "je 0x6737"
        ]
      }
    ]
  }, 
  {
    "func_0x675b": [
      {
        "basicblock_0x675b": [
          "push ebx", 
          "push ebp", 
          "push esi", 
          "mov esi, dword ptr [esp + 0x10]", 
          "cmp esi, 2", 
          "push edi", 
          "mov edi, 0x133", 
          "mov ebx, 0x135", 
          "mov ebp, 0x132", 
          "je 0x67af"
        ]
      }, 
      {
        "basicblock_0x6777": [
          "cmp esi, 8", 
          "je 0x67a8"
        ]
      }, 
      {
        "basicblock_0x67af": [
          "mov edi, ebx", 
          "push dword ptr [0x1014d54]", 
          "push dword ptr [0x1014d50]", 
          "push esi", 
          "call 0x6626", 
          "push 0", 
          "push edi", 
          "push ebx", 
          "push ebp", 
          "push 1", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x10010a4]", 
          "push eax", 
          "call dword ptr [0x1001108]", 
          "push eax", 
          "call dword ptr [0x1001148]", 
          "push edi", 
          "push ebx", 
          "push ebp", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100110c]", 
          "mov dword ptr [0x1014010], esi", 
          "call 0x5291", 
          "call 0x6568", 
          "call 0x45c4", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x677c": [
          "cmp esi, 0xa", 
          "je 0x67b1"
        ]
      }, 
      {
        "basicblock_0x67a8": [
          "mov edi, 0x134", 
          "jmp 0x67b1"
        ]
      }, 
      {
        "basicblock_0x6781": [
          "cmp esi, 0x10", 
          "je 0x67a4"
        ]
      }, 
      {
        "basicblock_0x67b1": [
          "push dword ptr [0x1014d54]", 
          "push dword ptr [0x1014d50]", 
          "push esi", 
          "call 0x6626", 
          "push 0", 
          "push edi", 
          "push ebx", 
          "push ebp", 
          "push 1", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x10010a4]", 
          "push eax", 
          "call dword ptr [0x1001108]", 
          "push eax", 
          "call dword ptr [0x1001148]", 
          "push edi", 
          "push ebx", 
          "push ebp", 
          "push dword ptr [0x1014d6c]", 
          "call dword ptr [0x100110c]", 
          "mov dword ptr [0x1014010], esi", 
          "call 0x5291", 
          "call 0x6568", 
          "call 0x45c4", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x6786": [
          "cmp esi, 0x131", 
          "jbe 0x67b1"
        ]
      }, 
      {
        "basicblock_0x67a4": [
          "mov edi, ebp", 
          "jmp 0x67b1"
        ]
      }, 
      {
        "basicblock_0x678e": [
          "cmp esi, ebx", 
          "ja 0x67b1"
        ]
      }, 
      {
        "basicblock_0x6792": [
          "mov eax, esi", 
          "shl eax, 2", 
          "mov ecx, 0x101476c", 
          "sub ecx, eax", 
          "mov edi, esi", 
          "mov esi, dword ptr [ecx]", 
          "jmp 0x67b1"
        ]
      }
    ]
  }, 
  {
    "func_0xbd61": [
      {
        "basicblock_0xbd61": [
          "mov eax, dword ptr [esp + 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x11a18": [
      {
        "basicblock_0x11a18": [
          "mov ecx, dword ptr [esp + 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "add ecx, 0xc", 
          "jmp 0x11a2e"
        ]
      }, 
      {
        "basicblock_0x11a2e": [
          "test eax, eax", 
          "jg 0x11a24"
        ]
      }, 
      {
        "basicblock_0x11a32": [
          "xor eax, eax", 
          "inc eax", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x11a24": [
          "mov edx, dword ptr [ecx]", 
          "dec eax", 
          "add ecx, 4", 
          "test edx, edx", 
          "jne 0x11a38"
        ]
      }, 
      {
        "basicblock_0x11a38": [
          "xor eax, eax", 
          "jmp 0x11a35"
        ]
      }, 
      {
        "basicblock_0x11a35": [
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x5291": [
      {
        "basicblock_0x5291": [
          "call 0x526a", 
          "mov eax, dword ptr [0x1014010]", 
          "cmp eax, 0xa", 
          "jne 0x52a9"
        ]
      }, 
      {
        "basicblock_0x52a0": [
          "push dword ptr [0x10149d8]", 
          "push eax", 
          "jmp 0x52b2"
        ]
      }, 
      {
        "basicblock_0x52a9": [
          "mov ecx, dword ptr [0x10149d8]", 
          "inc ecx", 
          "push ecx", 
          "push eax", 
          "call 0xabdd", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x52b2": [
          "call 0xabdd", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x6568": [
      {
        "basicblock_0x6568": [
          "mov eax, dword ptr [0x1014278]", 
          "mov ecx, dword ptr [0x1014010]", 
          "cmp eax, ecx", 
          "je 0x6602"
        ]
      }, 
      {
        "basicblock_0x657b": [
          "xor edx, edx", 
          "cmp ecx, 0xa", 
          "push ebx", 
          "mov ebx, dword ptr [0x1001170]", 
          "sete dl", 
          "cmp eax, 0xa", 
          "push ebp", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [0x100115c]", 
          "mov ebp, edx", 
          "je 0x659e"
        ]
      }, 
      {
        "basicblock_0x6602": [
          "mov eax, dword ptr [0x1014010]", 
          "mov dword ptr [0x1014278], eax", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x659a": [
          "test ebp, ebp", 
          "je 0x65ba"
        ]
      }, 
      {
        "basicblock_0x659e": [
          "xor esi, esi", 
          "push ebp", 
          "push dword ptr [esi + 0x101427c]", 
          "push dword ptr [0x1014d6c]", 
          "call ebx", 
          "push eax", 
          "call edi", 
          "add esi, 4", 
          "cmp esi, 0x1c", 
          "jbe 0x65a0"
        ]
      }, 
      {
        "basicblock_0x65ba": [
          "push 2", 
          "pop esi", 
          "cmp dword ptr [0x1014010], esi", 
          "jle 0x65e4"
        ]
      }, 
      {
        "basicblock_0x65a0": [
          "push ebp", 
          "push dword ptr [esi + 0x101427c]", 
          "push dword ptr [0x1014d6c]", 
          "call ebx", 
          "push eax", 
          "call edi", 
          "add esi, 4", 
          "cmp esi, 0x1c", 
          "jbe 0x65a0"
        ]
      }, 
      {
        "basicblock_0x65c5": [
          "push 1", 
          "lea eax, dword ptr [esi + 0x7c]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call ebx", 
          "push eax", 
          "call edi", 
          "inc esi", 
          "cmp esi, dword ptr [0x1014010]", 
          "jl 0x65c5"
        ]
      }, 
      {
        "basicblock_0x65e4": [
          "add esi, 0x7c", 
          "push 0", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call ebx", 
          "push eax", 
          "call edi", 
          "inc esi", 
          "cmp esi, 0x8c", 
          "jl 0x65e7"
        ]
      }, 
      {
        "basicblock_0x65df": [
          "cmp esi, 0x10", 
          "jge 0x65fe"
        ]
      }, 
      {
        "basicblock_0x65fe": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "mov eax, dword ptr [0x1014010]", 
          "mov dword ptr [0x1014278], eax", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x65e7": [
          "push 0", 
          "push esi", 
          "push dword ptr [0x1014d6c]", 
          "call ebx", 
          "push eax", 
          "call edi", 
          "inc esi", 
          "cmp esi, 0x8c", 
          "jl 0x65e7"
        ]
      }
    ]
  }, 
  {
    "func_0x45c4": [
      {
        "basicblock_0x45c4": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x200", 
          "push ebx", 
          "push 1", 
          "call 0x25b2", 
          "xor ebx, ebx", 
          "cmp dword ptr [0x1014db8], ebx", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x45e3": [
          "mov eax, dword ptr [0x1014064]", 
          "cmp eax, ebx", 
          "je 0x4673"
        ]
      }, 
      {
        "basicblock_0x4673": [
          "cmp dword ptr [0x1014d90], ebx", 
          "push esi", 
          "je 0x473e"
        ]
      }, 
      {
        "basicblock_0x45f0": [
          "push dword ptr [0x1014d90]", 
          "push eax", 
          "call 0x8b8c", 
          "test eax, eax", 
          "je 0x4673"
        ]
      }, 
      {
        "basicblock_0x4680": [
          "push edi", 
          "push dword ptr [0x1014064]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014064], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014064], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014064]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014d90]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014064]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014d90]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014064]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014064]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014064]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014d90]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014064]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014d90]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014064]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "pop edi", 
          "mov ecx, dword ptr [0x1014d48]", 
          "mov eax, dword ptr [0x1014008]", 
          "mov esi, dword ptr [0x1014d68]", 
          "mov edx, dword ptr [0x1014d4c]", 
          "mov dword ptr [0x1014074], ecx", 
          "mov ecx, dword ptr [0x1014d54]", 
          "mov dword ptr [0x1014078], ecx", 
          "xor ecx, ecx", 
          "mov dword ptr [0x1014068], eax", 
          "mov eax, dword ptr [0x1014010]", 
          "cmp eax, 0xa", 
          "setne cl", 
          "mov dword ptr [0x101406c], eax", 
          "mov dword ptr [0x1014070], esi", 
          "mov dword ptr [0x1014084], edx", 
          "mov dword ptr [0x101407c], ecx", 
          "mov ecx, dword ptr [0x1014db8]", 
          "cmp ecx, ebx", 
          "mov dword ptr [0x1014080], ecx", 
          "je 0x47b5"
        ]
      }, 
      {
        "basicblock_0x473e": [
          "mov ecx, dword ptr [0x1014d48]", 
          "mov eax, dword ptr [0x1014008]", 
          "mov esi, dword ptr [0x1014d68]", 
          "mov edx, dword ptr [0x1014d4c]", 
          "mov dword ptr [0x1014074], ecx", 
          "mov ecx, dword ptr [0x1014d54]", 
          "mov dword ptr [0x1014078], ecx", 
          "xor ecx, ecx", 
          "mov dword ptr [0x1014068], eax", 
          "mov eax, dword ptr [0x1014010]", 
          "cmp eax, 0xa", 
          "setne cl", 
          "mov dword ptr [0x101406c], eax", 
          "mov dword ptr [0x1014070], esi", 
          "mov dword ptr [0x1014084], edx", 
          "mov dword ptr [0x101407c], ecx", 
          "mov ecx, dword ptr [0x1014db8]", 
          "cmp ecx, ebx", 
          "mov dword ptr [0x1014080], ecx", 
          "je 0x47b5"
        ]
      }, 
      {
        "basicblock_0x4600": [
          "mov eax, dword ptr [0x1014068]", 
          "cmp eax, dword ptr [0x1014008]", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x47a0": [
          "push eax", 
          "push 0x1014dc0", 
          "push 0x1014db0", 
          "call 0x22f9", 
          "jmp 0x485c"
        ]
      }, 
      {
        "basicblock_0x47b5": [
          "cmp eax, 0xa", 
          "jne 0x47d1"
        ]
      }, 
      {
        "basicblock_0x460d": [
          "mov eax, dword ptr [0x1014010]", 
          "cmp dword ptr [0x101406c], eax", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x485c": [
          "mov ecx, dword ptr [0x1014db0]", 
          "cmp dword ptr [0x1014d4c], ebx", 
          "pop esi", 
          "jne 0x4880"
        ]
      }, 
      {
        "basicblock_0x47ba": [
          "push esi", 
          "push eax", 
          "push dword ptr [0x1014d90]", 
          "push 0x1014db0", 
          "call 0x5540", 
          "jmp 0x485c"
        ]
      }, 
      {
        "basicblock_0x47d1": [
          "mov esi, 0x1014d90", 
          "push esi", 
          "call 0x8a54", 
          "push dword ptr [0x1014f84]", 
          "push dword ptr [0x1014d90]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0x480c"
        ]
      }, 
      {
        "basicblock_0x461a": [
          "mov ecx, dword ptr [0x1014070]", 
          "cmp ecx, dword ptr [0x1014d68]", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x486b": [
          "push 0xfe", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "call dword ptr [0x1001060]", 
          "jmp 0x48e9"
        ]
      }, 
      {
        "basicblock_0x4880": [
          "mov eax, dword ptr [0x1014010]", 
          "dec eax", 
          "dec eax", 
          "je 0x48d7"
        ]
      }, 
      {
        "basicblock_0x47f1": [
          "mov eax, dword ptr [0x1014d90]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014f88]", 
          "push esi", 
          "call 0xbe29", 
          "push esi", 
          "call 0x5418", 
          "mov eax, dword ptr [0x1014d54]", 
          "push dword ptr [eax*4 + 0x1014d38]", 
          "push esi", 
          "call 0xc450", 
          "push ebx", 
          "push dword ptr [0x1014010]", 
          "push dword ptr [0x1014d90]", 
          "push 0x1014db0", 
          "call 0x5540", 
          "push dword ptr [0x1014db0]", 
          "call dword ptr [0x1001074]", 
          "dec eax", 
          "js 0x485c"
        ]
      }, 
      {
        "basicblock_0x480c": [
          "mov eax, dword ptr [0x1014d54]", 
          "push dword ptr [eax*4 + 0x1014d38]", 
          "push esi", 
          "call 0xc450", 
          "push ebx", 
          "push dword ptr [0x1014010]", 
          "push dword ptr [0x1014d90]", 
          "push 0x1014db0", 
          "call 0x5540", 
          "push dword ptr [0x1014db0]", 
          "call dword ptr [0x1001074]", 
          "dec eax", 
          "js 0x485c"
        ]
      }, 
      {
        "basicblock_0x4628": [
          "mov ecx, dword ptr [0x1014074]", 
          "cmp ecx, dword ptr [0x1014d48]", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x48e9": [
          "lea eax, dword ptr [ebp - 0x200]", 
          "push 0x1001364", 
          "push eax", 
          "call dword ptr [0x1001070]", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call 0x2604", 
          "push ebx", 
          "call 0x25b2", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x4889": [
          "sub eax, 6", 
          "je 0x48ca"
        ]
      }, 
      {
        "basicblock_0x48d7": [
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push ecx", 
          "push ebx", 
          "push 4", 
          "push 0x20", 
          "call 0x44b4", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push 0x1001364", 
          "push eax", 
          "call dword ptr [0x1001070]", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call 0x2604", 
          "push ebx", 
          "call 0x25b2", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x4844": [
          "mov ecx, dword ptr [0x1014db0]", 
          "lea eax, dword ptr [ecx + eax*2]", 
          "mov dx, word ptr [eax]", 
          "cmp dx, word ptr [0x101402c]", 
          "jne 0x4862"
        ]
      }, 
      {
        "basicblock_0x4636": [
          "mov ecx, dword ptr [0x1014084]", 
          "cmp ecx, dword ptr [0x1014d4c]", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x488e": [
          "dec eax", 
          "dec eax", 
          "je 0x48a7"
        ]
      }, 
      {
        "basicblock_0x48ca": [
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push ecx", 
          "push ebx", 
          "push 3", 
          "jmp 0x48e2"
        ]
      }, 
      {
        "basicblock_0x4859": [
          "mov word ptr [eax], bx", 
          "mov ecx, dword ptr [0x1014db0]", 
          "cmp dword ptr [0x1014d4c], ebx", 
          "pop esi", 
          "jne 0x4880"
        ]
      }, 
      {
        "basicblock_0x4862": [
          "cmp dword ptr [0x1014d4c], ebx", 
          "pop esi", 
          "jne 0x4880"
        ]
      }, 
      {
        "basicblock_0x4644": [
          "mov ecx, dword ptr [0x1014078]", 
          "cmp ecx, dword ptr [0x1014d54]", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x4892": [
          "sub eax, 6", 
          "je 0x48d7"
        ]
      }, 
      {
        "basicblock_0x48a7": [
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "xor eax, eax", 
          "cmp word ptr [ecx], 0x2d", 
          "push ecx", 
          "sete al", 
          "push eax", 
          "push dword ptr [0x1014000]", 
          "xor eax, eax", 
          "mov ax, word ptr [0x1014038]", 
          "push eax", 
          "jmp 0x48e4"
        ]
      }, 
      {
        "basicblock_0x48e2": [
          "push 0x20", 
          "call 0x44b4", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push 0x1001364", 
          "push eax", 
          "call dword ptr [0x1001070]", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call 0x2604", 
          "push ebx", 
          "call 0x25b2", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x4652": [
          "xor ecx, ecx", 
          "cmp eax, 0xa", 
          "setne cl", 
          "cmp dword ptr [0x101407c], ecx", 
          "jne 0x4673"
        ]
      }, 
      {
        "basicblock_0x4897": [
          "push ecx", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "call dword ptr [0x1001090]", 
          "jmp 0x48e9"
        ]
      }, 
      {
        "basicblock_0x48e4": [
          "call 0x44b4", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push 0x1001364", 
          "push eax", 
          "call dword ptr [0x1001070]", 
          "lea eax, dword ptr [ebp - 0x200]", 
          "push eax", 
          "push dword ptr [0x1014d6c]", 
          "call 0x2604", 
          "push ebx", 
          "call 0x25b2", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x4662": [
          "mov eax, dword ptr [0x1014080]", 
          "cmp eax, dword ptr [0x1014db8]", 
          "je 0x490d"
        ]
      }, 
      {
        "basicblock_0x490d": [
          "push ebx", 
          "call 0x25b2", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x526a": [
      {
        "basicblock_0x526a": [
          "mov eax, dword ptr [0x1014010]", 
          "cmp eax, 0xa", 
          "jne 0x527b"
        ]
      }, 
      {
        "basicblock_0x5274": [
          "mov eax, dword ptr [0x1014008]", 
          "jmp 0x528b"
        ]
      }, 
      {
        "basicblock_0x527b": [
          "push eax", 
          "call 0x524d", 
          "mov ecx, eax", 
          "mov eax, dword ptr [0x1014014]", 
          "cdq ", 
          "idiv ecx", 
          "mov dword ptr [0x10149d8], eax", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x528b": [
          "mov dword ptr [0x10149d8], eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x25b2": [
      {
        "basicblock_0x25b2": [
          "cmp dword ptr [esp + 4], 0", 
          "je 0x25d8"
        ]
      }, 
      {
        "basicblock_0x25b9": [
          "cmp dword ptr [0x1014eec], 0", 
          "jne 0x25fa"
        ]
      }, 
      {
        "basicblock_0x25d8": [
          "mov eax, dword ptr [0x1014eec]", 
          "test eax, eax", 
          "je 0x25ff"
        ]
      }, 
      {
        "basicblock_0x25c2": [
          "push 0x7f02", 
          "push 0", 
          "call dword ptr [0x1001128]", 
          "push eax", 
          "call dword ptr [0x1001118]", 
          "jmp 0x25ea"
        ]
      }, 
      {
        "basicblock_0x25fa": [
          "xor eax, eax", 
          "inc eax", 
          "jmp 0x2601"
        ]
      }, 
      {
        "basicblock_0x25e1": [
          "push eax", 
          "call dword ptr [0x1001118]", 
          "xor eax, eax", 
          "cmp dword ptr [esp + 4], 0", 
          "mov dword ptr [0x1014eec], eax", 
          "je 0x25ff"
        ]
      }, 
      {
        "basicblock_0x25ff": [
          "xor eax, eax", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x25ea": [
          "cmp dword ptr [esp + 4], 0", 
          "mov dword ptr [0x1014eec], eax", 
          "je 0x25ff"
        ]
      }, 
      {
        "basicblock_0x2601": [
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x25f6": [
          "test eax, eax", 
          "je 0x25ff"
        ]
      }
    ]
  }, 
  {
    "func_0xabdd": [
      {
        "basicblock_0xabdd": [
          "push ebx", 
          "push ebp", 
          "xor edx, edx", 
          "push esi", 
          "mov esi, dword ptr [esp + 0x10]", 
          "mov ebp, 0x80000000", 
          "mov eax, ebp", 
          "div esi", 
          "xor edx, edx", 
          "push edi", 
          "mov edi, dword ptr [esp + 0x18]", 
          "xor ebx, ebx", 
          "inc edx", 
          "xor ecx, ecx", 
          "mov dword ptr [0x1014f5c], edi", 
          "mov dword ptr [0x1014f58], ebx", 
          "cmp eax, edx", 
          "jbe 0xac13"
        ]
      }, 
      {
        "basicblock_0xac0b": [
          "imul edx, esi", 
          "inc ecx", 
          "cmp edx, eax", 
          "jb 0xac0b"
        ]
      }, 
      {
        "basicblock_0xac13": [
          "push dword ptr [0x1014f78]", 
          "xor eax, eax", 
          "cmp ecx, ebx", 
          "sete al", 
          "add ecx, eax", 
          "mov dword ptr [0x1014f40], ecx", 
          "call 0x7bc1", 
          "push ebp", 
          "push esi", 
          "mov dword ptr [0x1014f78], ebx", 
          "call 0x7c4c", 
          "push dword ptr [0x1014fe4]", 
          "mov dword ptr [0x1014f78], eax", 
          "call 0x7bd1", 
          "push esi", 
          "mov dword ptr [0x1014fe4], ebx", 
          "call 0x81cc", 
          "mov dword ptr [0x1014fe4], eax", 
          "mov eax, dword ptr [0x1014f40]", 
          "imul eax, esi", 
          "imul eax, edi", 
          "cmp dword ptr [0x10143dc], eax", 
          "jge 0xb9ea"
        ]
      }, 
      {
        "basicblock_0xac72": [
          "push ebp", 
          "push 1", 
          "mov byte ptr [0x1014f60], bl", 
          "call 0x7c4c", 
          "push ebp", 
          "push 2", 
          "mov dword ptr [0x1014f64], eax", 
          "call 0x7c4c", 
          "push ebp", 
          "push 5", 
          "mov dword ptr [0x1014f68], eax", 
          "call 0x7c4c", 
          "push ebp", 
          "push 6", 
          "mov dword ptr [0x1014f6c], eax", 
          "call 0x7c4c", 
          "push ebp", 
          "push 0xa", 
          "mov dword ptr [0x1014f70], eax", 
          "call 0x7c4c", 
          "push dword ptr [0x1014fe8]", 
          "mov dword ptr [0x1014f74], eax", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fe8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fe8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "mov eax, dword ptr [esp + 0x18]", 
          "neg eax", 
          "push eax", 
          "and ecx, 3", 
          "push 0x1014fe8", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x86c8", 
          "push dword ptr [0x1014fec]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fec], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fec], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fec]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov eax, dword ptr [eax]", 
          "or dword ptr [eax], 0xffffffff", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f98], eax", 
          "call 0x7c26", 
          "push ebp", 
          "push 0x55", 
          "mov dword ptr [0x1014fa0], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [0x1014fa0]", 
          "push ebp", 
          "push 0x64", 
          "mov dword ptr [ecx], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [0x1014fa0]", 
          "push 6", 
          "mov dword ptr [ecx + 4], eax", 
          "call 0x81cc", 
          "push 2", 
          "mov dword ptr [0x1014f94], eax", 
          "call 0x81cc", 
          "push ebx", 
          "mov dword ptr [0x1014f90], eax", 
          "call 0x81cc", 
          "push 1", 
          "mov dword ptr [0x1014f84], eax", 
          "call 0x81cc", 
          "push -1", 
          "mov dword ptr [0x1014f88], eax", 
          "call 0x81cc", 
          "mov dword ptr [0x1014f8c], eax", 
          "mov eax, dword ptr [0x1014f98]", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f98]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f98]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f68]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f98]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f68]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0xa", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x81cc", 
          "push dword ptr [0x1014fa4]", 
          "mov dword ptr [0x1014f9c], eax", 
          "mov eax, dword ptr [0x1014f40]", 
          "add dword ptr [0x1014f5c], eax", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fa4], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fa4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, 0x1014fa4", 
          "push esi", 
          "call 0xf73f", 
          "push dword ptr [0x1014f94]", 
          "push esi", 
          "call 0xbbd4", 
          "push dword ptr [0x1014fac]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fac], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fac], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fac]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fac]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fac]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fa8]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fa8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fa8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fb0]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fb0], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb0]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fa4]", 
          "push 0x1014fac", 
          "call 0xbc54", 
          "push dword ptr [0x1014f90]", 
          "push 0x1014fa8", 
          "call 0xbd6f", 
          "push dword ptr [0x1014fa8]", 
          "push 0x1014fb0", 
          "call 0xbc54", 
          "push dword ptr [0x1014fb4]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fb4], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0x1014fb4", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xd73b", 
          "push dword ptr [0x1014fb8]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fb8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0x1014fb8", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xd73b", 
          "push dword ptr [0x1014f7c]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014f7c], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f7c], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f7c]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f7c]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, dword ptr [eax + 4]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0x1014f7c", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xdfef", 
          "push dword ptr [0x1014f80]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014f80], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f80], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f80]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f80]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f80]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0x1014f80", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xdfef", 
          "push dword ptr [0x1014fbc]", 
          "call 0x7bd1", 
          "push 0xb4", 
          "mov dword ptr [0x1014fbc], ebx", 
          "call 0x81cc", 
          "push dword ptr [0x1014fa4]", 
          "mov dword ptr [0x1014fbc], eax", 
          "push 0x1014fbc", 
          "call 0xbd6f", 
          "push dword ptr [0x1014fc0]", 
          "call 0x7bd1", 
          "push 0xc8", 
          "mov dword ptr [0x1014fc0], ebx", 
          "call 0x81cc", 
          "push dword ptr [0x1014fa4]", 
          "mov dword ptr [0x1014fc0], eax", 
          "push 0x1014fc0", 
          "call 0xbd6f", 
          "mov eax, dword ptr [0x1014f40]", 
          "sub dword ptr [0x1014f5c], eax", 
          "push dword ptr [0x1014fc4]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fc4], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fc4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "push ebp", 
          "and ecx, 3", 
          "push 0x40", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fc4]", 
          "call 0x7d22", 
          "push dword ptr [0x1014f88]", 
          "push 0x1014fc4", 
          "call 0xbe29", 
          "push dword ptr [0x1014fc8]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fc8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fc8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "push ebp", 
          "and ecx, 3", 
          "push 0x20", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fc8]", 
          "call 0x7d22", 
          "push dword ptr [0x1014f88]", 
          "push 0x1014fc8", 
          "call 0xbe29", 
          "push dword ptr [0x1014ff8]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014ff8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014ff8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "push 3", 
          "mov ecx, eax", 
          "pop ebp", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push 0xffff", 
          "call 0x81cc", 
          "push 0xff", 
          "mov dword ptr [0x1014fcc], eax", 
          "call 0x81cc", 
          "push 0x190", 
          "mov dword ptr [0x1014fd0], eax", 
          "call 0x81cc", 
          "push 0x168", 
          "mov dword ptr [0x1014fd8], eax", 
          "call 0x81cc", 
          "push 0xc8", 
          "mov dword ptr [0x1014fd4], eax", 
          "call 0x81cc", 
          "push 0xb4", 
          "mov dword ptr [0x1014fe0], eax", 
          "call 0x81cc", 
          "push 0x186a0", 
          "mov dword ptr [0x1014fdc], eax", 
          "call 0x81cc", 
          "push dword ptr [0x1014ff4]", 
          "mov dword ptr [0x1014ff0], eax", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014ff4], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014ff4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [0x1014f40]", 
          "imul eax, dword ptr [esp + 0x14]", 
          "imul eax, dword ptr [esp + 0x18]", 
          "mov dword ptr [0x10143dc], eax", 
          "jmp 0xbb81"
        ]
      }, 
      {
        "basicblock_0xb9ea": [
          "call 0x95e4", 
          "push dword ptr [0x1014fe8]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fe8], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fe8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "push 3", 
          "mov ecx, eax", 
          "pop ebp", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fe4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "mov eax, dword ptr [esp + 0x18]", 
          "neg eax", 
          "push eax", 
          "and ecx, ebp", 
          "push 0x1014fe8", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x86c8", 
          "push dword ptr [0x1014fec]", 
          "call 0x7bd1", 
          "mov dword ptr [0x1014fec], ebx", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fec], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fec]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov eax, dword ptr [eax]", 
          "or dword ptr [eax], 0xffffffff", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbb81": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x524d": [
      {
        "basicblock_0x524d": [
          "mov ecx, dword ptr [esp + 4]", 
          "xor eax, eax", 
          "jmp 0x5258"
        ]
      }, 
      {
        "basicblock_0x5258": [
          "test cl, 1", 
          "je 0x5255"
        ]
      }, 
      {
        "basicblock_0x525d": [
          "sar ecx, 1", 
          "je 0x5267"
        ]
      }, 
      {
        "basicblock_0x5255": [
          "inc eax", 
          "sar ecx, 1", 
          "test cl, 1", 
          "je 0x5255"
        ]
      }, 
      {
        "basicblock_0x5261": [
          "inc eax", 
          "sar ecx, 1", 
          "jne 0x5261"
        ]
      }, 
      {
        "basicblock_0x5267": [
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x5266": [
          "inc eax", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x8b8c": [
      {
        "basicblock_0x8b8c": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "push dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "push dword ptr [ebp - 4]", 
          "mov esi, eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x7bd1": [
      {
        "basicblock_0x7bd1": [
          "push esi", 
          "mov esi, dword ptr [esp + 8]", 
          "test esi, esi", 
          "je 0x7bf7"
        ]
      }, 
      {
        "basicblock_0x7bda": [
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "push dword ptr [esi + 4]", 
          "and dword ptr [esi], 0", 
          "call 0x7bc1", 
          "and dword ptr [esi + 4], 0", 
          "push esi", 
          "call dword ptr [0x100107c]", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x7bf7": [
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x7c26": [
      {
        "basicblock_0x7c26": [
          "push esi", 
          "push 8", 
          "push 0x40", 
          "call dword ptr [0x1001080]", 
          "mov esi, eax", 
          "test esi, esi", 
          "jne 0x7c41"
        ]
      }, 
      {
        "basicblock_0x7c37": [
          "push 0x80000007", 
          "call 0x7ba7", 
          "and dword ptr [esi], 0", 
          "and dword ptr [esi + 4], 0", 
          "mov eax, esi", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x7c41": [
          "and dword ptr [esi], 0", 
          "and dword ptr [esi + 4], 0", 
          "mov eax, esi", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x7bc1": [
      {
        "basicblock_0x7bc1": [
          "cmp dword ptr [esp + 4], 0", 
          "je 0x7bce"
        ]
      }, 
      {
        "basicblock_0x7bc8": [
          "jmp dword ptr [0x100107c]"
        ]
      }, 
      {
        "basicblock_0x7bce": [
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x7bfb": [
      {
        "basicblock_0x7bfb": [
          "mov eax, dword ptr [esp + 4]", 
          "push esi", 
          "lea eax, dword ptr [eax*4 + 0x10]", 
          "push eax", 
          "push 0x40", 
          "call dword ptr [0x1001080]", 
          "mov esi, eax", 
          "test esi, esi", 
          "jne 0x7c20"
        ]
      }, 
      {
        "basicblock_0x7c16": [
          "push 0x80000007", 
          "call 0x7ba7", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x7c20": [
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x7c4c": [
      {
        "basicblock_0x7c4c": [
          "push esi", 
          "push 0x21", 
          "call 0x7bfb", 
          "mov ecx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "and dword ptr [ecx + 4], 0", 
          "and dword ptr [ecx + 8], 0", 
          "test eax, eax", 
          "lea esi, dword ptr [ecx + 0xc]", 
          "jge 0x7c70"
        ]
      }, 
      {
        "basicblock_0x7c69": [
          "or dword ptr [ecx], 0xffffffff", 
          "neg eax", 
          "jmp 0x7c76"
        ]
      }, 
      {
        "basicblock_0x7c70": [
          "mov dword ptr [ecx], 1", 
          "xor edx, edx", 
          "div dword ptr [esp + 0xc]", 
          "mov dword ptr [esi], edx", 
          "add esi, 4", 
          "inc dword ptr [ecx + 4]", 
          "test eax, eax", 
          "jne 0x7c76"
        ]
      }, 
      {
        "basicblock_0x7c76": [
          "xor edx, edx", 
          "div dword ptr [esp + 0xc]", 
          "mov dword ptr [esi], edx", 
          "add esi, 4", 
          "inc dword ptr [ecx + 4]", 
          "test eax, eax", 
          "jne 0x7c76"
        ]
      }, 
      {
        "basicblock_0x7c88": [
          "mov eax, ecx", 
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x81cc": [
      {
        "basicblock_0x81cc": [
          "push esi", 
          "push edi", 
          "call 0x7c26", 
          "mov edi, 0x80000000", 
          "push edi", 
          "push dword ptr [esp + 0x10]", 
          "mov esi, eax", 
          "call 0x7c4c", 
          "push edi", 
          "push 1", 
          "mov dword ptr [esi], eax", 
          "call 0x7c4c", 
          "mov dword ptr [esi + 4], eax", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xbc54": [
      {
        "basicblock_0xbc54": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "and dword ptr [ebp - 4], 0", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "push dword ptr [esi + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x11913", 
          "test eax, eax", 
          "je 0xbcb1"
        ]
      }, 
      {
        "basicblock_0xbc75": [
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [eax]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov eax, dword ptr [eax]", 
          "imul eax, dword ptr [ecx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "xor ecx, ecx", 
          "inc ecx", 
          "mov dword ptr [eax], ecx", 
          "mov edx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [esi]", 
          "mov edx, dword ptr [edx]", 
          "imul edx, dword ptr [eax]", 
          "mov dword ptr [eax], edx", 
          "mov eax, dword ptr [esi + 4]", 
          "push 0x80000000", 
          "mov dword ptr [eax], ecx", 
          "push dword ptr [esi]", 
          "push dword ptr [ebx]", 
          "call 0x11a3c", 
          "jmp 0xbd5b"
        ]
      }, 
      {
        "basicblock_0xbcb1": [
          "push edi", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], eax", 
          "mov esi, dword ptr [ecx + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "push dword ptr [esi + 4]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [esi + 4]", 
          "push dword ptr [ebx]", 
          "call 0x12314", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [esi]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov eax, dword ptr [ebx]", 
          "push 0x80000000", 
          "push dword ptr [eax + 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "push ebx", 
          "mov dword ptr [eax + 4], ecx", 
          "call 0xab09", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [eax]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov eax, dword ptr [eax]", 
          "imul eax, dword ptr [ecx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov dword ptr [eax], 1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbd5b": [
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x22f9": [
      {
        "basicblock_0x22f9": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x108", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi + 0x10]", 
          "push edi", 
          "xor edi, edi", 
          "mov word ptr [esi + eax*2 + 0x14], di", 
          "cmp dword ptr [esi], edi", 
          "je 0x2324"
        ]
      }, 
      {
        "basicblock_0x2316": [
          "mov eax, dword ptr [esi + 0xa0]"
        ]
      }, 
      {
        "basicblock_0x2324": [
          "cmp dword ptr [esi + 0xc], edi", 
          "je 0x2335"
        ]
      }, 
      {
        "basicblock_0x2329": [
          "xor edi, edi"
        ]
      }, 
      {
        "basicblock_0x2335": [
          "mov ebx, dword ptr [0x1001090]", 
          "lea eax, dword ptr [esi + 0x14]", 
          "push eax", 
          "lea eax, dword ptr [ebp + edi*2 - 0x108]", 
          "push eax", 
          "call ebx", 
          "add edi, dword ptr [esi + 0x10]", 
          "cmp dword ptr [esi + 4], -1", 
          "jne 0x2361"
        ]
      }, 
      {
        "basicblock_0x2352": [
          "mov ax, word ptr [0x101402c]"
        ]
      }, 
      {
        "basicblock_0x2361": [
          "cmp dword ptr [esi], 0", 
          "je 0x23b6"
        ]
      }, 
      {
        "basicblock_0x2366": [
          "xor eax, eax", 
          "cmp dword ptr [ebp + 0x10], 0xa", 
          "setne al", 
          "dec eax", 
          "and eax, 7", 
          "add eax, 0x5e"
        ]
      }, 
      {
        "basicblock_0x23b6": [
          "lea eax, dword ptr [ebp - 0x108]", 
          "push eax", 
          "call dword ptr [0x1001074]", 
          "lea eax, dword ptr [eax + eax + 2]", 
          "push eax", 
          "push 0x40", 
          "call dword ptr [0x1001080]", 
          "test eax, eax", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp + 0xc], eax", 
          "je 0x23ef"
        ]
      }, 
      {
        "basicblock_0x23da": [
          "mov eax, dword ptr [esi]", 
          "test eax, eax", 
          "je 0x23ea"
        ]
      }, 
      {
        "basicblock_0x23ef": [
          "cmp dword ptr [ebp + 0x10], 0xa", 
          "je 0x2407"
        ]
      }, 
      {
        "basicblock_0x23e0": [
          "push eax", 
          "call dword ptr [0x100107c]", 
          "and dword ptr [esi], 0", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi], eax", 
          "cmp dword ptr [ebp + 0x10], 0xa", 
          "je 0x2407"
        ]
      }, 
      {
        "basicblock_0x23ea": [
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi], eax", 
          "cmp dword ptr [ebp + 0x10], 0xa", 
          "je 0x2407"
        ]
      }, 
      {
        "basicblock_0x23f5": []
      }, 
      {
        "basicblock_0x2407": []
      }
    ]
  }, 
  {
    "func_0x86c8": [
      {
        "basicblock_0x86c8": [
          "push ebp", 
          "mov ebp, esp", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "test ebx, ebx", 
          "push esi", 
          "jge 0x86f0"
        ]
      }, 
      {
        "basicblock_0x86d4": [
          "mov esi, dword ptr [ebp + 8]", 
          "neg ebx", 
          "push ebx", 
          "push esi", 
          "call 0x86c8", 
          "mov eax, dword ptr [esi]", 
          "mov edx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [eax]", 
          "mov dword ptr [eax], edx", 
          "mov eax, dword ptr [esi]", 
          "mov dword ptr [eax + 4], ecx", 
          "jmp 0x874e"
        ]
      }, 
      {
        "basicblock_0x86f0": [
          "and dword ptr [ebp + 0xc], 0", 
          "push 1", 
          "call 0x81cc", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp + 0xc], eax", 
          "jmp 0x873e"
        ]
      }, 
      {
        "basicblock_0x874e": [
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x873e": [
          "test ebx, ebx", 
          "jg 0x8703"
        ]
      }, 
      {
        "basicblock_0x8742": [
          "push dword ptr [esi]", 
          "call 0x7bd1", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi], eax", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x8703": [
          "test bl, 1", 
          "je 0x8725"
        ]
      }, 
      {
        "basicblock_0x8708": [
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax]", 
          "push dword ptr [ebp + 0xc]", 
          "call 0x12314", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [esi]", 
          "push esi", 
          "call 0xbbd4", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "call 0xab09", 
          "push esi", 
          "call 0xab09", 
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x8703"
        ]
      }, 
      {
        "basicblock_0x8725": [
          "push dword ptr [esi]", 
          "push esi", 
          "call 0xbbd4", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "call 0xab09", 
          "push esi", 
          "call 0xab09", 
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x8703"
        ]
      }
    ]
  }, 
  {
    "func_0xf73f": [
      {
        "basicblock_0xf73f": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 4], esi", 
          "mov ecx, dword ptr [eax]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov eax, dword ptr [eax]", 
          "imul eax, dword ptr [ecx]", 
          "mov dword ptr [ebp - 8], eax", 
          "xor eax, eax", 
          "inc eax", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "push edi", 
          "mov dword ptr [ecx], eax", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f88]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbe29", 
          "push dword ptr [0x1014fe8]", 
          "push dword ptr [ebp - 4]", 
          "call 0x8e2c", 
          "test eax, eax", 
          "je 0xf8eb"
        ]
      }, 
      {
        "basicblock_0xf828": [
          "push dword ptr [0x1014fec]", 
          "push dword ptr [ebp - 4]", 
          "call 0x8c5c", 
          "test eax, eax", 
          "je 0xf8eb"
        ]
      }, 
      {
        "basicblock_0xf8eb": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "push dword ptr [0x1014fa0]", 
          "xor edi, edi", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xfabd"
        ]
      }, 
      {
        "basicblock_0xf83e": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "push dword ptr [ebx]", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebx], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "jmp 0xfac3"
        ]
      }, 
      {
        "basicblock_0xf90d": [
          "push dword ptr [0x1014f88]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xf9f1"
        ]
      }, 
      {
        "basicblock_0xfabd": [
          "push ebx", 
          "call 0xf3cf", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], 1", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xfac3": [
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], 1", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xf922": [
          "push dword ptr [0x1014f88]", 
          "push ebx", 
          "call 0xbe29", 
          "push dword ptr [0x1014fe8]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xf954"
        ]
      }, 
      {
        "basicblock_0xf9f1": [
          "push edi", 
          "call 0x7bd1", 
          "call 0x7c26", 
          "mov esi, eax", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp + 8], esi", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [esi], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi + 4]", 
          "call 0x7bc1", 
          "and dword ptr [esi + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "push dword ptr [ebp + 8]", 
          "mov dword ptr [esi + 4], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push ebx", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbbd4", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014f88]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [0x1014f90]", 
          "push ebx", 
          "call 0xbe44", 
          "push ebx", 
          "call 0xf3cf", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014fa8]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [ebp + 8]", 
          "call 0x7bd1", 
          "jmp 0xfac3"
        ]
      }, 
      {
        "basicblock_0xf93f": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x80000001", 
          "call 0x12670", 
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "mov dword ptr [ebx], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "xor edi, edi", 
          "push edi", 
          "call 0x7bd1", 
          "call 0x7c26", 
          "mov esi, eax", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp + 8], esi", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [esi], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi + 4]", 
          "call 0x7bc1", 
          "and dword ptr [esi + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "push dword ptr [ebp + 8]", 
          "mov dword ptr [esi + 4], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push ebx", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbbd4", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014f88]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [0x1014f90]", 
          "push ebx", 
          "call 0xbe44", 
          "push ebx", 
          "call 0xf3cf", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014fa8]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [ebp + 8]", 
          "call 0x7bd1", 
          "jmp 0xfac3"
        ]
      }, 
      {
        "basicblock_0xf954": [
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "mov dword ptr [ebx], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "xor edi, edi", 
          "push edi", 
          "call 0x7bd1", 
          "call 0x7c26", 
          "mov esi, eax", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp + 8], esi", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [esi], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi + 4]", 
          "call 0x7bc1", 
          "and dword ptr [esi + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "push dword ptr [ebp + 8]", 
          "mov dword ptr [esi + 4], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov esi, dword ptr [ecx + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push ebx", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbbd4", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014f88]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [0x1014f90]", 
          "push ebx", 
          "call 0xbe44", 
          "push ebx", 
          "call 0xf3cf", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [0x1014fa8]", 
          "push ebx", 
          "call 0xbc54", 
          "push dword ptr [ebp + 8]", 
          "call 0x7bd1", 
          "jmp 0xfac3"
        ]
      }
    ]
  }, 
  {
    "func_0xbbd4": [
      {
        "basicblock_0xbbd4": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xbc0a"
        ]
      }, 
      {
        "basicblock_0xbbe7": [
          "mov esi, dword ptr [esp + 0x10]", 
          "push dword ptr [esi]", 
          "push dword ptr [edi]", 
          "call 0x12314", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [esi + 4]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push edi", 
          "call 0xab09", 
          "jmp 0xbc4f"
        ]
      }, 
      {
        "basicblock_0xbc0a": [
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [edi]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [edi]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "pop edi", 
          "pop esi", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbc4f": [
          "pop edi", 
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xbd6f": [
      {
        "basicblock_0xbd6f": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xbdbd"
        ]
      }, 
      {
        "basicblock_0xbd84": [
          "mov esi, dword ptr [ebp + 0xc]", 
          "push dword ptr [esi + 4]", 
          "push dword ptr [edi]", 
          "call 0x12314", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [esi]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax + 4]", 
          "call 0x11a18", 
          "test eax, eax", 
          "je 0xbdb5"
        ]
      }, 
      {
        "basicblock_0xbdbd": [
          "push dword ptr [ebp + 0xc]", 
          "call 0xbd61", 
          "test eax, eax", 
          "je 0xbdde"
        ]
      }, 
      {
        "basicblock_0xbdac": [
          "mov dword ptr [ebp + 0xc], 0x80000000", 
          "jmp 0xbdd0"
        ]
      }, 
      {
        "basicblock_0xbdb5": [
          "push edi", 
          "call 0xab09", 
          "jmp 0xbe23"
        ]
      }, 
      {
        "basicblock_0xbdc9": [
          "mov dword ptr [ebp + 0xc], 0x80000002", 
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "call 0x12670", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [edi]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [edi]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbdde": [
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [edi]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [edi]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbdd0": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "call 0x12670", 
          "mov eax, dword ptr [edi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [edi]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [edi]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xbe23": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xd73b": [
      {
        "basicblock_0xd73b": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "xor esi, esi", 
          "push edi", 
          "push esi", 
          "mov dword ptr [ebp - 8], esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 8], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbbd4", 
          "call 0x7c26", 
          "mov ebx, 0x80000000", 
          "push ebx", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 0xc], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "push ebx", 
          "push esi", 
          "mov dword ptr [ecx], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "push ebx", 
          "mov dword ptr [ecx + 4], eax", 
          "push dword ptr [0x1014f64]", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "push ebx", 
          "push dword ptr [0x1014f64]", 
          "add eax, 4", 
          "push eax", 
          "call 0x11a3c", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push ebx", 
          "xor edi, edi", 
          "push edi", 
          "call 0x7c4c", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, 0x7fffffff", 
          "jae 0xd90b"
        ]
      }, 
      {
        "basicblock_0xd905": [
          "inc eax", 
          "mov dword ptr [ecx + 0xc], eax", 
          "jmp 0xd91b"
        ]
      }, 
      {
        "basicblock_0xd90b": [
          "push ebx", 
          "push dword ptr [0x1014f64]", 
          "lea eax, dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0x10]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xd977"
        ]
      }, 
      {
        "basicblock_0xd91b": [
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0x10]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xd977"
        ]
      }, 
      {
        "basicblock_0xd944": [
          "mov ecx, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "mov edx, dword ptr [eax + 8]", 
          "mov ecx, dword ptr [ecx]", 
          "sub edx, dword ptr [ecx + 8]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub edx, dword ptr [ecx + 4]", 
          "lea eax, dword ptr [edx + eax - 1]", 
          "imul eax, dword ptr [0x1014f40]", 
          "cmp eax, dword ptr [0x1014f5c]", 
          "jg 0xd977"
        ]
      }, 
      {
        "basicblock_0xd977": [
          "push dword ptr [ebp - 0x10]", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0x10], edi", 
          "call 0x7bd1", 
          "push dword ptr [ebp - 4]", 
          "mov dword ptr [ebp - 8], edi", 
          "call 0x7bd1", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0x7bd1", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "mov dword ptr [esi], edi", 
          "call 0xab09", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "mov dword ptr [esi], eax", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xd96b": [
          "cmp dword ptr [0x1014f58], edi", 
          "je 0xd8ea"
        ]
      }, 
      {
        "basicblock_0xd8ea": [
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, 0x7fffffff", 
          "jae 0xd90b"
        ]
      }
    ]
  }, 
  {
    "func_0xdfef": [
      {
        "basicblock_0xdfef": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push edi", 
          "push dword ptr [0x1014f84]", 
          "xor edi, edi", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], edi", 
          "mov dword ptr [ebp - 8], edi", 
          "call 0x8e2c", 
          "test eax, eax", 
          "je 0xe027"
        ]
      }, 
      {
        "basicblock_0xe012": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x80000001", 
          "call 0x12670", 
          "push dword ptr [0x1014f88]", 
          "push dword ptr [ebx]", 
          "call 0x8f17", 
          "cmp eax, edi", 
          "mov dword ptr [ebp + 8], eax", 
          "je 0xe049"
        ]
      }, 
      {
        "basicblock_0xe027": [
          "push dword ptr [0x1014f88]", 
          "push dword ptr [ebx]", 
          "call 0x8f17", 
          "cmp eax, edi", 
          "mov dword ptr [ebp + 8], eax", 
          "je 0xe049"
        ]
      }, 
      {
        "basicblock_0xe03b": [
          "mov eax, dword ptr [ebx]", 
          "mov edx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [eax]", 
          "mov dword ptr [eax], edx", 
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [eax + 4], ecx", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov eax, dword ptr [edx + 8]", 
          "sub eax, dword ptr [ecx + 4]", 
          "push esi", 
          "add eax, dword ptr [edx + 4]", 
          "mov esi, dword ptr [ecx + 8]", 
          "sub eax, esi", 
          "cmp eax, 1", 
          "jle 0xe0ff"
        ]
      }, 
      {
        "basicblock_0xe049": [
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov eax, dword ptr [edx + 8]", 
          "sub eax, dword ptr [ecx + 4]", 
          "push esi", 
          "add eax, dword ptr [edx + 4]", 
          "mov esi, dword ptr [ecx + 8]", 
          "sub eax, esi", 
          "cmp eax, 1", 
          "jle 0xe0ff"
        ]
      }, 
      {
        "basicblock_0xe068": [
          "dec eax", 
          "add esi, eax", 
          "imul eax, eax, 0x1f", 
          "push eax", 
          "mov dword ptr [ecx + 8], esi", 
          "call 0x81cc", 
          "push dword ptr [0x1014f80]", 
          "mov dword ptr [ebp - 4], eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0xe1a4"
        ]
      }, 
      {
        "basicblock_0xe0ff": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 8], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fb4]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "pop esi", 
          "jmp 0xe28c"
        ]
      }, 
      {
        "basicblock_0xe096": [
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "mov eax, dword ptr [0x1014f5c]", 
          "cdq ", 
          "idiv dword ptr [0x1014f40]", 
          "mov ecx, dword ptr [edi + 4]", 
          "mov esi, ecx", 
          "sub esi, eax", 
          "dec esi", 
          "dec esi", 
          "cmp esi, 1", 
          "jle 0xe0da"
        ]
      }, 
      {
        "basicblock_0xe1a4": [
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 8], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014fb4]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "pop esi", 
          "jmp 0xe28c"
        ]
      }, 
      {
        "basicblock_0xe28c": [
          "test eax, eax", 
          "jne 0xe25b"
        ]
      }, 
      {
        "basicblock_0xe0b4": [
          "sub ecx, esi", 
          "shl ecx, 2", 
          "push ecx", 
          "lea eax, dword ptr [edi + esi*4 + 0xc]", 
          "push eax", 
          "add edi, 0xc", 
          "push edi", 
          "call dword ptr [0x10011d0]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "sub dword ptr [eax + 4], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "add esp, 0xc", 
          "add dword ptr [eax + 8], esi", 
          "mov ecx, dword ptr [ebx]", 
          "mov edx, dword ptr [ecx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov eax, dword ptr [edx + 8]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "cmp eax, ecx", 
          "jge 0xe0ed"
        ]
      }, 
      {
        "basicblock_0xe0da": [
          "mov ecx, dword ptr [ebx]", 
          "mov edx, dword ptr [ecx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov eax, dword ptr [edx + 8]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "cmp eax, ecx", 
          "jge 0xe0ed"
        ]
      }, 
      {
        "basicblock_0xe290": [
          "push ebx", 
          "call 0xdc58", 
          "push dword ptr [0x1014f90]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbd6f", 
          "push dword ptr [ebp - 8]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "push dword ptr [ebp - 4]", 
          "push ebx", 
          "call 0xbc54", 
          "push ebx", 
          "call 0xab09", 
          "cmp dword ptr [ebp + 8], 0", 
          "je 0xe2cc"
        ]
      }, 
      {
        "basicblock_0xe25b": [
          "cmp dword ptr [0x1014f58], 0", 
          "jne 0xe290"
        ]
      }, 
      {
        "basicblock_0xe0eb": [
          "mov ecx, eax", 
          "sub eax, ecx", 
          "mov dword ptr [edx + 8], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "jmp 0xe1a4"
        ]
      }, 
      {
        "basicblock_0xe0ed": [
          "sub eax, ecx", 
          "mov dword ptr [edx + 8], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "jmp 0xe1a4"
        ]
      }, 
      {
        "basicblock_0xe2c6": [
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "pop edi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xe2cc": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "pop edi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xe264": [
          "push dword ptr [0x1014fb4]", 
          "push ebx", 
          "call 0xbd6f", 
          "push dword ptr [0x1014f88]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbc54", 
          "push dword ptr [0x1014fb4]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "test eax, eax", 
          "jne 0xe25b"
        ]
      }
    ]
  }, 
  {
    "func_0x7d22": [
      {
        "basicblock_0x7d22": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "and dword ptr [ebp - 4], 0", 
          "push ebx", 
          "push edi", 
          "push dword ptr [ebp + 0x10]", 
          "push 1", 
          "call 0x7c4c", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "test ebx, ebx", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], eax", 
          "jle 0x7dac"
        ]
      }, 
      {
        "basicblock_0x7d43": [
          "push esi", 
          "test bl, 1", 
          "je 0x7d57"
        ]
      }, 
      {
        "basicblock_0x7dac": [
          "push dword ptr [edi]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [edi], eax", 
          "pop edi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x7d49": [
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push dword ptr [edi]", 
          "push eax", 
          "call 0x11aa0", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [edi]", 
          "push edi", 
          "call 0x11aa0", 
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0x7da5"
        ]
      }, 
      {
        "basicblock_0x7d57": [
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [edi]", 
          "push edi", 
          "call 0x11aa0", 
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0x7da5"
        ]
      }, 
      {
        "basicblock_0x7d6b": [
          "mov ecx, dword ptr [edi]", 
          "mov eax, dword ptr [ecx + 4]", 
          "mov esi, eax", 
          "sub esi, dword ptr [0x1014f40]", 
          "sub esi, dword ptr [0x1014f5c]", 
          "cmp esi, 1", 
          "jle 0x7da5"
        ]
      }, 
      {
        "basicblock_0x7da5": [
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x7d44"
        ]
      }, 
      {
        "basicblock_0x7d83": [
          "sub eax, esi", 
          "shl eax, 2", 
          "push eax", 
          "lea eax, dword ptr [ecx + esi*4 + 0xc]", 
          "push eax", 
          "add ecx, 0xc", 
          "push ecx", 
          "call dword ptr [0x10011d0]", 
          "mov eax, dword ptr [edi]", 
          "sub dword ptr [eax + 4], esi", 
          "mov eax, dword ptr [edi]", 
          "add esp, 0xc", 
          "add dword ptr [eax + 8], esi", 
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x7d44"
        ]
      }, 
      {
        "basicblock_0x7dab": [
          "pop esi", 
          "push dword ptr [edi]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [edi], eax", 
          "pop edi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x7d44": [
          "test bl, 1", 
          "je 0x7d57"
        ]
      }
    ]
  }, 
  {
    "func_0xbe29": [
      {
        "basicblock_0xbe29": [
          "push esi", 
          "mov esi, dword ptr [esp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "push esi", 
          "push dword ptr [esp + 0xc]", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x95e4": [
      {
        "basicblock_0x95e4": [
          "push ebx", 
          "push ebp", 
          "push esi", 
          "push edi", 
          "push dword ptr [0x1014f64]", 
          "call 0x7bc1", 
          "push dword ptr [0x10143e4]", 
          "xor ebx, ebx", 
          "mov dword ptr [0x1014f64], ebx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x10143e4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov dword ptr [0x1014f64], eax", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10143e0", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "push 3", 
          "pop ebp", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f68]", 
          "call 0x7bc1", 
          "push dword ptr [0x10143f4]", 
          "mov dword ptr [0x1014f68], ebx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x10143f4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov dword ptr [0x1014f68], eax", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10143f0", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f6c]", 
          "call 0x7bc1", 
          "push dword ptr [0x1014404]", 
          "mov dword ptr [0x1014f6c], ebx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014404]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov dword ptr [0x1014f6c], eax", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014400", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f70]", 
          "call 0x7bc1", 
          "push dword ptr [0x1014414]", 
          "mov dword ptr [0x1014f70], ebx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014414]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov dword ptr [0x1014f70], eax", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014410", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f74]", 
          "call 0x7bc1", 
          "push dword ptr [0x1014424]", 
          "mov dword ptr [0x1014f74], ebx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014424]", 
          "mov dword ptr [0x1014f74], eax", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov esi, 0x1014420", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fa0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101448c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101448c]", 
          "mov eax, dword ptr [0x1014fa0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014488", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fa0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101449c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101449c]", 
          "mov eax, dword ptr [0x1014fa0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014498", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f94], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f94]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10144ac]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f94]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10144ac]", 
          "mov eax, dword ptr [0x1014f94]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10144a8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f94]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f94]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10144bc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f94]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10144bc]", 
          "mov eax, dword ptr [0x1014f94]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov esi, 0x10144b8", 
          "mov edi, dword ptr [eax + 4]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f90], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10144cc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f90]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10144cc]", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10144c8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f90]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10144dc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f90]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10144dc]", 
          "mov eax, dword ptr [0x1014f90]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10144d8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f84], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10144ec]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f84]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10144ec]", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10144e8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f84]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10144fc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f84]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10144fc]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov esi, 0x10144f8", 
          "mov eax, dword ptr [0x1014f84]", 
          "mov edi, dword ptr [eax + 4]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f88], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101450c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f88]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101450c]", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014508", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f88]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101451c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f88]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101451c]", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014518", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f8c], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f8c]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101452c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f8c]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101452c]", 
          "mov eax, dword ptr [0x1014f8c]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014528", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f8c]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f8c]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101453c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f8c]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101453c]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, dword ptr [0x1014f8c]", 
          "mov edi, dword ptr [eax + 4]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014538", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f98], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101454c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f98]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101454c]", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014548", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f98]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101455c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f98]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101455c]", 
          "mov eax, dword ptr [0x1014f98]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014558", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f9c], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101456c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f9c]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101456c]", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014568", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f9c]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101457c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f9c]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101457c]", 
          "mov eax, dword ptr [0x1014f9c]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014578", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fa4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101458c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa4]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101458c]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014588", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10145b0]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10145b0]", 
          "mov eax, dword ptr [0x1014fa4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10145ac", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fac], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10145d4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fac]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10145d4]", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10145d0", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fac]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10145f8]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fac]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10145f8]", 
          "mov eax, dword ptr [0x1014fac]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10145f4", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fa8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101461c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101461c]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014618", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014640]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fa8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014640]", 
          "mov eax, dword ptr [0x1014fa8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x101463c", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014664]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014664]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014660", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014688]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014688]", 
          "mov eax, dword ptr [0x1014fb0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014684", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10146ac]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb4]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10146ac]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10146a8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10146d0]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10146d0]", 
          "mov eax, dword ptr [0x1014fb4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10146cc", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fb8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10146f4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10146f4]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10146f0", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014718]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fb8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014718]", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014714", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f7c], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101473c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f7c]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101473c]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014738", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014760]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f7c]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014760]", 
          "mov eax, dword ptr [0x1014f7c]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x101475c", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014f80], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014784]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f80]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014784]", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014780", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014f80]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10147a8]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014f80]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10147a8]", 
          "mov eax, dword ptr [0x1014f80]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10147a4", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fbc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fbc]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10147cc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fbc]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10147cc]", 
          "mov eax, dword ptr [0x1014fbc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10147c8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fbc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fbc]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10147f0]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fbc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10147f0]", 
          "mov eax, dword ptr [0x1014fbc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10147ec", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fc0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014814]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014814]", 
          "mov eax, dword ptr [0x1014fc0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014810", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fc0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014838]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014838]", 
          "mov eax, dword ptr [0x1014fc0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014834", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fc4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101485c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc4]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101485c]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014858", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014874]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014874]", 
          "mov eax, dword ptr [0x1014fc4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014870", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fc8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014884]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014884]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014880", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014898]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fc8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014898]", 
          "mov eax, dword ptr [0x1014fc8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014894", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fcc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fcc]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10148cc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fcc]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10148cc]", 
          "mov eax, dword ptr [0x1014fcc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148c8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fcc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fcc]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10148dc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fcc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10148dc]", 
          "mov eax, dword ptr [0x1014fcc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148d8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fd0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10148ec]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10148ec]", 
          "mov eax, dword ptr [0x1014fd0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148e8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fd0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10148fc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10148fc]", 
          "mov eax, dword ptr [0x1014fd0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148f8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fd4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd4]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101492c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd4]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101492c]", 
          "mov eax, dword ptr [0x1014fd4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014928", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fd4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd4]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101493c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101493c]", 
          "mov eax, dword ptr [0x1014fd4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014938", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fd8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101490c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101490c]", 
          "mov eax, dword ptr [0x1014fd8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014908", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fd8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fd8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101491c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fd8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101491c]", 
          "mov eax, dword ptr [0x1014fd8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014918", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fdc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fdc]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101496c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fdc]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101496c]", 
          "mov eax, dword ptr [0x1014fdc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014968", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fdc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fdc]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101497c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fdc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101497c]", 
          "mov eax, dword ptr [0x1014fdc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014978", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fe0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101494c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101494c]", 
          "mov eax, dword ptr [0x1014fe0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014948", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fe0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101495c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101495c]", 
          "mov eax, dword ptr [0x1014fe0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014958", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fe8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014434]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014434]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014430", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014444]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fe8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014444]", 
          "mov eax, dword ptr [0x1014fe8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014440", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014fec], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x1014460]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014460]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x101445c", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014fec]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x1014470]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014fec]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x1014470]", 
          "mov eax, dword ptr [0x1014fec]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x101446c", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014ff0], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x101498c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff0]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x101498c]", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014988", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff0]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x101499c]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff0]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x101499c]", 
          "mov eax, dword ptr [0x1014ff0]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x1014998", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014ff4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10149ac]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff4]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10149ac]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10149a8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10149bc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10149bc]", 
          "mov eax, dword ptr [0x1014ff4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10149b8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c26", 
          "mov dword ptr [0x1014ff8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov dword ptr [eax], ebx", 
          "push dword ptr [0x10148a8]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x10148a8]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148a4", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov dword ptr [eax + 4], ebx", 
          "push dword ptr [0x10148bc]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [0x1014ff8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ecx, dword ptr [0x10148bc]", 
          "mov eax, dword ptr [0x1014ff8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, 0x10148b8", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f4c]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f64]", 
          "mov dword ptr [0x1014f4c], ebx", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov dword ptr [0x1014f4c], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, ebp", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov dword ptr [0x1014f54], ebx", 
          "mov dword ptr [0x1014f50], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x11913": [
      {
        "basicblock_0x11913": [
          "push ebp", 
          "mov ebp, esp", 
          "mov edx, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [edx + 8]", 
          "sub eax, dword ptr [ecx + 8]", 
          "push esi", 
          "mov esi, dword ptr [ecx + 4]", 
          "push edi", 
          "mov edi, dword ptr [edx + 4]", 
          "sub eax, esi", 
          "add eax, edi", 
          "jns 0x11934"
        ]
      }, 
      {
        "basicblock_0x11930": [
          "xor eax, eax", 
          "jmp 0x11986"
        ]
      }, 
      {
        "basicblock_0x11934": [
          "test eax, eax", 
          "jg 0x11930"
        ]
      }, 
      {
        "basicblock_0x11986": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x11938": [
          "cmp edi, esi", 
          "push ebx", 
          "lea eax, dword ptr [edx + edi*4 + 8]", 
          "lea ebx, dword ptr [ecx + esi*4 + 8]", 
          "mov dword ptr [ebp + 8], eax", 
          "mov ecx, edi", 
          "jg 0x1194c"
        ]
      }, 
      {
        "basicblock_0x1194a": [
          "mov ecx, esi", 
          "test ecx, ecx", 
          "jle 0x11982"
        ]
      }, 
      {
        "basicblock_0x1194c": [
          "test ecx, ecx", 
          "jle 0x11982"
        ]
      }, 
      {
        "basicblock_0x11950": [
          "mov dword ptr [ebp + 0xc], ecx", 
          "sub dword ptr [ebp + 0xc], edi", 
          "mov edi, ecx", 
          "sub edi, esi", 
          "cmp ecx, dword ptr [ebp + 0xc]", 
          "jle 0x1196a"
        ]
      }, 
      {
        "basicblock_0x11982": [
          "xor eax, eax", 
          "inc eax", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x1195f": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov edx, dword ptr [eax]", 
          "sub dword ptr [ebp + 8], 4", 
          "jmp 0x1196c"
        ]
      }, 
      {
        "basicblock_0x1196a": [
          "xor edx, edx", 
          "cmp ecx, edi", 
          "jle 0x11977"
        ]
      }, 
      {
        "basicblock_0x1196c": [
          "cmp ecx, edi", 
          "jle 0x11977"
        ]
      }, 
      {
        "basicblock_0x11970": [
          "mov eax, dword ptr [ebx]", 
          "sub ebx, 4", 
          "jmp 0x11979"
        ]
      }, 
      {
        "basicblock_0x11977": [
          "xor eax, eax", 
          "cmp edx, eax", 
          "jne 0x1198c"
        ]
      }, 
      {
        "basicblock_0x11979": [
          "cmp edx, eax", 
          "jne 0x1198c"
        ]
      }, 
      {
        "basicblock_0x1197d": [
          "dec ecx", 
          "test ecx, ecx", 
          "jg 0x1195a"
        ]
      }, 
      {
        "basicblock_0x1198c": [
          "xor eax, eax", 
          "jmp 0x11985"
        ]
      }, 
      {
        "basicblock_0x1195a": [
          "cmp ecx, dword ptr [ebp + 0xc]", 
          "jle 0x1196a"
        ]
      }, 
      {
        "basicblock_0x11985": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x7ba7": [
      {
        "basicblock_0x7ba7": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "mov dword ptr [ebp - 4], 0x80000007", 
          "call 0x12670", 
          "int3 ", 
          "cmp dword ptr [esp + 4], 0", 
          "je 0x7bce"
        ]
      }
    ]
  }, 
  {
    "func_0x5540": [
      {
        "basicblock_0x5540": [
          "push edi", 
          "push dword ptr [esp + 0x14]", 
          "lea eax, dword ptr [esp + 0x10]", 
          "push dword ptr [esp + 0x14]", 
          "push eax", 
          "call 0x8642", 
          "mov edi, eax", 
          "test edi, edi", 
          "je 0x5571"
        ]
      }, 
      {
        "basicblock_0x5559": [
          "push esi", 
          "mov esi, dword ptr [esp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "test eax, eax", 
          "je 0x556e"
        ]
      }, 
      {
        "basicblock_0x5571": [
          "pop edi", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x5564": [
          "push eax", 
          "call dword ptr [0x100107c]", 
          "and dword ptr [esi], 0", 
          "mov dword ptr [esi], edi", 
          "pop esi", 
          "pop edi", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x556e": [
          "mov dword ptr [esi], edi", 
          "pop esi", 
          "pop edi", 
          "ret 0x10"
        ]
      }
    ]
  }, 
  {
    "func_0x8a54": [
      {
        "basicblock_0x8a54": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 4], esi", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0x8b86"
        ]
      }, 
      {
        "basicblock_0x8a73": [
          "push dword ptr [0x1014f64]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x11913", 
          "test eax, eax", 
          "jne 0x8b86"
        ]
      }, 
      {
        "basicblock_0x8b86": [
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x8a8b": [
          "push edi", 
          "push esi", 
          "push dword ptr [0x1014010]", 
          "push ebx", 
          "call 0x8642", 
          "mov edi, eax", 
          "push edi", 
          "call 0x7f57", 
          "push edi", 
          "mov dword ptr [ebp + 8], eax", 
          "call dword ptr [0x100107c]", 
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "mov dword ptr [ebx], esi", 
          "push dword ptr [0x1014010]", 
          "push dword ptr [ebp + 8]", 
          "call 0x8754", 
          "push dword ptr [ebp + 8]", 
          "mov dword ptr [ebx], eax", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f88]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xc266", 
          "push dword ptr [ebp - 4]", 
          "push ebx", 
          "call 0xbe29", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x8f17": [
      {
        "basicblock_0x8f17": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "jne 0x8ff1"
        ]
      }, 
      {
        "basicblock_0x8fdd": [
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "imul ecx, dword ptr [edx]", 
          "cmp ecx, 0xff", 
          "jne 0x8ff1"
        ]
      }, 
      {
        "basicblock_0x8ff1": [
          "xor esi, esi", 
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x8fec": [
          "xor esi, esi", 
          "inc esi", 
          "jmp 0x8ff3"
        ]
      }, 
      {
        "basicblock_0x8ff3": [
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x8e2c": [
      {
        "basicblock_0x8e2c": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "jne 0x8f05"
        ]
      }, 
      {
        "basicblock_0x8ef2": [
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "imul ecx, dword ptr [edx]", 
          "cmp ecx, 0xff", 
          "je 0x8f05"
        ]
      }, 
      {
        "basicblock_0x8f05": [
          "xor esi, esi", 
          "inc esi", 
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x8f01": [
          "xor esi, esi", 
          "jmp 0x8f08"
        ]
      }, 
      {
        "basicblock_0x8f08": [
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x11a3c": [
      {
        "basicblock_0x11a3c": [
          "push esi", 
          "mov esi, dword ptr [esp + 0xc]", 
          "push edi", 
          "xor edi, edi", 
          "cmp dword ptr [esi + 4], 1", 
          "jg 0x11a4f"
        ]
      }, 
      {
        "basicblock_0x11a4a": [
          "cmp dword ptr [esi + 0xc], edi", 
          "je 0x11a9b"
        ]
      }, 
      {
        "basicblock_0x11a4f": [
          "push ebx", 
          "mov ebx, dword ptr [esp + 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "cmp dword ptr [eax + 4], 1", 
          "jg 0x11a8f"
        ]
      }, 
      {
        "basicblock_0x11a9b": [
          "pop edi", 
          "pop esi", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11a5c": [
          "cmp dword ptr [eax + 0xc], edi", 
          "jne 0x11a8f"
        ]
      }, 
      {
        "basicblock_0x11a8f": [
          "push dword ptr [esp + 0x18]", 
          "push esi", 
          "push ebx", 
          "call 0x115e9", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11a61": [
          "push eax", 
          "call 0x7bc1", 
          "mov dword ptr [ebx], edi", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "jmp 0x11a9a"
        ]
      }, 
      {
        "basicblock_0x11a9a": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x12314": [
      {
        "basicblock_0x12314": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor ecx, ecx", 
          "push edi", 
          "inc ecx", 
          "xor edi, edi", 
          "cmp dword ptr [esi + 4], ecx", 
          "jg 0x1233e"
        ]
      }, 
      {
        "basicblock_0x12326": [
          "cmp dword ptr [esi + 0xc], ecx", 
          "jne 0x1233e"
        ]
      }, 
      {
        "basicblock_0x1233e": [
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "cmp dword ptr [eax + 4], ecx", 
          "jg 0x12390"
        ]
      }, 
      {
        "basicblock_0x1232b": [
          "cmp dword ptr [esi + 8], edi", 
          "jne 0x1233e"
        ]
      }, 
      {
        "basicblock_0x12349": [
          "cmp dword ptr [eax + 0xc], ecx", 
          "jne 0x12390"
        ]
      }, 
      {
        "basicblock_0x12390": [
          "push esi", 
          "push ebx", 
          "call 0x11f1d", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x12330": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, dword ptr [esi]", 
          "mov dword ptr [eax], ecx", 
          "jmp 0x12398"
        ]
      }, 
      {
        "basicblock_0x1234e": [
          "cmp dword ptr [eax + 8], edi", 
          "jne 0x12390"
        ]
      }, 
      {
        "basicblock_0x12398": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x12353": [
          "mov ecx, dword ptr [eax]", 
          "push eax", 
          "mov dword ptr [ebp + 8], ecx", 
          "call 0x7bc1", 
          "mov dword ptr [ebx], edi", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov ebx, dword ptr [ebx]", 
          "mov eax, dword ptr [ebx]", 
          "imul eax, dword ptr [ebp + 8]", 
          "mov dword ptr [ebx], eax", 
          "jmp 0x12397"
        ]
      }, 
      {
        "basicblock_0x12397": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xab09": [
      {
        "basicblock_0xab09": [
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0xabda"
        ]
      }, 
      {
        "basicblock_0xab16": [
          "mov eax, dword ptr [esp + 4]", 
          "mov eax, dword ptr [eax]", 
          "push ebx", 
          "push ebp", 
          "push esi", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 8]", 
          "push edi", 
          "mov edi, dword ptr [eax]", 
          "mov eax, dword ptr [esi + 4]", 
          "mov ebx, dword ptr [edi + 8]", 
          "add eax, ecx", 
          "mov ecx, dword ptr [edi + 4]", 
          "add ecx, ebx", 
          "cmp ecx, eax", 
          "jge 0xab3b"
        ]
      }, 
      {
        "basicblock_0xabda": [
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xab39": [
          "mov eax, ecx", 
          "mov ebp, dword ptr [0x1014f40]", 
          "dec eax", 
          "imul eax, ebp", 
          "sub eax, dword ptr [0x1014f5c]", 
          "cmp eax, ebp", 
          "jle 0xabc2"
        ]
      }, 
      {
        "basicblock_0xab3b": [
          "mov ebp, dword ptr [0x1014f40]", 
          "dec eax", 
          "imul eax, ebp", 
          "sub eax, dword ptr [0x1014f5c]", 
          "cmp eax, ebp", 
          "jle 0xabc2"
        ]
      }, 
      {
        "basicblock_0xab4f": [
          "cdq ", 
          "idiv ebp", 
          "mov ebp, eax", 
          "cmp ebp, ebx", 
          "jg 0xab5f"
        ]
      }, 
      {
        "basicblock_0xabc2": [
          "mov eax, dword ptr [edi + 8]", 
          "mov ecx, dword ptr [esi + 8]", 
          "cmp eax, ecx", 
          "jge 0xabce"
        ]
      }, 
      {
        "basicblock_0xab58": [
          "sub ebx, ebp", 
          "mov dword ptr [edi + 8], ebx", 
          "jmp 0xab87"
        ]
      }, 
      {
        "basicblock_0xab5f": [
          "sub ecx, ebp", 
          "mov eax, ebp", 
          "sub eax, ebx", 
          "shl ecx, 2", 
          "push ecx", 
          "lea eax, dword ptr [edi + eax*4 + 0xc]", 
          "push eax", 
          "lea eax, dword ptr [edi + 0xc]", 
          "push eax", 
          "call dword ptr [0x10011d0]", 
          "mov eax, dword ptr [edi + 8]", 
          "sub eax, ebp", 
          "add dword ptr [edi + 4], eax", 
          "add esp, 0xc", 
          "and dword ptr [edi + 8], 0", 
          "mov eax, dword ptr [esi + 8]", 
          "cmp ebp, eax", 
          "jg 0xab95"
        ]
      }, 
      {
        "basicblock_0xabcc": [
          "mov ecx, eax", 
          "sub eax, ecx", 
          "mov dword ptr [edi + 8], eax", 
          "sub dword ptr [esi + 8], ecx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xabce": [
          "sub eax, ecx", 
          "mov dword ptr [edi + 8], eax", 
          "sub dword ptr [esi + 8], ecx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xab87": [
          "mov eax, dword ptr [esi + 8]", 
          "cmp ebp, eax", 
          "jg 0xab95"
        ]
      }, 
      {
        "basicblock_0xab8e": [
          "sub eax, ebp", 
          "mov dword ptr [esi + 8], eax", 
          "jmp 0xabc2"
        ]
      }, 
      {
        "basicblock_0xab95": [
          "mov ecx, eax", 
          "sub ecx, ebp", 
          "add ecx, dword ptr [esi + 4]", 
          "shl ecx, 2", 
          "push ecx", 
          "mov ecx, ebp", 
          "sub ecx, eax", 
          "lea eax, dword ptr [esi + ecx*4 + 0xc]", 
          "push eax", 
          "lea eax, dword ptr [esi + 0xc]", 
          "push eax", 
          "call dword ptr [0x10011d0]", 
          "mov eax, dword ptr [esi + 8]", 
          "sub eax, ebp", 
          "add dword ptr [esi + 4], eax", 
          "add esp, 0xc", 
          "and dword ptr [esi + 8], 0", 
          "mov eax, dword ptr [edi + 8]", 
          "mov ecx, dword ptr [esi + 8]", 
          "cmp eax, ecx", 
          "jge 0xabce"
        ]
      }
    ]
  }, 
  {
    "func_0x8642": [
      {
        "basicblock_0x8642": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov edx, dword ptr [esi]", 
          "mov ecx, dword ptr [edx]", 
          "mov edx, dword ptr [edx + 4]", 
          "mov eax, dword ptr [ecx + 8]", 
          "mov edx, dword ptr [edx + 8]", 
          "cmp eax, edx", 
          "push edi", 
          "jge 0x8662"
        ]
      }, 
      {
        "basicblock_0x8660": [
          "mov edx, eax", 
          "test edx, edx", 
          "jge 0x8668"
        ]
      }, 
      {
        "basicblock_0x8662": [
          "test edx, edx", 
          "jge 0x8668"
        ]
      }, 
      {
        "basicblock_0x8666": [
          "xor edx, edx", 
          "push dword ptr [ebp + 0xc]", 
          "sub eax, edx", 
          "mov dword ptr [ecx + 8], eax", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], edx", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax]", 
          "call 0x7dbe", 
          "push dword ptr [ebp + 0xc]", 
          "mov dword ptr [ebp - 4], eax", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7dbe", 
          "push dword ptr [ebp + 0xc]", 
          "mov esi, eax", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11ee7", 
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x8356", 
          "push dword ptr [ebp - 4]", 
          "mov edi, eax", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "call 0x7bc1", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x8668": [
          "push dword ptr [ebp + 0xc]", 
          "sub eax, edx", 
          "mov dword ptr [ecx + 8], eax", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], edx", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax]", 
          "call 0x7dbe", 
          "push dword ptr [ebp + 0xc]", 
          "mov dword ptr [ebp - 4], eax", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7dbe", 
          "push dword ptr [ebp + 0xc]", 
          "mov esi, eax", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11ee7", 
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x8356", 
          "push dword ptr [ebp - 4]", 
          "mov edi, eax", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "call 0x7bc1", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x5418": [
      {
        "basicblock_0x5418": [
          "cmp dword ptr [0x1014010], 0xa", 
          "jne 0x5441"
        ]
      }, 
      {
        "basicblock_0x5421": [
          "push esi", 
          "mov esi, dword ptr [esp + 8]", 
          "push esi", 
          "call 0x8a54", 
          "push dword ptr [0x1014f88]", 
          "push esi", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "pop esi", 
          "jmp 0x5456"
        ]
      }, 
      {
        "basicblock_0x5441": [
          "mov eax, dword ptr [0x1014d54]", 
          "push dword ptr [eax*4 + 0x1014d38]", 
          "push dword ptr [esp + 8]", 
          "call 0xc474", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x5456": [
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xc450": [
      {
        "basicblock_0xc450": [
          "push 0", 
          "push dword ptr [esp + 0xc]", 
          "push dword ptr [esp + 0xc]", 
          "call 0xc37c", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x8c5c": [
      {
        "basicblock_0x8c5c": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "xor esi, esi", 
          "inc esi", 
          "test eax, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "jne 0x8d35"
        ]
      }, 
      {
        "basicblock_0x8d25": [
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "imul ecx, dword ptr [edx]", 
          "cmp ecx, esi", 
          "je 0x8d35"
        ]
      }, 
      {
        "basicblock_0x8d35": [
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x8d33": [
          "xor esi, esi", 
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x8d44": [
      {
        "basicblock_0x8d44": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [esi]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "jne 0x8e1b"
        ]
      }, 
      {
        "basicblock_0x8e0a": [
          "mov ecx, dword ptr [eax + 4]", 
          "mov edx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "imul ecx, dword ptr [edx]", 
          "xor esi, esi", 
          "inc esi", 
          "cmp ecx, esi", 
          "je 0x8e1d"
        ]
      }, 
      {
        "basicblock_0x8e1b": [
          "xor esi, esi", 
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x8e1d": [
          "push eax", 
          "call 0x7bd1", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2604": [
      {
        "basicblock_0x2604": [
          "push esi", 
          "push edi", 
          "push 0x193", 
          "push dword ptr [esp + 0x10]", 
          "call dword ptr [0x1001170]", 
          "push dword ptr [esp + 0x10]", 
          "mov esi, eax", 
          "call dword ptr [0x1001074]", 
          "push dword ptr [esp + 0x10]", 
          "mov edi, eax", 
          "push esi", 
          "call dword ptr [0x1001110]", 
          "push esi", 
          "call dword ptr [0x1001114]", 
          "push edi", 
          "push edi", 
          "push 0xb1", 
          "push esi", 
          "call dword ptr [0x100113c]", 
          "xor eax, eax", 
          "pop edi", 
          "inc eax", 
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x44b4": [
      {
        "basicblock_0x44b4": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "cmp word ptr [ebp + 8], 0", 
          "push edi", 
          "je 0x45b3"
        ]
      }, 
      {
        "basicblock_0x44c6": [
          "mov edi, dword ptr [ebp + 0xc]", 
          "test edi, edi", 
          "je 0x45b3"
        ]
      }, 
      {
        "basicblock_0x45b3": [
          "push dword ptr [ebp + 0x14]", 
          "push dword ptr [ebp + 0x18]", 
          "call dword ptr [0x1001090]", 
          "pop edi", 
          "leave ", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x44d1": [
          "mov edx, dword ptr [ebp + 0x14]", 
          "mov ax, word ptr [0x101402c]", 
          "push ebx", 
          "xor ecx, ecx", 
          "mov cx, word ptr [edx]", 
          "push esi", 
          "mov ebx, edx", 
          "jmp 0x44ef"
        ]
      }, 
      {
        "basicblock_0x44ef": [
          "cmp cx, ax", 
          "jne 0x44e5"
        ]
      }, 
      {
        "basicblock_0x44f4": [
          "mov eax, ebx", 
          "sub eax, edx", 
          "xor edx, edx", 
          "sar eax, 1", 
          "cmp dword ptr [ebp + 0x10], edx", 
          "mov ecx, eax", 
          "setne dl", 
          "mov esi, edi", 
          "mov dword ptr [ebp + 0xc], edi", 
          "sub ecx, edx", 
          "and esi, 0xf", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "mov edx, esi", 
          "jmp 0x452a"
        ]
      }, 
      {
        "basicblock_0x44e5": [
          "test cx, cx", 
          "je 0x44f4"
        ]
      }, 
      {
        "basicblock_0x452a": [
          "test ecx, ecx", 
          "jg 0x4515"
        ]
      }, 
      {
        "basicblock_0x44ea": [
          "inc ebx", 
          "inc ebx", 
          "mov cx, word ptr [ebx]", 
          "cmp cx, ax", 
          "jne 0x44e5"
        ]
      }, 
      {
        "basicblock_0x452e": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "and dword ptr [ebp - 4], 0", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "mov dword ptr [ebp - 8], ecx", 
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov dword ptr [ebp + 0xc], ecx", 
          "mov ecx, dword ptr [ebp + 0x18]", 
          "mov dword ptr [ebp - 0x10], esi", 
          "lea esi, dword ptr [ecx + eax*2]", 
          "lea edi, dword ptr [ebx - 2]", 
          "lea ecx, dword ptr [esi - 2]", 
          "jle 0x4595"
        ]
      }, 
      {
        "basicblock_0x4515": [
          "cmp ecx, edx", 
          "jbe 0x4528"
        ]
      }, 
      {
        "basicblock_0x4553": [
          "mov ax, word ptr [edi]", 
          "dec dword ptr [ebp - 8]", 
          "inc dword ptr [ebp - 4]", 
          "mov word ptr [ecx], ax", 
          "mov eax, dword ptr [ebp - 4]", 
          "xor edx, edx", 
          "div dword ptr [ebp - 0x10]", 
          "test edx, edx", 
          "jne 0x458b"
        ]
      }, 
      {
        "basicblock_0x4595": [
          "cmp dword ptr [ebp + 0x10], 0", 
          "je 0x45a7"
        ]
      }, 
      {
        "basicblock_0x4519": [
          "sub ecx, edx", 
          "inc eax", 
          "shr edi, 4", 
          "je 0x452a"
        ]
      }, 
      {
        "basicblock_0x4528": [
          "sub ecx, edx", 
          "test ecx, ecx", 
          "jg 0x4515"
        ]
      }, 
      {
        "basicblock_0x456b": [
          "cmp dword ptr [ebp - 8], edx", 
          "jle 0x458b"
        ]
      }, 
      {
        "basicblock_0x458b": [
          "dec ecx", 
          "dec ecx", 
          "dec edi", 
          "dec edi", 
          "cmp dword ptr [ebp - 8], 0", 
          "jg 0x4553"
        ]
      }, 
      {
        "basicblock_0x459b": [
          "mov eax, dword ptr [ebp + 0x14]", 
          "mov ax, word ptr [eax]", 
          "mov ecx, dword ptr [ebp + 0x18]", 
          "mov word ptr [ecx], ax", 
          "push ebx", 
          "push esi", 
          "call dword ptr [0x1001090]", 
          "pop esi", 
          "pop ebx", 
          "jmp 0x45bf"
        ]
      }, 
      {
        "basicblock_0x45a7": [
          "push ebx", 
          "push esi", 
          "call dword ptr [0x1001090]", 
          "pop esi", 
          "pop ebx", 
          "jmp 0x45bf"
        ]
      }, 
      {
        "basicblock_0x4521": [
          "mov edx, edi", 
          "and edx, 0xf", 
          "jmp 0x452a"
        ]
      }, 
      {
        "basicblock_0x4570": [
          "mov ax, word ptr [ebp + 8]", 
          "and dword ptr [ebp - 4], edx", 
          "dec ecx", 
          "dec ecx", 
          "shr dword ptr [ebp + 0xc], 4", 
          "mov word ptr [ecx], ax", 
          "je 0x458b"
        ]
      }, 
      {
        "basicblock_0x45bf": [
          "pop edi", 
          "leave ", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x4582": [
          "mov eax, dword ptr [ebp + 0xc]", 
          "and eax, 0xf", 
          "mov dword ptr [ebp - 0x10], eax", 
          "dec ecx", 
          "dec ecx", 
          "dec edi", 
          "dec edi", 
          "cmp dword ptr [ebp - 8], 0", 
          "jg 0x4553"
        ]
      }
    ]
  }, 
  {
    "func_0xc37c": [
      {
        "basicblock_0xc37c": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "push dword ptr [ebp + 8]", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x8a54", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x8a54", 
          "push dword ptr [ebp + 0x10]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "mov eax, dword ptr [ebp + 8]", 
          "push dword ptr [eax]", 
          "call 0xc15c", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0xf3cf": [
      {
        "basicblock_0xf3cf": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "xor esi, esi", 
          "push edi", 
          "push esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "mov dword ptr [ebp - 8], esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 0x10], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 0x10], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0xbbd4", 
          "call 0x7c26", 
          "mov esi, 0x80000000", 
          "push esi", 
          "xor edi, edi", 
          "push edi", 
          "mov dword ptr [ebp - 8], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ecx], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 8], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f64]", 
          "and dword ptr [ebp - 0xc], 0", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, 0x7fffffff", 
          "push dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 0xc]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "push dword ptr [ebp - 0xc]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, esi", 
          "jae 0xf65a"
        ]
      }, 
      {
        "basicblock_0xf654": [
          "inc eax", 
          "mov dword ptr [ecx + 0xc], eax", 
          "jmp 0xf66e"
        ]
      }, 
      {
        "basicblock_0xf65a": [
          "push 0x80000000", 
          "push dword ptr [0x1014f64]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, esi", 
          "jae 0xf68d"
        ]
      }, 
      {
        "basicblock_0xf66e": [
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, esi", 
          "jae 0xf68d"
        ]
      }, 
      {
        "basicblock_0xf687": [
          "inc eax", 
          "mov dword ptr [ecx + 0xc], eax", 
          "jmp 0xf6a1"
        ]
      }, 
      {
        "basicblock_0xf68d": [
          "push 0x80000000", 
          "push dword ptr [0x1014f64]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xf6fe"
        ]
      }, 
      {
        "basicblock_0xf6a1": [
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbc54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xf6fe"
        ]
      }, 
      {
        "basicblock_0xf6ca": [
          "mov ecx, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "mov edx, dword ptr [eax + 8]", 
          "mov ecx, dword ptr [ecx]", 
          "sub edx, dword ptr [ecx + 8]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub edx, dword ptr [ecx + 4]", 
          "lea eax, dword ptr [edx + eax - 1]", 
          "imul eax, dword ptr [0x1014f40]", 
          "cmp eax, dword ptr [0x1014f5c]", 
          "jg 0xf6fe"
        ]
      }, 
      {
        "basicblock_0xf6fe": [
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 0x10]", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "call 0x7bd1", 
          "push dword ptr [ebp - 4]", 
          "mov dword ptr [ebp - 0x10], esi", 
          "call 0x7bd1", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "mov dword ptr [ebx], esi", 
          "call 0xab09", 
          "mov eax, dword ptr [ebp - 8]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [ebx], eax", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xf6f1": [
          "cmp dword ptr [0x1014f58], 0", 
          "je 0xf628"
        ]
      }, 
      {
        "basicblock_0xf628": [
          "push dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 0xc]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "push dword ptr [ebp - 0xc]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, esi", 
          "jae 0xf65a"
        ]
      }
    ]
  }, 
  {
    "func_0x11aa0": [
      {
        "basicblock_0x11aa0": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor ecx, ecx", 
          "push edi", 
          "inc ecx", 
          "xor edi, edi", 
          "cmp dword ptr [esi + 4], ecx", 
          "jg 0x11aca"
        ]
      }, 
      {
        "basicblock_0x11ab2": [
          "cmp dword ptr [esi + 0xc], ecx", 
          "jne 0x11aca"
        ]
      }, 
      {
        "basicblock_0x11aca": [
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "cmp dword ptr [eax + 4], ecx", 
          "jg 0x11b1c"
        ]
      }, 
      {
        "basicblock_0x11ab7": [
          "cmp dword ptr [esi + 8], edi", 
          "jne 0x11aca"
        ]
      }, 
      {
        "basicblock_0x11ad5": [
          "cmp dword ptr [eax + 0xc], ecx", 
          "jne 0x11b1c"
        ]
      }, 
      {
        "basicblock_0x11b1c": [
          "push dword ptr [ebp + 0x10]", 
          "push esi", 
          "push ebx", 
          "call 0x117a5", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11abc": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, dword ptr [esi]", 
          "mov dword ptr [eax], ecx", 
          "jmp 0x11b27"
        ]
      }, 
      {
        "basicblock_0x11ada": [
          "cmp dword ptr [eax + 8], edi", 
          "jne 0x11b1c"
        ]
      }, 
      {
        "basicblock_0x11b27": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11adf": [
          "mov ecx, dword ptr [eax]", 
          "push eax", 
          "mov dword ptr [ebp + 8], ecx", 
          "call 0x7bc1", 
          "mov dword ptr [ebx], edi", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov ebx, dword ptr [ebx]", 
          "mov eax, dword ptr [ebx]", 
          "imul eax, dword ptr [ebp + 8]", 
          "mov dword ptr [ebx], eax", 
          "jmp 0x11b26"
        ]
      }, 
      {
        "basicblock_0x11b26": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x7f57": [
      {
        "basicblock_0x7f57": [
          "sub esp, 0xc", 
          "and dword ptr [esp], 0", 
          "push ebx", 
          "push ebp", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0x20]", 
          "xor ebx, ebx", 
          "inc ebx", 
          "push edi", 
          "mov dword ptr [esp + 0x18], ebx", 
          "call dword ptr [0x10011d4]", 
          "mov ebp, eax", 
          "pop ecx", 
          "push ebp", 
          "mov dword ptr [esp + 0x1c], ebp", 
          "call 0x7bfb", 
          "mov esi, eax", 
          "mov dword ptr [esi], ebx", 
          "xor ebx, ebx", 
          "lea eax, dword ptr [esi + ebp*4 + 8]", 
          "mov dword ptr [esi + 4], ebx", 
          "mov dword ptr [esi + 8], ebx", 
          "mov dword ptr [esp + 0x20], eax", 
          "mov dword ptr [0x1014f44], ebx", 
          "movzx eax, word ptr [edi]", 
          "cmp eax, ebx", 
          "je 0x80fb"
        ]
      }, 
      {
        "basicblock_0x7fa7": [
          "mov ebp, 0x1014308", 
          "cmp eax, 0xa", 
          "je 0x80e5"
        ]
      }, 
      {
        "basicblock_0x80fb": [
          "cmp dword ptr [esi + 4], ebp", 
          "jge 0x8112"
        ]
      }, 
      {
        "basicblock_0x7fb5": [
          "xor ecx, ecx", 
          "cmp word ptr [0x101402c], cx", 
          "je 0x7fff"
        ]
      }, 
      {
        "basicblock_0x80e5": [
          "cmp ebx, 5", 
          "je 0x819a"
        ]
      }, 
      {
        "basicblock_0x8100": [
          "mov eax, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi + 8]", 
          "inc eax", 
          "dec ecx", 
          "cmp eax, ebp", 
          "jl 0x8106"
        ]
      }, 
      {
        "basicblock_0x8112": [
          "mov eax, dword ptr [esp + 0x10]", 
          "imul eax, dword ptr [esp + 0x14]", 
          "add dword ptr [esi + 8], eax", 
          "jmp 0x81a6"
        ]
      }, 
      {
        "basicblock_0x7fc0": [
          "mov edx, dword ptr [0x101402c]", 
          "cmp dx, word ptr [edi]", 
          "jne 0x7fdb"
        ]
      }, 
      {
        "basicblock_0x7fff": [
          "mov ecx, eax", 
          "sub ecx, 0x2b", 
          "je 0x8051"
        ]
      }, 
      {
        "basicblock_0x80ee": [
          "cmp ebx, 0xd", 
          "je 0x819a"
        ]
      }, 
      {
        "basicblock_0x819a": [
          "xor eax, eax", 
          "inc eax", 
          "and dword ptr [esi + 8], 0", 
          "mov dword ptr [esi + 4], eax", 
          "mov dword ptr [esi], eax", 
          "cmp dword ptr [esi + 4], 0", 
          "jne 0x81b4"
        ]
      }, 
      {
        "basicblock_0x810c": [
          "mov dword ptr [esi + 8], ecx", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, dword ptr [esp + 0x10]", 
          "imul eax, dword ptr [esp + 0x14]", 
          "add dword ptr [esi + 8], eax", 
          "jmp 0x81a6"
        ]
      }, 
      {
        "basicblock_0x8106": [
          "inc eax", 
          "dec ecx", 
          "cmp eax, ebp", 
          "jl 0x8106"
        ]
      }, 
      {
        "basicblock_0x81a6": [
          "cmp dword ptr [esi + 4], 0", 
          "jne 0x81b4"
        ]
      }, 
      {
        "basicblock_0x7fcb": []
      }, 
      {
        "basicblock_0x7fdb": [
          "test ecx, ecx", 
          "je 0x7fff"
        ]
      }, 
      {
        "basicblock_0x8006": [
          "dec ecx", 
          "dec ecx", 
          "je 0x8051"
        ]
      }, 
      {
        "basicblock_0x8051": []
      }, 
      {
        "basicblock_0x80f7": [
          "mov ebp, dword ptr [esp + 0x18]", 
          "cmp dword ptr [esi + 4], ebp", 
          "jge 0x8112"
        ]
      }, 
      {
        "basicblock_0x81ac": [
          "push esi", 
          "call 0x7bc1", 
          "xor esi, esi", 
          "push dword ptr [0x1014f5c]", 
          "push esi", 
          "call 0x7cd3", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "add esp, 0xc", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x81b4": [
          "push dword ptr [0x1014f5c]", 
          "push esi", 
          "call 0x7cd3", 
          "pop edi", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "add esp, 0xc", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x7fdf": [
          "lea eax, dword ptr [ecx + ecx]"
        ]
      }, 
      {
        "basicblock_0x800a": [
          "dec ecx", 
          "je 0x8047"
        ]
      }, 
      {
        "basicblock_0x800d": [
          "dec ecx", 
          "dec ecx", 
          "je 0x803d"
        ]
      }, 
      {
        "basicblock_0x8047": []
      }, 
      {
        "basicblock_0x8011": [
          "sub ecx, 0x2e", 
          "je 0x801b"
        ]
      }, 
      {
        "basicblock_0x803d": []
      }, 
      {
        "basicblock_0x8016": [
          "sub ecx, 7", 
          "jne 0x8029"
        ]
      }, 
      {
        "basicblock_0x801b": [
          "cmp eax, 0x5e", 
          "je 0x8033"
        ]
      }, 
      {
        "basicblock_0x8029": []
      }, 
      {
        "basicblock_0x8020": [
          "cmp dword ptr [0x1014010], 0xa", 
          "je 0x8033"
        ]
      }, 
      {
        "basicblock_0x8033": []
      }
    ]
  }, 
  {
    "func_0x8754": [
      {
        "basicblock_0x8754": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "push 0", 
          "call 0x7bc1", 
          "mov esi, dword ptr [esp + 0x10]", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 4]", 
          "push dword ptr [esp + 0x14]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov ebx, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov edi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 1", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c4c", 
          "mov esi, eax", 
          "mov eax, dword ptr [ebx + 8]", 
          "test eax, eax", 
          "jge 0x87a1"
        ]
      }, 
      {
        "basicblock_0x879a": [
          "sub dword ptr [esi + 8], eax", 
          "and dword ptr [ebx + 8], 0", 
          "call 0x7c26", 
          "push dword ptr [0x1014f40]", 
          "mov edi, eax", 
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "call 0x7e7c", 
          "mov dword ptr [edi], eax", 
          "push dword ptr [0x1014f40]", 
          "push dword ptr [esp + 0x18]", 
          "push esi", 
          "call 0x7e7c", 
          "push ebx", 
          "mov dword ptr [edi + 4], eax", 
          "call 0x7bc1", 
          "push esi", 
          "call 0x7bc1", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x87a1": [
          "call 0x7c26", 
          "push dword ptr [0x1014f40]", 
          "mov edi, eax", 
          "push dword ptr [esp + 0x18]", 
          "push ebx", 
          "call 0x7e7c", 
          "mov dword ptr [edi], eax", 
          "push dword ptr [0x1014f40]", 
          "push dword ptr [esp + 0x18]", 
          "push esi", 
          "call 0x7e7c", 
          "push ebx", 
          "mov dword ptr [edi + 4], eax", 
          "call 0x7bc1", 
          "push esi", 
          "call 0x7bc1", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xc266": [
      {
        "basicblock_0xc266": [
          "push ebp", 
          "mov ebp, esp", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "push edi", 
          "push esi", 
          "call 0xbd61", 
          "test eax, eax", 
          "je 0xc28e"
        ]
      }, 
      {
        "basicblock_0xc279": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "mov dword ptr [ebp + 0xc], 0x80000002", 
          "call 0x12670", 
          "push 0", 
          "call 0x7bd1", 
          "call 0x7c26", 
          "mov ebx, eax", 
          "push dword ptr [ebx]", 
          "call 0x7bc1", 
          "and dword ptr [ebx], 0", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov esi, dword ptr [esi]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "call 0x7bc1", 
          "and dword ptr [ebx + 4], 0", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx + 4], eax", 
          "mov esi, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x12314", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "push ebx", 
          "call 0x12314", 
          "push 0x80000000", 
          "push dword ptr [ebx]", 
          "push dword ptr [esi]", 
          "call 0x11b2d", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xc355"
        ]
      }, 
      {
        "basicblock_0xc28e": [
          "push 0", 
          "call 0x7bd1", 
          "call 0x7c26", 
          "mov ebx, eax", 
          "push dword ptr [ebx]", 
          "call 0x7bc1", 
          "and dword ptr [ebx], 0", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov esi, dword ptr [esi]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "call 0x7bc1", 
          "and dword ptr [ebx + 4], 0", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx + 4], eax", 
          "mov esi, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x12314", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "push ebx", 
          "call 0x12314", 
          "push 0x80000000", 
          "push dword ptr [ebx]", 
          "push dword ptr [esi]", 
          "call 0x11b2d", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [ebx + 4]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xc355"
        ]
      }, 
      {
        "basicblock_0xc347": [
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax]", 
          "and dword ptr [eax + 8], 0", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xc36f"
        ]
      }, 
      {
        "basicblock_0xc355": [
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xc36f"
        ]
      }, 
      {
        "basicblock_0xc361": [
          "mov eax, dword ptr [eax]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax + 4]", 
          "and dword ptr [eax + 8], 0", 
          "push ebx", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xc36f": [
          "push ebx", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xc474": [
      {
        "basicblock_0xc474": [
          "push 2", 
          "push dword ptr [esp + 0xc]", 
          "push dword ptr [esp + 0xc]", 
          "call 0xc37c", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0xc15c": [
      {
        "basicblock_0xc15c": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "mov eax, dword ptr [ebp + 8]", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov edx, dword ptr [ebx + 8]", 
          "push esi", 
          "mov esi, dword ptr [ebx + 4]", 
          "push edi", 
          "mov edi, dword ptr [eax]", 
          "mov ecx, dword ptr [edi + 8]", 
          "mov eax, dword ptr [edi + 4]", 
          "add eax, ecx", 
          "add esi, edx", 
          "cmp eax, esi", 
          "jg 0xc183"
        ]
      }, 
      {
        "basicblock_0xc181": [
          "mov eax, esi", 
          "cmp ecx, edx", 
          "jl 0xc189"
        ]
      }, 
      {
        "basicblock_0xc183": [
          "cmp ecx, edx", 
          "jl 0xc189"
        ]
      }, 
      {
        "basicblock_0xc187": [
          "mov ecx, edx", 
          "sub eax, ecx", 
          "push eax", 
          "mov dword ptr [ebp + 0xc], eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 8]", 
          "mov esi, eax", 
          "mov eax, dword ptr [edi + 8]", 
          "cmp eax, ecx", 
          "jl 0xc1a2"
        ]
      }, 
      {
        "basicblock_0xc189": [
          "sub eax, ecx", 
          "push eax", 
          "mov dword ptr [ebp + 0xc], eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 8]", 
          "mov esi, eax", 
          "mov eax, dword ptr [edi + 8]", 
          "cmp eax, ecx", 
          "jl 0xc1a2"
        ]
      }, 
      {
        "basicblock_0xc1a0": [
          "mov eax, ecx", 
          "lea ecx, dword ptr [edi + 0xc]", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "test eax, eax", 
          "lea ecx, dword ptr [ebx + 0xc]", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "mov dword ptr [esi + 4], eax", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "jle 0xc23c"
        ]
      }, 
      {
        "basicblock_0xc1a2": [
          "lea ecx, dword ptr [edi + 0xc]", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "test eax, eax", 
          "lea ecx, dword ptr [ebx + 0xc]", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "mov dword ptr [esi + 4], eax", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "jle 0xc23c"
        ]
      }, 
      {
        "basicblock_0xc1c1": [
          "mov eax, dword ptr [edi + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0xc1e7"
        ]
      }, 
      {
        "basicblock_0xc23c": [
          "mov eax, dword ptr [edi]", 
          "mov dword ptr [esi], eax", 
          "jmp 0xc24d"
        ]
      }, 
      {
        "basicblock_0xc1c9": [
          "sub eax, dword ptr [esi + 8]", 
          "mov edx, dword ptr [esi + 4]", 
          "add eax, dword ptr [ebp + 0xc]", 
          "sub edx, dword ptr [edi + 4]", 
          "cmp eax, edx", 
          "jle 0xc1e7"
        ]
      }, 
      {
        "basicblock_0xc1e7": [
          "and dword ptr [ebp - 4], 0", 
          "mov eax, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0xc20e"
        ]
      }, 
      {
        "basicblock_0xc24d": [
          "cmp dword ptr [esi + 4], 1", 
          "jg 0xc242"
        ]
      }, 
      {
        "basicblock_0xc1d9": [
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [eax]", 
          "add dword ptr [ebp - 0xc], 4", 
          "mov dword ptr [ebp - 4], eax", 
          "jmp 0xc1eb"
        ]
      }, 
      {
        "basicblock_0xc1f3": [
          "sub eax, dword ptr [esi + 8]", 
          "mov edx, dword ptr [esi + 4]", 
          "add eax, dword ptr [ebp + 0xc]", 
          "sub edx, dword ptr [ebx + 4]", 
          "cmp eax, edx", 
          "jle 0xc20e"
        ]
      }, 
      {
        "basicblock_0xc20e": [
          "xor eax, eax", 
          "mov edx, dword ptr [ebp + 0x10]", 
          "sub edx, 0", 
          "je 0xc228"
        ]
      }, 
      {
        "basicblock_0xc253": [
          "mov edi, dword ptr [ebp + 8]", 
          "push dword ptr [edi]", 
          "call 0x7bc1", 
          "mov dword ptr [edi], esi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0xc242": [
          "sub ecx, 4", 
          "cmp dword ptr [ecx], 0", 
          "jne 0xc253"
        ]
      }, 
      {
        "basicblock_0xc1eb": [
          "mov eax, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0xc20e"
        ]
      }, 
      {
        "basicblock_0xc203": [
          "mov eax, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [eax]", 
          "add dword ptr [ebp - 0x10], 4", 
          "jmp 0xc210"
        ]
      }, 
      {
        "basicblock_0xc218": [
          "dec edx", 
          "je 0xc223"
        ]
      }, 
      {
        "basicblock_0xc228": [
          "and eax, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "add ecx, 4", 
          "dec dword ptr [ebp + 0xc]", 
          "inc dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0xc1c1"
        ]
      }, 
      {
        "basicblock_0xc24a": [
          "dec dword ptr [esi + 4]", 
          "cmp dword ptr [esi + 4], 1", 
          "jg 0xc242"
        ]
      }, 
      {
        "basicblock_0xc210": [
          "mov edx, dword ptr [ebp + 0x10]", 
          "sub edx, 0", 
          "je 0xc228"
        ]
      }, 
      {
        "basicblock_0xc21b": [
          "dec edx", 
          "jne 0xc230"
        ]
      }, 
      {
        "basicblock_0xc223": [
          "or eax, dword ptr [ebp - 4]", 
          "jmp 0xc22b"
        ]
      }, 
      {
        "basicblock_0xc21e": [
          "xor eax, dword ptr [ebp - 4]", 
          "jmp 0xc22b"
        ]
      }, 
      {
        "basicblock_0xc230": [
          "dec dword ptr [ebp + 0xc]", 
          "inc dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0xc1c1"
        ]
      }, 
      {
        "basicblock_0xc22b": [
          "mov dword ptr [ecx], eax", 
          "add ecx, 4", 
          "dec dword ptr [ebp + 0xc]", 
          "inc dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0xc1c1"
        ]
      }
    ]
  }, 
  {
    "func_0xbe44": [
      {
        "basicblock_0xbe44": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor ebx, ebx", 
          "push ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], ebx", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax + 4], ebx", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "push dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbd6f", 
          "push dword ptr [ebp - 4]", 
          "push dword ptr [ebp + 8]", 
          "call 0xe2f5", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x115e9": [
      {
        "basicblock_0x115e9": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x20", 
          "xor eax, eax", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push esi", 
          "mov esi, dword ptr [ebx + 4]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov dword ptr [ebp - 0x14], eax", 
          "mov eax, dword ptr [ebp + 8]", 
          "push edi", 
          "mov edi, dword ptr [eax]", 
          "mov ecx, dword ptr [edi + 4]", 
          "mov eax, dword ptr [edi + 8]", 
          "lea edx, dword ptr [ecx + eax]", 
          "mov ecx, dword ptr [ebx + 8]", 
          "add esi, ecx", 
          "cmp edx, esi", 
          "jg 0x1161c"
        ]
      }, 
      {
        "basicblock_0x1161a": [
          "mov edx, esi", 
          "cmp eax, ecx", 
          "jl 0x11622"
        ]
      }, 
      {
        "basicblock_0x1161c": [
          "cmp eax, ecx", 
          "jl 0x11622"
        ]
      }, 
      {
        "basicblock_0x11620": [
          "mov eax, ecx", 
          "sub edx, eax", 
          "mov dword ptr [ebp + 0xc], edx", 
          "inc edx", 
          "push edx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 8]", 
          "mov esi, eax", 
          "mov eax, dword ptr [edi + 8]", 
          "cmp eax, ecx", 
          "jl 0x1163c"
        ]
      }, 
      {
        "basicblock_0x11622": [
          "sub edx, eax", 
          "mov dword ptr [ebp + 0xc], edx", 
          "inc edx", 
          "push edx", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 8]", 
          "mov esi, eax", 
          "mov eax, dword ptr [edi + 8]", 
          "cmp eax, ecx", 
          "jl 0x1163c"
        ]
      }, 
      {
        "basicblock_0x1163a": [
          "mov eax, ecx", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi + 4], eax", 
          "lea eax, dword ptr [edi + 0xc]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "lea eax, dword ptr [ebx + 0xc]", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov eax, dword ptr [edi]", 
          "cmp eax, dword ptr [ebx]", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "je 0x11716"
        ]
      }, 
      {
        "basicblock_0x1163c": [
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi + 4], eax", 
          "lea eax, dword ptr [edi + 0xc]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "lea eax, dword ptr [ebx + 0xc]", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov eax, dword ptr [edi]", 
          "cmp eax, dword ptr [ebx]", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "je 0x11716"
        ]
      }, 
      {
        "basicblock_0x11661": [
          "xor edx, edx", 
          "cmp eax, 0xff", 
          "sete dl", 
          "xor eax, eax", 
          "cmp dword ptr [ebx], -1", 
          "mov dword ptr [ebp - 0xc], 1", 
          "sete al", 
          "mov dword ptr [ebp - 0x10], edx", 
          "mov dword ptr [ebp - 0x14], eax", 
          "jmp 0x11716"
        ]
      }, 
      {
        "basicblock_0x11716": [
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0x11683"
        ]
      }, 
      {
        "basicblock_0x11720": [
          "mov eax, dword ptr [ebp - 0xc]", 
          "xor edx, edx", 
          "cmp eax, edx", 
          "je 0x1173b"
        ]
      }, 
      {
        "basicblock_0x11683": [
          "mov eax, dword ptr [edi + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0x116a9"
        ]
      }, 
      {
        "basicblock_0x11729": [
          "cmp dword ptr [ebp - 0x10], edx", 
          "jne 0x1174b"
        ]
      }, 
      {
        "basicblock_0x1173b": [
          "cmp dword ptr [ebp - 0x10], edx", 
          "jne 0x1174b"
        ]
      }, 
      {
        "basicblock_0x1168b": [
          "sub eax, dword ptr [esi + 8]", 
          "mov edx, dword ptr [esi + 4]", 
          "add eax, dword ptr [ebp + 0xc]", 
          "sub edx, dword ptr [edi + 4]", 
          "cmp eax, edx", 
          "jle 0x116a9"
        ]
      }, 
      {
        "basicblock_0x116a9": [
          "and dword ptr [ebp - 4], 0", 
          "mov eax, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0x116d3"
        ]
      }, 
      {
        "basicblock_0x1172e": [
          "cmp dword ptr [ebp - 0x14], edx", 
          "jne 0x1174b"
        ]
      }, 
      {
        "basicblock_0x1174b": [
          "cmp eax, edx", 
          "je 0x11757"
        ]
      }, 
      {
        "basicblock_0x11740": [
          "cmp dword ptr [ebp - 0x14], edx", 
          "jne 0x1174b"
        ]
      }, 
      {
        "basicblock_0x1169b": [
          "mov eax, dword ptr [ebp - 0x18]", 
          "mov eax, dword ptr [eax]", 
          "add dword ptr [ebp - 0x18], 4", 
          "mov dword ptr [ebp - 4], eax", 
          "jmp 0x116ad"
        ]
      }, 
      {
        "basicblock_0x116b5": [
          "sub eax, dword ptr [esi + 8]", 
          "mov edx, dword ptr [esi + 4]", 
          "add eax, dword ptr [ebp + 0xc]", 
          "sub edx, dword ptr [ebx + 4]", 
          "cmp eax, edx", 
          "jle 0x116d3"
        ]
      }, 
      {
        "basicblock_0x116d3": [
          "and dword ptr [ebp - 0x20], 0", 
          "cmp dword ptr [ebp - 0x10], 0", 
          "je 0x116e7"
        ]
      }, 
      {
        "basicblock_0x11733": [
          "mov dword ptr [ecx], eax", 
          "add ecx, 4", 
          "inc dword ptr [esi + 4]", 
          "cmp dword ptr [ebp - 0x10], edx", 
          "jne 0x1174b"
        ]
      }, 
      {
        "basicblock_0x1174f": [
          "mov dword ptr [esi], 1", 
          "jmp 0x1178c"
        ]
      }, 
      {
        "basicblock_0x11757": [
          "mov edx, dword ptr [esi + 4]", 
          "or dword ptr [esi], 0xffffffff", 
          "xor eax, eax", 
          "inc eax", 
          "test edx, edx", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "jle 0x1178c"
        ]
      }, 
      {
        "basicblock_0x11745": [
          "mov eax, dword ptr [edi]", 
          "mov dword ptr [esi], eax", 
          "jmp 0x1178c"
        ]
      }, 
      {
        "basicblock_0x116ad": [
          "mov eax, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 8], eax", 
          "jl 0x116d3"
        ]
      }, 
      {
        "basicblock_0x116c5": [
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov eax, dword ptr [eax]", 
          "add dword ptr [ebp - 0x1c], 4", 
          "mov dword ptr [ebp - 0x20], eax", 
          "jmp 0x116d7"
        ]
      }, 
      {
        "basicblock_0x116dd": [
          "mov eax, dword ptr [ebp + 0x10]", 
          "sub eax, dword ptr [ebp - 4]", 
          "dec eax", 
          "mov dword ptr [ebp - 4], eax", 
          "cmp dword ptr [ebp - 0x14], 0", 
          "je 0x116f6"
        ]
      }, 
      {
        "basicblock_0x116e7": [
          "cmp dword ptr [ebp - 0x14], 0", 
          "je 0x116f6"
        ]
      }, 
      {
        "basicblock_0x1178c": [
          "cmp dword ptr [esi + 4], 1", 
          "jg 0x11781"
        ]
      }, 
      {
        "basicblock_0x11767": [
          "mov edi, edx", 
          "mov edx, dword ptr [ebp + 0x10]", 
          "sub edx, dword ptr [ecx]", 
          "lea eax, dword ptr [eax + edx - 1]", 
          "xor edx, edx", 
          "div dword ptr [ebp + 0x10]", 
          "mov dword ptr [ecx], edx", 
          "add ecx, 4", 
          "dec edi", 
          "jne 0x11769"
        ]
      }, 
      {
        "basicblock_0x116d7": [
          "cmp dword ptr [ebp - 0x10], 0", 
          "je 0x116e7"
        ]
      }, 
      {
        "basicblock_0x116ed": [
          "mov eax, dword ptr [ebp + 0x10]", 
          "sub eax, dword ptr [ebp - 0x20]", 
          "dec eax", 
          "jmp 0x116f9"
        ]
      }, 
      {
        "basicblock_0x116f6": [
          "mov eax, dword ptr [ebp - 0x20]", 
          "mov edx, dword ptr [ebp - 4]", 
          "add edx, eax", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "add eax, edx", 
          "xor edx, edx", 
          "div dword ptr [ebp + 0x10]", 
          "mov dword ptr [ecx], edx", 
          "add ecx, 4", 
          "dec dword ptr [ebp + 0xc]", 
          "inc dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0x11683"
        ]
      }, 
      {
        "basicblock_0x11792": [
          "mov edi, dword ptr [ebp + 8]", 
          "push dword ptr [edi]", 
          "call 0x7bc1", 
          "mov dword ptr [edi], esi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11781": [
          "sub ecx, 4", 
          "cmp dword ptr [ecx], 0", 
          "jne 0x11792"
        ]
      }, 
      {
        "basicblock_0x1177f": [
          "jmp 0x1178c"
        ]
      }, 
      {
        "basicblock_0x11769": [
          "mov edx, dword ptr [ebp + 0x10]", 
          "sub edx, dword ptr [ecx]", 
          "lea eax, dword ptr [eax + edx - 1]", 
          "xor edx, edx", 
          "div dword ptr [ebp + 0x10]", 
          "mov dword ptr [ecx], edx", 
          "add ecx, 4", 
          "dec edi", 
          "jne 0x11769"
        ]
      }, 
      {
        "basicblock_0x116f9": [
          "mov edx, dword ptr [ebp - 4]", 
          "add edx, eax", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "add eax, edx", 
          "xor edx, edx", 
          "div dword ptr [ebp + 0x10]", 
          "mov dword ptr [ecx], edx", 
          "add ecx, 4", 
          "dec dword ptr [ebp + 0xc]", 
          "inc dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jg 0x11683"
        ]
      }, 
      {
        "basicblock_0x11789": [
          "dec dword ptr [esi + 4]", 
          "cmp dword ptr [esi + 4], 1", 
          "jg 0x11781"
        ]
      }
    ]
  }, 
  {
    "func_0x11f1d": [
      {
        "basicblock_0x11f1d": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x34", 
          "xor eax, eax", 
          "push ebx", 
          "mov dword ptr [ebp - 0x34], eax", 
          "mov dword ptr [ebp - 0x30], eax", 
          "mov dword ptr [ebp - 4], eax", 
          "mov eax, dword ptr [ebp + 8]", 
          "push esi", 
          "mov esi, dword ptr [eax]", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ebx, dword ptr [eax + ecx - 1]", 
          "push edi", 
          "lea eax, dword ptr [ebx + 1]", 
          "push eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov edi, eax", 
          "mov dword ptr [edi + 4], ebx", 
          "mov eax, dword ptr [esi]", 
          "imul eax, dword ptr [ecx]", 
          "mov dword ptr [edi], eax", 
          "mov eax, dword ptr [esi + 8]", 
          "add eax, dword ptr [ecx + 8]", 
          "lea ebx, dword ptr [esi + 0xc]", 
          "mov dword ptr [edi + 8], eax", 
          "mov esi, dword ptr [esi + 4]", 
          "test esi, esi", 
          "lea edx, dword ptr [edi + 0xc]", 
          "mov dword ptr [ebp - 0xc], esi", 
          "jle 0x12075"
        ]
      }, 
      {
        "basicblock_0x11f78": [
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "lea eax, dword ptr [ecx + 0xc]", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, dword ptr [ecx + 4]", 
          "add ebx, 4", 
          "mov dword ptr [ebp - 0x14], edx", 
          "add edx, 4", 
          "test eax, eax", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x24], edx", 
          "mov dword ptr [ebp - 8], eax", 
          "jle 0x12058"
        ]
      }, 
      {
        "basicblock_0x12075": [
          "cmp dword ptr [edi + 4], 1", 
          "jg 0x12067"
        ]
      }, 
      {
        "basicblock_0x11fa0": [
          "mov eax, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [eax]", 
          "and dword ptr [ebp - 0x2c], 0", 
          "and dword ptr [ebp - 0x28], 0", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mul dword ptr [ebp - 0x18]", 
          "mov esi, eax", 
          "or esi, edx", 
          "mov dword ptr [ebp - 0x30], edx", 
          "mov dword ptr [ebp - 0x34], eax", 
          "je 0x11fd5"
        ]
      }, 
      {
        "basicblock_0x12058": [
          "dec dword ptr [ebp - 0xc]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "jg 0x11f78"
        ]
      }, 
      {
        "basicblock_0x1207b": [
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x12067": [
          "mov eax, dword ptr [edi + 4]", 
          "cmp dword ptr [edi + eax*4 + 8], 0", 
          "jne 0x1207b"
        ]
      }, 
      {
        "basicblock_0x11fc2": [
          "and dword ptr [ebp - 4], 0", 
          "cmp dword ptr [ebp - 8], 1", 
          "jne 0x11fd5"
        ]
      }, 
      {
        "basicblock_0x11fd5": [
          "mov edx, eax", 
          "or edx, dword ptr [ebp - 0x30]", 
          "jne 0x11fe4"
        ]
      }, 
      {
        "basicblock_0x12065": [
          "jmp 0x12075"
        ]
      }, 
      {
        "basicblock_0x12071": [
          "dec eax", 
          "mov dword ptr [edi + 4], eax", 
          "cmp dword ptr [edi + 4], 1", 
          "jg 0x12067"
        ]
      }, 
      {
        "basicblock_0x11fcc": [
          "cmp dword ptr [ebp - 0xc], 1", 
          "jne 0x11fd5"
        ]
      }, 
      {
        "basicblock_0x11fdc": [
          "mov edx, dword ptr [ebp - 0x2c]", 
          "or edx, dword ptr [ebp - 0x28]", 
          "je 0x12040"
        ]
      }, 
      {
        "basicblock_0x11fe4": [
          "mov edx, dword ptr [ebp - 4]", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "lea ecx, dword ptr [ecx + edx*4]", 
          "mov esi, dword ptr [ecx]", 
          "and eax, 0x7fffffff", 
          "xor edx, edx", 
          "xor ebx, ebx", 
          "add eax, esi", 
          "adc edx, ebx", 
          "add dword ptr [ebp - 0x2c], eax", 
          "mov eax, dword ptr [ebp - 0x2c]", 
          "adc dword ptr [ebp - 0x28], edx", 
          "and eax, 0x7fffffff", 
          "inc dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 0x34]", 
          "mov edx, dword ptr [ebp - 0x30]", 
          "shrd eax, edx, 0x1f", 
          "shr edx, 0x1f", 
          "mov dword ptr [ebp - 0x34], eax", 
          "mov dword ptr [ebp - 0x30], edx", 
          "mov eax, dword ptr [ebp - 0x2c]", 
          "mov edx, dword ptr [ebp - 0x28]", 
          "shrd eax, edx, 0x1f", 
          "shr edx, 0x1f", 
          "mov dword ptr [ebp - 0x2c], eax", 
          "mov dword ptr [ebp - 0x28], edx", 
          "mov eax, dword ptr [ebp - 0x34]", 
          "mov ebx, dword ptr [ebp - 0x20]", 
          "mov ecx, dword ptr [ebp + 0xc]", 
          "jmp 0x11fd5"
        ]
      }, 
      {
        "basicblock_0x11fd2": [
          "inc dword ptr [edi + 4]", 
          "mov edx, eax", 
          "or edx, dword ptr [ebp - 0x30]", 
          "jne 0x11fe4"
        ]
      }, 
      {
        "basicblock_0x12040": [
          "add dword ptr [ebp - 0x10], 4", 
          "add dword ptr [ebp - 0x14], 4", 
          "dec dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp - 8], 0", 
          "jg 0x11fa0"
        ]
      }, 
      {
        "basicblock_0x12055": [
          "mov edx, dword ptr [ebp - 0x24]", 
          "dec dword ptr [ebp - 0xc]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "jg 0x11f78"
        ]
      }
    ]
  }, 
  {
    "func_0x7dbe": [
      {
        "basicblock_0x7dbe": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "push dword ptr [ebp + 0xc]", 
          "xor eax, eax", 
          "push eax", 
          "mov dword ptr [ebp - 4], eax", 
          "mov dword ptr [ebp - 8], eax", 
          "call 0x7c4c", 
          "push dword ptr [ebp + 0xc]", 
          "mov dword ptr [ebp - 4], eax", 
          "push 0x80000000", 
          "call 0x7c4c", 
          "mov edi, dword ptr [0x1014f5c]", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [esi + 4]", 
          "inc edi", 
          "cmp edi, eax", 
          "jbe 0x7dfd"
        ]
      }, 
      {
        "basicblock_0x7dfb": [
          "mov edi, eax", 
          "mov ecx, dword ptr [esi + 8]", 
          "push dword ptr [ebp + 0xc]", 
          "sub ecx, edi", 
          "add ecx, eax", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x7d22", 
          "test edi, edi", 
          "mov eax, dword ptr [esi + 4]", 
          "lea ebx, dword ptr [esi + eax*4 + 8]", 
          "jbe 0x7e54"
        ]
      }, 
      {
        "basicblock_0x7dfd": [
          "mov ecx, dword ptr [esi + 8]", 
          "push dword ptr [ebp + 0xc]", 
          "sub ecx, edi", 
          "add ecx, eax", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x7d22", 
          "test edi, edi", 
          "mov eax, dword ptr [esi + 4]", 
          "lea ebx, dword ptr [esi + eax*4 + 8]", 
          "jbe 0x7e54"
        ]
      }, 
      {
        "basicblock_0x7e1c": [
          "cmp dword ptr [0x1014f58], 0", 
          "jne 0x7e54"
        ]
      }, 
      {
        "basicblock_0x7e54": [
          "push dword ptr [ebp + 0xc]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x11aa0", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x7e25": [
          "mov dword ptr [ebp + 8], 0x40000000", 
          "push dword ptr [ebp + 0xc]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp + 8]", 
          "test dword ptr [ebx], eax", 
          "je 0x7e49"
        ]
      }, 
      {
        "basicblock_0x7e42": [
          "mov eax, dword ptr [ebp - 4]", 
          "or dword ptr [eax + 0xc], 1", 
          "shr dword ptr [ebp + 8], 1", 
          "jne 0x7e2c"
        ]
      }, 
      {
        "basicblock_0x7e49": [
          "shr dword ptr [ebp + 8], 1", 
          "jne 0x7e2c"
        ]
      }, 
      {
        "basicblock_0x7e4e": [
          "sub ebx, 4", 
          "dec edi", 
          "jne 0x7e1c"
        ]
      }, 
      {
        "basicblock_0x7e2c": [
          "push dword ptr [ebp + 0xc]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp + 8]", 
          "test dword ptr [ebx], eax", 
          "je 0x7e49"
        ]
      }
    ]
  }, 
  {
    "func_0x11ee7": [
      {
        "basicblock_0x11ee7": [
          "mov eax, dword ptr [esp + 8]", 
          "cmp dword ptr [eax + 4], 1", 
          "jg 0x11f0c"
        ]
      }, 
      {
        "basicblock_0x11ef1": [
          "cmp dword ptr [eax + 0xc], 1", 
          "jne 0x11f0c"
        ]
      }, 
      {
        "basicblock_0x11f0c": [
          "push dword ptr [esp + 0xc]", 
          "push eax", 
          "push dword ptr [esp + 0xc]", 
          "call 0x11c80", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11ef7": [
          "cmp dword ptr [eax + 8], 0", 
          "jne 0x11f0c"
        ]
      }, 
      {
        "basicblock_0x11efd": [
          "mov ecx, dword ptr [esp + 4]", 
          "mov ecx, dword ptr [ecx]", 
          "mov edx, dword ptr [ecx]", 
          "imul edx, dword ptr [eax]", 
          "mov dword ptr [ecx], edx", 
          "jmp 0x11f1a"
        ]
      }, 
      {
        "basicblock_0x11f1a": [
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x8356": [
      {
        "basicblock_0x8356": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x18", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "and dword ptr [ebp - 4], 0", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [edi]", 
          "add ecx, 2", 
          "push ecx", 
          "push eax", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "mov dword ptr [ebp + 8], eax", 
          "call 0x7cd3", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov esi, dword ptr [eax + 8]", 
          "mov eax, dword ptr [0x1014f5c]", 
          "add esi, ecx", 
          "cmp esi, eax", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "jle 0x83a3"
        ]
      }, 
      {
        "basicblock_0x8398": [
          "test ebx, ebx", 
          "jne 0x83a3"
        ]
      }, 
      {
        "basicblock_0x83a3": [
          "cmp ecx, eax", 
          "jle 0x83aa"
        ]
      }, 
      {
        "basicblock_0x839c": [
          "mov dword ptr [ebp + 0xc], 1", 
          "cmp ecx, eax", 
          "jle 0x83aa"
        ]
      }, 
      {
        "basicblock_0x83a7": [
          "mov dword ptr [ebp - 0xc], eax", 
          "lea eax, dword ptr [eax + eax + 0x20]", 
          "push eax", 
          "lea ecx, dword ptr [esi - 1]", 
          "push 0x40", 
          "mov dword ptr [ebp - 8], ecx", 
          "call dword ptr [0x1001080]", 
          "mov ebx, eax", 
          "test ebx, ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "jne 0x83d0"
        ]
      }, 
      {
        "basicblock_0x83aa": [
          "lea eax, dword ptr [eax + eax + 0x20]", 
          "push eax", 
          "lea ecx, dword ptr [esi - 1]", 
          "push 0x40", 
          "mov dword ptr [ebp - 8], ecx", 
          "call dword ptr [0x1001080]", 
          "mov ebx, eax", 
          "test ebx, ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "jne 0x83d0"
        ]
      }, 
      {
        "basicblock_0x83c6": [
          "push 0x80000007", 
          "call 0x7ba7", 
          "push dword ptr [ebp + 8]", 
          "call 0x11a18", 
          "test eax, eax", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "jne 0x8436"
        ]
      }, 
      {
        "basicblock_0x83d0": [
          "push dword ptr [ebp + 8]", 
          "call 0x11a18", 
          "test eax, eax", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "jne 0x8436"
        ]
      }, 
      {
        "basicblock_0x83e2": [
          "mov eax, dword ptr [ebp + 8]", 
          "cmp dword ptr [eax + 4], ecx", 
          "jl 0x8436"
        ]
      }, 
      {
        "basicblock_0x8436": [
          "cmp dword ptr [ebp + 0xc], 0", 
          "jne 0x8476"
        ]
      }, 
      {
        "basicblock_0x83ea": [
          "mov eax, dword ptr [0x1014010]", 
          "push eax", 
          "push eax", 
          "call 0x7c4c", 
          "push dword ptr [0x1014010]", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [0x1014f68]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11ee7", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov edx, dword ptr [eax + 8]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "sub edx, dword ptr [ecx + 4]", 
          "add edx, dword ptr [eax + 4]", 
          "sub edx, dword ptr [0x1014f5c]", 
          "mov dword ptr [ecx + 8], edx", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "jne 0x8476"
        ]
      }, 
      {
        "basicblock_0x843c": [
          "mov eax, dword ptr [ebp - 0xc]", 
          "sub eax, esi", 
          "lea edx, dword ptr [ecx + 2]", 
          "cmp eax, edx", 
          "jg 0x846f"
        ]
      }, 
      {
        "basicblock_0x8476": [
          "cmp dword ptr [ebp - 4], 0", 
          "je 0x84c9"
        ]
      }, 
      {
        "basicblock_0x8448": [
          "lea eax, dword ptr [ecx + 3]", 
          "cmp esi, eax", 
          "jg 0x846f"
        ]
      }, 
      {
        "basicblock_0x846f": [
          "mov dword ptr [ebp + 0xc], 1", 
          "cmp dword ptr [ebp - 4], 0", 
          "je 0x84c9"
        ]
      }, 
      {
        "basicblock_0x847c": [
          "push dword ptr [0x1014010]", 
          "push dword ptr [ebp - 4]", 
          "push edi", 
          "call 0x11a3c", 
          "mov ecx, dword ptr [edi]", 
          "mov edx, dword ptr [ebp - 4]", 
          "mov dword ptr [ebp + 8], ecx", 
          "mov eax, dword ptr [ecx + 8]", 
          "sub eax, dword ptr [edx + 8]", 
          "sub eax, dword ptr [edx + 4]", 
          "add eax, dword ptr [ecx + 4]", 
          "push eax", 
          "push ecx", 
          "call 0x7cd3", 
          "push dword ptr [ebp - 4]", 
          "mov edi, eax", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 4], 0", 
          "test edi, edi", 
          "je 0x84d2"
        ]
      }, 
      {
        "basicblock_0x84c9": [
          "push ecx", 
          "push dword ptr [ebp + 8]", 
          "call 0x7cd3", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ecx + 4]", 
          "lea eax, dword ptr [ecx + eax*4 + 8]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "xor eax, eax", 
          "inc eax", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "push 2", 
          "pop edi", 
          "je 0x84f9"
        ]
      }, 
      {
        "basicblock_0x844f": [
          "mov eax, esi", 
          "cdq ", 
          "xor eax, edx", 
          "sub eax, edx", 
          "add eax, dword ptr [ebp - 0xc]", 
          "cmp eax, ecx", 
          "jge 0x8476"
        ]
      }, 
      {
        "basicblock_0x84b8": [
          "push dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "call 0x8356", 
          "jmp 0x863b"
        ]
      }, 
      {
        "basicblock_0x84d2": [
          "mov ecx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ecx + 4]", 
          "lea eax, dword ptr [ecx + eax*4 + 8]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "xor eax, eax", 
          "inc eax", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "push 2", 
          "pop edi", 
          "je 0x84f9"
        ]
      }, 
      {
        "basicblock_0x84ea": [
          "cmp dword ptr [ebp + 0xc], edi", 
          "je 0x84f9"
        ]
      }, 
      {
        "basicblock_0x84f9": [
          "cmp dword ptr [ebp - 8], 0", 
          "mov dword ptr [ebp - 0x10], eax", 
          "je 0x8523"
        ]
      }, 
      {
        "basicblock_0x845d": [
          "mov eax, dword ptr [ebp - 4]", 
          "test eax, eax", 
          "je 0x84c9"
        ]
      }, 
      {
        "basicblock_0x863b": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x84ef": [
          "and dword ptr [ebp - 0x10], 0", 
          "and dword ptr [ebp - 8], 0", 
          "jmp 0x8523"
        ]
      }, 
      {
        "basicblock_0x8502": [
          "cmp dword ptr [ebp + 0xc], edi", 
          "jne 0x8521"
        ]
      }, 
      {
        "basicblock_0x8523": [
          "cmp dword ptr [ecx], -1", 
          "jne 0x8539"
        ]
      }, 
      {
        "basicblock_0x8464": [
          "sub dword ptr [eax + 8], esi", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "jmp 0x8476"
        ]
      }, 
      {
        "basicblock_0x8507": [
          "mov eax, dword ptr [ebp - 8]", 
          "push 3", 
          "cdq ", 
          "pop esi", 
          "idiv esi", 
          "mov esi, edx", 
          "sub dword ptr [ebp - 8], esi", 
          "inc esi", 
          "jns 0x8523"
        ]
      }, 
      {
        "basicblock_0x8521": [
          "mov esi, eax", 
          "cmp dword ptr [ecx], -1", 
          "jne 0x8539"
        ]
      }, 
      {
        "basicblock_0x8528": [
          "cmp dword ptr [ebp - 0xc], 0", 
          "jle 0x8539"
        ]
      }, 
      {
        "basicblock_0x8539": [
          "test esi, esi", 
          "jg 0x8577"
        ]
      }, 
      {
        "basicblock_0x8518": [
          "add esi, 3", 
          "sub dword ptr [ebp - 8], 3", 
          "jmp 0x8523"
        ]
      }, 
      {
        "basicblock_0x852e": [
          "mov ebx, dword ptr [ebp - 0x14]", 
          "mov word ptr [ebx], 0x2d", 
          "add ebx, 2", 
          "test esi, esi", 
          "jg 0x8577"
        ]
      }, 
      {
        "basicblock_0x853d": [
          "cmp dword ptr [ebp - 0x10], 0", 
          "jne 0x8555"
        ]
      }, 
      {
        "basicblock_0x8577": [
          "mov eax, dword ptr [ebp - 0xc]", 
          "test eax, eax", 
          "jle 0x85be"
        ]
      }, 
      {
        "basicblock_0x8543": [
          "mov word ptr [ebx], 0x30", 
          "mov ax, word ptr [0x101402c]", 
          "add ebx, edi", 
          "mov word ptr [ebx], ax", 
          "add ebx, edi", 
          "test esi, esi", 
          "jge 0x8577"
        ]
      }, 
      {
        "basicblock_0x8555": [
          "test esi, esi", 
          "jge 0x8577"
        ]
      }, 
      {
        "basicblock_0x857e": [
          "mov ecx, dword ptr [ebp - 0x18]", 
          "mov edx, dword ptr [ecx]"
        ]
      }, 
      {
        "basicblock_0x85be": [
          "test esi, esi", 
          "jg 0x85a9"
        ]
      }, 
      {
        "basicblock_0x8559": [
          "mov edx, esi", 
          "neg edx", 
          "mov ecx, edx", 
          "shr ecx, 1", 
          "mov edi, ebx", 
          "mov eax, 0x300030", 
          "rep stosd dword ptr es:[edi], eax", 
          "adc ecx, ecx", 
          "push 2", 
          "rep stosd dword ptr es:[edi], eax", 
          "add esi, edx", 
          "lea ebx, dword ptr [ebx + edx*2]", 
          "pop edi", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "test eax, eax", 
          "jle 0x85be"
        ]
      }, 
      {
        "basicblock_0x85c2": [
          "cmp dword ptr [ebp - 0x10], 0", 
          "je 0x8634"
        ]
      }, 
      {
        "basicblock_0x85a9": [
          "mov word ptr [ebx], 0x30", 
          "add ebx, edi", 
          "dec esi", 
          "jne 0x85be"
        ]
      }, 
      {
        "basicblock_0x85c8": [
          "cmp dword ptr [0x1014010], 0xa", 
          "jne 0x85d8"
        ]
      }, 
      {
        "basicblock_0x8634": [
          "and word ptr [ebx], 0", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x85b3": [
          "mov ax, word ptr [0x101402c]", 
          "mov word ptr [ebx], ax", 
          "add ebx, edi", 
          "test esi, esi", 
          "jg 0x85a9"
        ]
      }, 
      {
        "basicblock_0x85d1": [
          "mov word ptr [ebx], 0x65", 
          "jmp 0x85dd"
        ]
      }, 
      {
        "basicblock_0x85d8": [
          "mov word ptr [ebx], 0x5e", 
          "mov eax, dword ptr [ebp - 8]", 
          "xor ecx, ecx", 
          "add ebx, edi", 
          "test eax, eax", 
          "setl cl", 
          "cdq ", 
          "lea ecx, dword ptr [ecx + ecx + 0x2b]", 
          "mov word ptr [ebx], cx", 
          "mov ecx, eax", 
          "xor ecx, edx", 
          "add ebx, edi", 
          "sub ecx, edx", 
          "xor esi, esi", 
          "mov eax, ecx", 
          "cdq ", 
          "idiv dword ptr [0x1014010]"
        ]
      }, 
      {
        "basicblock_0x85dd": [
          "mov eax, dword ptr [ebp - 8]", 
          "xor ecx, ecx", 
          "add ebx, edi", 
          "test eax, eax", 
          "setl cl", 
          "cdq ", 
          "lea ecx, dword ptr [ecx + ecx + 0x2b]", 
          "mov word ptr [ebx], cx", 
          "mov ecx, eax", 
          "xor ecx, edx", 
          "add ebx, edi", 
          "sub ecx, edx", 
          "xor esi, esi", 
          "mov eax, ecx", 
          "cdq ", 
          "idiv dword ptr [0x1014010]"
        ]
      }
    ]
  }, 
  {
    "func_0xe2f5": [
      {
        "basicblock_0xe2f5": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "push edi", 
          "xor edi, edi", 
          "mov dword ptr [ebp - 4], edi", 
          "mov dword ptr [ebp - 8], edi", 
          "mov ecx, dword ptr [eax]", 
          "mov eax, dword ptr [eax + 4]", 
          "mov esi, dword ptr [eax]", 
          "imul esi, dword ptr [ecx]", 
          "xor eax, eax", 
          "inc eax", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [ebx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov dword ptr [ecx], eax", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 0x10], esi", 
          "call 0xbd61", 
          "test eax, eax", 
          "je 0xe400"
        ]
      }, 
      {
        "basicblock_0xe333": [
          "push dword ptr [0x1014f84]", 
          "push dword ptr [ebp + 0xc]", 
          "call 0x8f17", 
          "test eax, eax", 
          "jne 0xe973"
        ]
      }, 
      {
        "basicblock_0xe400": [
          "push edi", 
          "mov dword ptr [ebp - 0xc], edi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 0xc], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 0xc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [0x1014f88]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0xbe29", 
          "push dword ptr [0x1014fec]", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xe588"
        ]
      }, 
      {
        "basicblock_0xe349": [
          "push dword ptr [ebp + 0xc]", 
          "call 0xbd61", 
          "test eax, eax", 
          "je 0xe9bb"
        ]
      }, 
      {
        "basicblock_0xe973": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "mov dword ptr [ebp + 0xc], 0x80000001", 
          "call 0x12670", 
          "mov dword ptr [ebp - 0x10], 1", 
          "push ebx", 
          "call 0xdfef", 
          "push dword ptr [ebp + 0xc]", 
          "push ebx", 
          "call 0xbbd4", 
          "push ebx", 
          "call 0xd9b6", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe4bf": [
          "push dword ptr [0x1014fe8]", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0xe588"
        ]
      }, 
      {
        "basicblock_0xe588": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax], 0", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [esi]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbb88", 
          "push dword ptr [0x1014fec]", 
          "push dword ptr [ebp - 4]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xe827"
        ]
      }, 
      {
        "basicblock_0xe359": [
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "mov dword ptr [ebx], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov dword ptr [ebp - 0x10], 1", 
          "jmp 0xe9b8"
        ]
      }, 
      {
        "basicblock_0xe9bb": [
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe4d5": [
          "cmp dword ptr [ebp - 0x10], 1", 
          "jne 0xe588"
        ]
      }, 
      {
        "basicblock_0xe640": [
          "push dword ptr [0x1014fe8]", 
          "push dword ptr [ebp - 4]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0xe827"
        ]
      }, 
      {
        "basicblock_0xe827": [
          "cmp dword ptr [ebp - 0x10], -1", 
          "jne 0xe988"
        ]
      }, 
      {
        "basicblock_0xe9b8": [
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe4df": [
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "and dword ptr [ebx], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov dword ptr [ebp - 0x10], 1", 
          "jmp 0xe9b0"
        ]
      }, 
      {
        "basicblock_0xe656": [
          "xor esi, esi", 
          "push esi", 
          "mov dword ptr [ebp + 8], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp + 8], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp + 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [esi]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp + 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp + 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [esi + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "call 0xbe29", 
          "push dword ptr [ebp + 8]", 
          "call 0x81f8", 
          "push dword ptr [ebp - 8]", 
          "mov dword ptr [ebp + 0xc], eax", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 8], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xdfef", 
          "push dword ptr [ebp + 8]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [0x1014ff0]", 
          "push dword ptr [ebp - 8]", 
          "call 0x8d44", 
          "test eax, eax", 
          "jne 0xe80a"
        ]
      }, 
      {
        "basicblock_0xe831": [
          "push dword ptr [0x1014f8c]", 
          "push dword ptr [ebp + 0xc]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xe967"
        ]
      }, 
      {
        "basicblock_0xe988": [
          "mov dword ptr [ebp - 0x10], 1", 
          "push ebx", 
          "call 0xdfef", 
          "push dword ptr [ebp + 0xc]", 
          "push ebx", 
          "call 0xbbd4", 
          "push ebx", 
          "call 0xd9b6", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe9b0": [
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe7c9": [
          "push dword ptr [0x1014ff4]", 
          "push dword ptr [ebp - 8]", 
          "call 0x8f17", 
          "test eax, eax", 
          "jne 0xe80a"
        ]
      }, 
      {
        "basicblock_0xe80a": [
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "push dword ptr [ebp + 8]", 
          "and dword ptr [ebp - 8], 0", 
          "call 0x7bd1", 
          "and dword ptr [ebp + 8], 0", 
          "jmp 0xe973"
        ]
      }, 
      {
        "basicblock_0xe847": [
          "push dword ptr [0x1014f84]", 
          "push dword ptr [ebp + 0xc]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0xe967"
        ]
      }, 
      {
        "basicblock_0xe967": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "mov dword ptr [ebp + 0xc], 0x80000001", 
          "call 0x12670", 
          "mov dword ptr [ebp - 0x10], 1", 
          "push ebx", 
          "call 0xdfef", 
          "push dword ptr [ebp + 0xc]", 
          "push ebx", 
          "call 0xbbd4", 
          "push ebx", 
          "call 0xd9b6", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe7db": [
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "push dword ptr [ebp + 0xc]", 
          "and dword ptr [ebp - 8], 0", 
          "push ebx", 
          "call 0x86c8", 
          "test byte ptr [ebp + 0xc], 1", 
          "jne 0xe7fd"
        ]
      }, 
      {
        "basicblock_0xe85d": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014f88]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "push dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0xbd6f", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ecx, dword ptr [eax]", 
          "xor eax, eax", 
          "inc eax", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov dword ptr [ecx], eax", 
          "push dword ptr [0x1014f90]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbd6f", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbb88", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbc54", 
          "push dword ptr [0x1014f88]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbe29", 
          "push dword ptr [0x1014f84]", 
          "push dword ptr [ebp - 4]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0xe98f"
        ]
      }, 
      {
        "basicblock_0xe7f6": [
          "mov dword ptr [ebp - 0x10], 1", 
          "push dword ptr [ebp + 8]", 
          "call 0x7bd1", 
          "jmp 0xe9a4"
        ]
      }, 
      {
        "basicblock_0xe7fd": [
          "push dword ptr [ebp + 8]", 
          "call 0x7bd1", 
          "jmp 0xe9a4"
        ]
      }, 
      {
        "basicblock_0xe98f": [
          "push ebx", 
          "call 0xdfef", 
          "push dword ptr [ebp + 0xc]", 
          "push ebx", 
          "call 0xbbd4", 
          "push ebx", 
          "call 0xd9b6", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xe9a4": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bd1", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, esi", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [eax], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x7cd3": [
      {
        "basicblock_0x7cd3": [
          "mov edx, dword ptr [esp + 4]", 
          "push ebx", 
          "mov ebx, dword ptr [edx + 4]", 
          "push esi", 
          "push edi", 
          "xor eax, eax", 
          "cmp ebx, dword ptr [esp + 0x14]", 
          "lea edi, dword ptr [edx + 0xc]", 
          "mov esi, edi", 
          "jle 0x7cf5"
        ]
      }, 
      {
        "basicblock_0x7cea": [
          "sub ebx, dword ptr [esp + 0x14]", 
          "lea esi, dword ptr [esi + ebx*4]", 
          "mov ebx, dword ptr [esp + 0x14]", 
          "test ebx, ebx", 
          "jle 0x7d1c"
        ]
      }, 
      {
        "basicblock_0x7cf5": [
          "test ebx, ebx", 
          "jle 0x7d1c"
        ]
      }, 
      {
        "basicblock_0x7cf9": [
          "cmp dword ptr [esi], 0", 
          "jne 0x7d09"
        ]
      }, 
      {
        "basicblock_0x7d1c": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x7cfe": [
          "add esi, 4", 
          "xor eax, eax", 
          "dec ebx", 
          "inc eax", 
          "test ebx, ebx", 
          "jg 0x7cf9"
        ]
      }, 
      {
        "basicblock_0x7d09": [
          "test eax, eax", 
          "je 0x7d1c"
        ]
      }, 
      {
        "basicblock_0x7d0d": [
          "mov ecx, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, dword ptr [edx + 4]", 
          "sub ecx, ebx", 
          "add dword ptr [edx + 8], ecx", 
          "mov dword ptr [edx + 4], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x7e7c": [
      {
        "basicblock_0x7e7c": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0xc", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor eax, eax", 
          "mov esi, 0x80000000", 
          "push esi", 
          "push eax", 
          "mov dword ptr [ebp - 8], eax", 
          "mov dword ptr [ebp - 4], eax", 
          "call 0x7c4c", 
          "mov ebx, dword ptr [ebp + 8]", 
          "and dword ptr [ebp + 8], 0", 
          "mov dword ptr [ebp - 8], eax", 
          "mov eax, dword ptr [ebx + 4]", 
          "test eax, eax", 
          "lea edi, dword ptr [ebx + eax*4 + 8]", 
          "jle 0x7eea"
        ]
      }, 
      {
        "basicblock_0x7eae": [
          "push dword ptr [0x1014f78]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x12314", 
          "mov eax, dword ptr [edi]", 
          "push esi", 
          "push eax", 
          "call 0x7c4c", 
          "push esi", 
          "push eax", 
          "mov dword ptr [ebp - 0xc], eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "sub edi, 4", 
          "call 0x11a3c", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x7bc1", 
          "inc dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebp + 8]", 
          "cmp eax, dword ptr [ebx + 4]", 
          "jl 0x7eae"
        ]
      }, 
      {
        "basicblock_0x7eea": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [0x1014f78]", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov esi, dword ptr [0x1014f78]", 
          "mov edi, eax", 
          "mov dword ptr [ebp - 4], edi", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx + 8]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x1239e", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 8]", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x11b2d": [
      {
        "basicblock_0x11b2d": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "mov eax, dword ptr [ebp + 8]", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "push esi", 
          "push dword ptr [eax]", 
          "call 0x11990", 
          "test eax, eax", 
          "jne 0x11c7b"
        ]
      }, 
      {
        "basicblock_0x11b49": [
          "push ebx", 
          "push edi", 
          "jmp 0x11b50"
        ]
      }, 
      {
        "basicblock_0x11c7b": [
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11b50": [
          "cmp dword ptr [0x1014f58], 0", 
          "jne 0x11c79"
        ]
      }, 
      {
        "basicblock_0x11b5d": [
          "push 0", 
          "call 0x7bc1", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov ebx, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov edi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov edi, dword ptr [esi]", 
          "push edi", 
          "push ebx", 
          "mov dword ptr [ebp - 8], ebx", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11bbd"
        ]
      }, 
      {
        "basicblock_0x11c79": [
          "pop edi", 
          "pop ebx", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11b9b": [
          "mov eax, dword ptr [edi + 8]", 
          "add eax, dword ptr [edi + 4]", 
          "sub eax, dword ptr [ebx + 4]", 
          "mov dword ptr [ebx + 8], eax", 
          "mov ecx, dword ptr [esi]", 
          "mov edx, dword ptr [ecx + 4]", 
          "mov edi, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ecx + edx*4 + 8]", 
          "cmp ecx, dword ptr [ebx + edi*4 + 8]", 
          "ja 0x11bbd"
        ]
      }, 
      {
        "basicblock_0x11bbd": [
          "push 0", 
          "call 0x7bc1", 
          "push dword ptr [ebp + 0x10]", 
          "push 0", 
          "call 0x7c4c", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp - 4], eax", 
          "push ebx", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11c2e"
        ]
      }, 
      {
        "basicblock_0x11bb9": [
          "dec eax", 
          "mov dword ptr [ebx + 8], eax", 
          "push 0", 
          "call 0x7bc1", 
          "push dword ptr [ebp + 0x10]", 
          "push 0", 
          "call 0x7c4c", 
          "push dword ptr [esi]", 
          "mov dword ptr [ebp - 4], eax", 
          "push ebx", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11c2e"
        ]
      }, 
      {
        "basicblock_0x11bdd": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "push dword ptr [ebx + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 4]", 
          "push dword ptr [ebp + 0x10]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov dword ptr [ebp - 4], edi", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 8]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp + 8]", 
          "push dword ptr [eax]", 
          "mov ebx, dword ptr [ebp - 8]", 
          "push ebx", 
          "call 0x11990", 
          "test eax, eax", 
          "jne 0x11bdd"
        ]
      }, 
      {
        "basicblock_0x11c2e": [
          "push ebx", 
          "push dword ptr [esi]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11c47"
        ]
      }, 
      {
        "basicblock_0x11c2b": [
          "mov esi, dword ptr [ebp + 8]", 
          "push ebx", 
          "push dword ptr [esi]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11c47"
        ]
      }, 
      {
        "basicblock_0x11c3a": [
          "push ebx", 
          "call 0x7bc1", 
          "mov ebx, dword ptr [ebp - 4]", 
          "and dword ptr [ebp - 4], 0", 
          "mov eax, dword ptr [esi]", 
          "push dword ptr [ebp + 0x10]", 
          "mov eax, dword ptr [eax]", 
          "push ebx", 
          "neg eax", 
          "push esi", 
          "mov dword ptr [ebx], eax", 
          "call 0x11a3c", 
          "push ebx", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [esi]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11b4d"
        ]
      }, 
      {
        "basicblock_0x11c47": [
          "mov eax, dword ptr [esi]", 
          "push dword ptr [ebp + 0x10]", 
          "mov eax, dword ptr [eax]", 
          "push ebx", 
          "neg eax", 
          "push esi", 
          "mov dword ptr [ebx], eax", 
          "call 0x11a3c", 
          "push ebx", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [esi]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11b4d"
        ]
      }, 
      {
        "basicblock_0x11b4d": [
          "mov esi, dword ptr [ebp + 0xc]", 
          "cmp dword ptr [0x1014f58], 0", 
          "jne 0x11c79"
        ]
      }
    ]
  }, 
  {
    "func_0xdc58": [
      {
        "basicblock_0xdc58": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "xor esi, esi", 
          "push edi", 
          "push esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 8], esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 0xc], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 0xc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0xbbd4", 
          "call 0x7c26", 
          "mov esi, 0x80000000", 
          "push esi", 
          "xor edi, edi", 
          "push edi", 
          "mov dword ptr [ebp - 8], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ecx], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "push dword ptr [eax + 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "neg dword ptr [eax]", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 8], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "push 0x80000000", 
          "and ecx, 3", 
          "push 1", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c4c", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, 0x7fffffff", 
          "jae 0xded0"
        ]
      }, 
      {
        "basicblock_0xdeca": [
          "inc eax", 
          "mov dword ptr [ecx + 0xc], eax", 
          "jmp 0xdee4"
        ]
      }, 
      {
        "basicblock_0xded0": [
          "push 0x80000000", 
          "push dword ptr [0x1014f64]", 
          "lea eax, dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0x10]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbc54", 
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0xdf6c"
        ]
      }, 
      {
        "basicblock_0xdee4": [
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 0x10]", 
          "add eax, 4", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0xbc54", 
          "cmp byte ptr [0x1014f60], 0", 
          "jne 0xdf6c"
        ]
      }, 
      {
        "basicblock_0xdf08": [
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "mov eax, dword ptr [0x1014f5c]", 
          "cdq ", 
          "idiv dword ptr [0x1014f40]", 
          "mov ecx, dword ptr [edi + 4]", 
          "mov esi, ecx", 
          "sub esi, eax", 
          "dec esi", 
          "dec esi", 
          "cmp esi, 1", 
          "jle 0xdf4c"
        ]
      }, 
      {
        "basicblock_0xdf6c": [
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xdfae"
        ]
      }, 
      {
        "basicblock_0xdf26": [
          "sub ecx, esi", 
          "shl ecx, 2", 
          "push ecx", 
          "lea eax, dword ptr [edi + esi*4 + 0xc]", 
          "push eax", 
          "add edi, 0xc", 
          "push edi", 
          "call dword ptr [0x10011d0]", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "sub dword ptr [eax + 4], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "add esp, 0xc", 
          "add dword ptr [eax + 8], esi", 
          "mov ecx, dword ptr [ebx]", 
          "mov edx, dword ptr [ecx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov eax, dword ptr [edx + 8]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "cmp eax, ecx", 
          "jge 0xdf5f"
        ]
      }, 
      {
        "basicblock_0xdf4c": [
          "mov ecx, dword ptr [ebx]", 
          "mov edx, dword ptr [ecx]", 
          "mov ecx, dword ptr [ecx + 4]", 
          "mov eax, dword ptr [edx + 8]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "cmp eax, ecx", 
          "jge 0xdf5f"
        ]
      }, 
      {
        "basicblock_0xdf7a": [
          "mov ecx, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "mov edx, dword ptr [eax + 8]", 
          "mov ecx, dword ptr [ecx]", 
          "sub edx, dword ptr [ecx + 8]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub edx, dword ptr [ecx + 4]", 
          "lea eax, dword ptr [edx + eax - 1]", 
          "imul eax, dword ptr [0x1014f40]", 
          "cmp eax, dword ptr [0x1014f5c]", 
          "jg 0xdfae"
        ]
      }, 
      {
        "basicblock_0xdfae": [
          "push dword ptr [ebp - 0x10]", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 0xc]", 
          "xor esi, esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "call 0x7bd1", 
          "push dword ptr [ebp - 4]", 
          "mov dword ptr [ebp - 0xc], esi", 
          "call 0x7bd1", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "mov dword ptr [ebx], esi", 
          "call 0xab09", 
          "mov eax, dword ptr [ebp - 8]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [ebx], eax", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xdf5d": [
          "mov ecx, eax", 
          "sub eax, ecx", 
          "mov dword ptr [edx + 8], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xdfae"
        ]
      }, 
      {
        "basicblock_0xdf5f": [
          "sub eax, ecx", 
          "mov dword ptr [edx + 8], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0xdfae"
        ]
      }, 
      {
        "basicblock_0xdfa1": [
          "cmp dword ptr [0x1014f58], 0", 
          "je 0xdea7"
        ]
      }, 
      {
        "basicblock_0xdea7": [
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, 0x7fffffff", 
          "jae 0xded0"
        ]
      }
    ]
  }, 
  {
    "func_0x117a5": [
      {
        "basicblock_0x117a5": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x48", 
          "mov eax, dword ptr [ebp + 8]", 
          "and dword ptr [ebp - 8], 0", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push esi", 
          "mov esi, dword ptr [eax]", 
          "mov eax, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea eax, dword ptr [eax + ecx - 1]", 
          "mov dword ptr [ebp - 4], eax", 
          "push edi", 
          "inc eax", 
          "push eax", 
          "call 0x7bfb", 
          "mov edi, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [edi + 4], eax", 
          "mov eax, dword ptr [esi]", 
          "imul eax, dword ptr [ebx]", 
          "mov dword ptr [edi], eax", 
          "mov eax, dword ptr [esi + 8]", 
          "add eax, dword ptr [ebx + 8]", 
          "lea ecx, dword ptr [edi + 0xc]", 
          "mov dword ptr [edi + 8], eax", 
          "lea eax, dword ptr [esi + 0xc]", 
          "mov esi, dword ptr [esi + 4]", 
          "test esi, esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "jle 0x118fa"
        ]
      }, 
      {
        "basicblock_0x117fa": [
          "lea edx, dword ptr [ebx + 0xc]", 
          "mov dword ptr [ebp - 0x1c], edx", 
          "mov edx, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x20], edx", 
          "mov edx, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x10], edx", 
          "mov edx, dword ptr [ebx + 4]", 
          "add eax, 4", 
          "mov dword ptr [ebp - 0x14], ecx", 
          "add ecx, 4", 
          "test edx, edx", 
          "mov dword ptr [ebp - 0x28], eax", 
          "mov dword ptr [ebp - 0x24], ecx", 
          "mov dword ptr [ebp - 4], edx", 
          "jle 0x118dd"
        ]
      }, 
      {
        "basicblock_0x118fa": [
          "cmp dword ptr [edi + 4], 1", 
          "jg 0x118ec"
        ]
      }, 
      {
        "basicblock_0x11828": [
          "xor eax, eax", 
          "push eax", 
          "push dword ptr [ebp - 0x20]", 
          "xor esi, esi", 
          "and dword ptr [ebp - 0x2c], esi", 
          "push eax", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "push dword ptr [eax]", 
          "call 0x12770", 
          "mov ecx, eax", 
          "or ecx, edx", 
          "je 0x11856"
        ]
      }, 
      {
        "basicblock_0x118dd": [
          "dec dword ptr [ebp - 0xc]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "jg 0x11800"
        ]
      }, 
      {
        "basicblock_0x11900": [
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x118ec": [
          "mov eax, dword ptr [edi + 4]", 
          "cmp dword ptr [edi + eax*4 + 8], 0", 
          "jne 0x11900"
        ]
      }, 
      {
        "basicblock_0x11844": [
          "and dword ptr [ebp - 8], esi", 
          "cmp dword ptr [ebp - 4], 1", 
          "jne 0x11856"
        ]
      }, 
      {
        "basicblock_0x11856": [
          "mov ecx, eax", 
          "or ecx, edx", 
          "jne 0x11863"
        ]
      }, 
      {
        "basicblock_0x118ea": [
          "jmp 0x118fa"
        ]
      }, 
      {
        "basicblock_0x11800": [
          "mov edx, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x20], edx", 
          "mov edx, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x10], edx", 
          "mov edx, dword ptr [ebx + 4]", 
          "add eax, 4", 
          "mov dword ptr [ebp - 0x14], ecx", 
          "add ecx, 4", 
          "test edx, edx", 
          "mov dword ptr [ebp - 0x28], eax", 
          "mov dword ptr [ebp - 0x24], ecx", 
          "mov dword ptr [ebp - 4], edx", 
          "jle 0x118dd"
        ]
      }, 
      {
        "basicblock_0x118f6": [
          "dec eax", 
          "mov dword ptr [edi + 4], eax", 
          "cmp dword ptr [edi + 4], 1", 
          "jg 0x118ec"
        ]
      }, 
      {
        "basicblock_0x1184d": [
          "cmp dword ptr [ebp - 0xc], 1", 
          "jne 0x11856"
        ]
      }, 
      {
        "basicblock_0x1185c": [
          "mov ecx, esi", 
          "or ecx, dword ptr [ebp - 0x2c]", 
          "je 0x118c2"
        ]
      }, 
      {
        "basicblock_0x11863": [
          "and dword ptr [ebp - 0x3c], 0", 
          "push dword ptr [ebp - 0x3c]", 
          "mov ebx, dword ptr [ebp - 0x14]", 
          "push dword ptr [ebp + 0x10]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "push edx", 
          "lea ecx, dword ptr [ebx + ecx*4]", 
          "push eax", 
          "mov dword ptr [ebp - 0x18], ecx", 
          "call 0x126d0", 
          "push dword ptr [ebp - 0x3c]", 
          "mov dword ptr [ebp - 0x38], eax", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [ebp + 0x10]", 
          "mov dword ptr [ebp - 0x34], edx", 
          "xor edx, edx", 
          "add eax, ecx", 
          "adc edx, ebx", 
          "add esi, eax", 
          "adc dword ptr [ebp - 0x2c], edx", 
          "push dword ptr [ebp - 0x2c]", 
          "push esi", 
          "call 0x126d0", 
          "inc dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0x44], ebx", 
          "mov esi, eax", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "mov ebx, edx", 
          "mov edx, dword ptr [ebp - 0x34]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [ebp - 0x38]", 
          "mov dword ptr [ebp - 0x2c], ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "jmp 0x11856"
        ]
      }, 
      {
        "basicblock_0x11853": [
          "inc dword ptr [edi + 4]", 
          "mov ecx, eax", 
          "or ecx, edx", 
          "jne 0x11863"
        ]
      }, 
      {
        "basicblock_0x118c2": [
          "add dword ptr [ebp - 0x10], 4", 
          "add dword ptr [ebp - 0x14], 4", 
          "dec dword ptr [ebp - 4]", 
          "cmp dword ptr [ebp - 4], 0", 
          "jg 0x11828"
        ]
      }, 
      {
        "basicblock_0x118d7": [
          "mov ecx, dword ptr [ebp - 0x24]", 
          "mov eax, dword ptr [ebp - 0x28]", 
          "dec dword ptr [ebp - 0xc]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "jg 0x11800"
        ]
      }
    ]
  }, 
  {
    "func_0x11c80": [
      {
        "basicblock_0x11c80": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x18", 
          "mov eax, dword ptr [ebp + 8]", 
          "push esi", 
          "mov esi, dword ptr [eax]", 
          "mov eax, dword ptr [esi + 4]", 
          "push edi", 
          "mov edi, dword ptr [0x1014f5c]", 
          "add edi, 2", 
          "cmp edi, eax", 
          "mov dword ptr [ebp - 8], edi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "jge 0x11ca8"
        ]
      }, 
      {
        "basicblock_0x11ca3": [
          "mov dword ptr [ebp - 8], eax", 
          "mov edi, eax", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebx + 4]", 
          "cmp edi, eax", 
          "jge 0x11cb8"
        ]
      }, 
      {
        "basicblock_0x11ca8": [
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebx + 4]", 
          "cmp edi, eax", 
          "jge 0x11cb8"
        ]
      }, 
      {
        "basicblock_0x11cb3": [
          "mov dword ptr [ebp - 8], eax", 
          "mov edi, eax", 
          "lea eax, dword ptr [edi + 1]", 
          "push eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 8]", 
          "sub ecx, dword ptr [ebx + 4]", 
          "mov edx, dword ptr [esi + 4]", 
          "sub ecx, dword ptr [ebx + 8]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "lea ecx, dword ptr [ecx + edx + 1]", 
          "mov dword ptr [eax + 8], ecx", 
          "mov ecx, dword ptr [esi]", 
          "imul ecx, dword ptr [ebx]", 
          "mov dword ptr [eax], ecx", 
          "lea eax, dword ptr [eax + edi*4 + 0xc]", 
          "push 0", 
          "mov dword ptr [ebp - 4], eax", 
          "call 0x7bc1", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7bc1", 
          "push dword ptr [ebx + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edx, ecx", 
          "shr ecx, 2", 
          "mov edi, eax", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, edx", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov ecx, dword ptr [ebp - 0x18]", 
          "mov ecx, dword ptr [ecx]", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov dword ptr [eax], ecx", 
          "mov dword ptr [ebp - 0x14], eax", 
          "mov eax, dword ptr [ebx + 4]", 
          "sub eax, dword ptr [esi + 4]", 
          "push 0xc", 
          "add eax, dword ptr [ebx + 8]", 
          "push 0x40", 
          "mov dword ptr [esi + 8], eax", 
          "call dword ptr [0x1001080]", 
          "mov edi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "push 0", 
          "mov ebx, eax", 
          "call 0x7c4c", 
          "and dword ptr [ebx + 8], 0", 
          "cmp edi, 1", 
          "mov dword ptr [ebx], eax", 
          "jle 0x11dda"
        ]
      }, 
      {
        "basicblock_0x11cb8": [
          "lea eax, dword ptr [edi + 1]", 
          "push eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 8]", 
          "sub ecx, dword ptr [ebx + 4]", 
          "mov edx, dword ptr [esi + 4]", 
          "sub ecx, dword ptr [ebx + 8]", 
          "mov dword ptr [ebp - 0xc], eax", 
          "lea ecx, dword ptr [ecx + edx + 1]", 
          "mov dword ptr [eax + 8], ecx", 
          "mov ecx, dword ptr [esi]", 
          "imul ecx, dword ptr [ebx]", 
          "mov dword ptr [eax], ecx", 
          "lea eax, dword ptr [eax + edi*4 + 0xc]", 
          "push 0", 
          "mov dword ptr [ebp - 4], eax", 
          "call 0x7bc1", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7bc1", 
          "push dword ptr [ebx + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edx, ecx", 
          "shr ecx, 2", 
          "mov edi, eax", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, edx", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov ecx, dword ptr [ebp - 0x18]", 
          "mov ecx, dword ptr [ecx]", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov dword ptr [eax], ecx", 
          "mov dword ptr [ebp - 0x14], eax", 
          "mov eax, dword ptr [ebx + 4]", 
          "sub eax, dword ptr [esi + 4]", 
          "push 0xc", 
          "add eax, dword ptr [ebx + 8]", 
          "push 0x40", 
          "mov dword ptr [esi + 8], eax", 
          "call dword ptr [0x1001080]", 
          "mov edi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "push 0", 
          "mov ebx, eax", 
          "call 0x7c4c", 
          "and dword ptr [ebx + 8], 0", 
          "cmp edi, 1", 
          "mov dword ptr [ebx], eax", 
          "jle 0x11dda"
        ]
      }, 
      {
        "basicblock_0x11d77": [
          "dec edi", 
          "mov dword ptr [ebp + 0xc], edi", 
          "push 0xc", 
          "push 0x40", 
          "call dword ptr [0x1001080]", 
          "mov esi, eax", 
          "xor edi, edi", 
          "push edi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "mov dword ptr [esi], edi", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "push dword ptr [ebp + 0x10]", 
          "mov dword ptr [esi], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "push dword ptr [ebp - 0x14]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp - 0x18]", 
          "push esi", 
          "call 0x11a3c", 
          "dec dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi + 8], ebx", 
          "mov ebx, esi", 
          "jne 0x11d7b"
        ]
      }, 
      {
        "basicblock_0x11dda": [
          "push dword ptr [ebp - 0x14]", 
          "call 0x7bc1", 
          "and dword ptr [ebp + 0xc], 0", 
          "cmp dword ptr [ebp - 8], 0", 
          "jle 0x11e50"
        ]
      }, 
      {
        "basicblock_0x11dd7": [
          "mov esi, dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 0x14]", 
          "call 0x7bc1", 
          "and dword ptr [ebp + 0xc], 0", 
          "cmp dword ptr [ebp - 8], 0", 
          "jle 0x11e50"
        ]
      }, 
      {
        "basicblock_0x11d7b": [
          "push 0xc", 
          "push 0x40", 
          "call dword ptr [0x1001080]", 
          "mov esi, eax", 
          "xor edi, edi", 
          "push edi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "mov dword ptr [esi], edi", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "push dword ptr [ebp + 0x10]", 
          "mov dword ptr [esi], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "push dword ptr [ebp - 0x14]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp - 0x18]", 
          "push esi", 
          "call 0x11a3c", 
          "dec dword ptr [ebp + 0xc]", 
          "mov dword ptr [esi + 8], ebx", 
          "mov ebx, esi", 
          "jne 0x11d7b"
        ]
      }, 
      {
        "basicblock_0x11dec": [
          "inc dword ptr [ebp + 0xc]", 
          "push esi", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0x11e53"
        ]
      }, 
      {
        "basicblock_0x11e50": [
          "inc dword ptr [ebp + 0xc]", 
          "mov edi, dword ptr [ebp - 0xc]", 
          "add dword ptr [ebp - 4], 4", 
          "dec dword ptr [ebp + 0xc]", 
          "add edi, 0xc", 
          "cmp edi, dword ptr [ebp - 4]", 
          "je 0x11e70"
        ]
      }, 
      {
        "basicblock_0x11df9": [
          "mov eax, dword ptr [ebp + 0x10]", 
          "dec eax", 
          "mov edi, ebx", 
          "mov dword ptr [ebp - 0x14], eax", 
          "push dword ptr [edi]", 
          "push esi", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11e1a"
        ]
      }, 
      {
        "basicblock_0x11e53": [
          "mov edi, dword ptr [ebp - 0xc]", 
          "add dword ptr [ebp - 4], 4", 
          "dec dword ptr [ebp + 0xc]", 
          "add edi, 0xc", 
          "cmp edi, dword ptr [ebp - 4]", 
          "je 0x11e70"
        ]
      }, 
      {
        "basicblock_0x11e65": [
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov esi, dword ptr [ebp - 4]", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov edi, ebx", 
          "push dword ptr [edi]", 
          "mov ebx, dword ptr [ebx + 8]", 
          "call 0x7bc1", 
          "and dword ptr [edi], 0", 
          "push edi", 
          "call dword ptr [0x100107c]", 
          "test ebx, ebx", 
          "mov edi, ebx", 
          "jne 0x11e72"
        ]
      }, 
      {
        "basicblock_0x11e70": [
          "mov edi, ebx", 
          "push dword ptr [edi]", 
          "mov ebx, dword ptr [ebx + 8]", 
          "call 0x7bc1", 
          "and dword ptr [edi], 0", 
          "push edi", 
          "call dword ptr [0x100107c]", 
          "test ebx, ebx", 
          "mov edi, ebx", 
          "jne 0x11e72"
        ]
      }, 
      {
        "basicblock_0x11e0e": [
          "dec dword ptr [ebp - 0x14]", 
          "je 0x11e39"
        ]
      }, 
      {
        "basicblock_0x11e1a": [
          "cmp dword ptr [ebp - 0x14], 0", 
          "je 0x11e39"
        ]
      }, 
      {
        "basicblock_0x11e8c": [
          "mov ecx, dword ptr [ebp + 0xc]", 
          "test ecx, ecx", 
          "pop ebx", 
          "jne 0x11ea3"
        ]
      }, 
      {
        "basicblock_0x11e72": [
          "push dword ptr [edi]", 
          "mov ebx, dword ptr [ebx + 8]", 
          "call 0x7bc1", 
          "and dword ptr [edi], 0", 
          "push edi", 
          "call dword ptr [0x100107c]", 
          "test ebx, ebx", 
          "mov edi, ebx", 
          "jne 0x11e72"
        ]
      }, 
      {
        "basicblock_0x11e13": [
          "mov edi, dword ptr [edi + 8]", 
          "test edi, edi", 
          "jne 0x11e02"
        ]
      }, 
      {
        "basicblock_0x11e39": [
          "mov eax, dword ptr [ebp - 0x14]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "inc dword ptr [esi + 8]", 
          "sub dword ptr [ebp - 4], 4", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "jl 0x11dec"
        ]
      }, 
      {
        "basicblock_0x11e20": [
          "mov eax, dword ptr [edi]", 
          "push dword ptr [ebp + 0x10]", 
          "neg dword ptr [eax]", 
          "push dword ptr [edi]", 
          "lea eax, dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0x11a3c", 
          "mov edi, dword ptr [edi]", 
          "neg dword ptr [edi]", 
          "mov esi, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "inc dword ptr [esi + 8]", 
          "sub dword ptr [ebp - 4], 4", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 8]", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "jl 0x11dec"
        ]
      }, 
      {
        "basicblock_0x11e94": [
          "mov edi, dword ptr [ebp - 0xc]", 
          "and dword ptr [edi + 8], ecx", 
          "mov dword ptr [edi + 4], 1", 
          "jmp 0x11ecf"
        ]
      }, 
      {
        "basicblock_0x11ea3": [
          "mov eax, dword ptr [ebp - 0xc]", 
          "sub dword ptr [eax + 8], ecx", 
          "cmp ecx, 1", 
          "mov dword ptr [eax + 4], ecx", 
          "jle 0x11ecc"
        ]
      }, 
      {
        "basicblock_0x11e02": [
          "push dword ptr [edi]", 
          "push esi", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x11e1a"
        ]
      }, 
      {
        "basicblock_0x11ecf": [
          "push esi", 
          "call 0x7bc1", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "pop edi", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11eb1": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ecx + 4]", 
          "cmp dword ptr [ecx + eax*4 + 8], 0", 
          "jne 0x11ecc"
        ]
      }, 
      {
        "basicblock_0x11ecc": [
          "mov edi, dword ptr [ebp - 0xc]", 
          "push esi", 
          "call 0x7bc1", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "mov dword ptr [esi], edi", 
          "pop edi", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x11ebe": [
          "lea ecx, dword ptr [eax - 1]", 
          "cmp ecx, 1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov dword ptr [eax + 4], ecx", 
          "jg 0x11eb1"
        ]
      }
    ]
  }, 
  {
    "func_0x11990": [
      {
        "basicblock_0x11990": [
          "push ebp", 
          "mov ebp, esp", 
          "mov edx, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [edx + 8]", 
          "sub eax, dword ptr [ecx + 8]", 
          "push esi", 
          "mov esi, dword ptr [ecx + 4]", 
          "push edi", 
          "mov edi, dword ptr [edx + 4]", 
          "sub eax, esi", 
          "add eax, edi", 
          "jns 0x119b2"
        ]
      }, 
      {
        "basicblock_0x119ad": [
          "xor eax, eax", 
          "inc eax", 
          "jmp 0x11a07"
        ]
      }, 
      {
        "basicblock_0x119b2": [
          "test eax, eax", 
          "jle 0x119ba"
        ]
      }, 
      {
        "basicblock_0x11a07": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x119b6": [
          "xor eax, eax", 
          "jmp 0x11a07"
        ]
      }, 
      {
        "basicblock_0x119ba": [
          "cmp edi, esi", 
          "lea eax, dword ptr [edx + edi*4 + 8]", 
          "push ebx", 
          "mov dword ptr [ebp + 8], eax", 
          "lea ebx, dword ptr [ecx + esi*4 + 8]", 
          "mov edx, edi", 
          "jg 0x119ce"
        ]
      }, 
      {
        "basicblock_0x119cc": [
          "mov edx, esi", 
          "test edx, edx", 
          "jle 0x11a04"
        ]
      }, 
      {
        "basicblock_0x119ce": [
          "test edx, edx", 
          "jle 0x11a04"
        ]
      }, 
      {
        "basicblock_0x119d2": [
          "mov dword ptr [ebp + 0xc], edx", 
          "sub dword ptr [ebp + 0xc], edi", 
          "mov edi, edx", 
          "sub edi, esi", 
          "cmp edx, dword ptr [ebp + 0xc]", 
          "jle 0x119ec"
        ]
      }, 
      {
        "basicblock_0x11a04": [
          "xor eax, eax", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x119e1": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [eax]", 
          "sub dword ptr [ebp + 8], 4", 
          "jmp 0x119ee"
        ]
      }, 
      {
        "basicblock_0x119ec": [
          "xor eax, eax", 
          "cmp edx, edi", 
          "jle 0x119f9"
        ]
      }, 
      {
        "basicblock_0x119ee": [
          "cmp edx, edi", 
          "jle 0x119f9"
        ]
      }, 
      {
        "basicblock_0x119f2": [
          "mov ecx, dword ptr [ebx]", 
          "sub ebx, 4", 
          "jmp 0x119fb"
        ]
      }, 
      {
        "basicblock_0x119f9": [
          "xor ecx, ecx", 
          "sub eax, ecx", 
          "jne 0x11a0d"
        ]
      }, 
      {
        "basicblock_0x119fb": [
          "sub eax, ecx", 
          "jne 0x11a0d"
        ]
      }, 
      {
        "basicblock_0x119ff": [
          "dec edx", 
          "test edx, edx", 
          "jg 0x119dc"
        ]
      }, 
      {
        "basicblock_0x11a0d": [
          "xor ecx, ecx", 
          "test eax, eax", 
          "setl cl", 
          "mov eax, ecx", 
          "jmp 0x11a06"
        ]
      }, 
      {
        "basicblock_0x119dc": [
          "cmp edx, dword ptr [ebp + 0xc]", 
          "jle 0x119ec"
        ]
      }, 
      {
        "basicblock_0x11a06": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x1239e": [
      {
        "basicblock_0x1239e": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push 0x80000000", 
          "push 1", 
          "call 0x7c4c", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], eax", 
          "jmp 0x123d5"
        ]
      }, 
      {
        "basicblock_0x123d5": [
          "test ebx, ebx", 
          "jg 0x123bb"
        ]
      }, 
      {
        "basicblock_0x123d9": [
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [esi], eax", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x123bb": [
          "test bl, 1", 
          "je 0x123cb"
        ]
      }, 
      {
        "basicblock_0x123c0": [
          "push dword ptr [esi]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x12314", 
          "push dword ptr [esi]", 
          "push esi", 
          "call 0x12314", 
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x123bb"
        ]
      }, 
      {
        "basicblock_0x123cb": [
          "push dword ptr [esi]", 
          "push esi", 
          "call 0x12314", 
          "sar ebx, 1", 
          "test ebx, ebx", 
          "jg 0x123bb"
        ]
      }
    ]
  }, 
  {
    "func_0xd9b6": [
      {
        "basicblock_0xd9b6": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push esi", 
          "push edi", 
          "push dword ptr [0x1014ff0]", 
          "xor esi, esi", 
          "push dword ptr [ebx]", 
          "mov dword ptr [ebp - 4], esi", 
          "mov dword ptr [ebp - 8], esi", 
          "call 0x8d44", 
          "test eax, eax", 
          "jne 0xdc42"
        ]
      }, 
      {
        "basicblock_0xd9de": [
          "push dword ptr [0x1014ff4]", 
          "push dword ptr [ebx]", 
          "call 0x8f17", 
          "test eax, eax", 
          "jne 0xdc42"
        ]
      }, 
      {
        "basicblock_0xdc42": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x80000001", 
          "call 0x12670", 
          "int3 ", 
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "xor esi, esi", 
          "push edi", 
          "push esi", 
          "mov dword ptr [ebp - 0xc], esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 8], esi", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 0xc], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 0xc], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "push eax", 
          "call 0xbbd4", 
          "call 0x7c26", 
          "mov esi, 0x80000000", 
          "push esi", 
          "xor edi, edi", 
          "push edi", 
          "mov dword ptr [ebp - 8], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ecx], eax", 
          "call 0x7c4c", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "neg dword ptr [eax]", 
          "mov eax, dword ptr [ebx]", 
          "push esi", 
          "push dword ptr [eax + 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "neg dword ptr [eax]", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 8], edi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov dword ptr [eax], edi", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "push 0x80000000", 
          "and ecx, 3", 
          "push 1", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7c4c", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "neg dword ptr [eax]", 
          "push dword ptr [ebx]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 4]", 
          "call 0x12314", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov eax, dword ptr [ecx + 0xc]", 
          "cmp eax, 0x7fffffff", 
          "jae 0xded0"
        ]
      }, 
      {
        "basicblock_0xd9f3": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [0x1014fb8]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 8]", 
          "call 0x7bd1", 
          "and dword ptr [ebp - 8], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 8], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 8]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 8]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebx]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x8a54", 
          "push dword ptr [ebp - 8]", 
          "call 0x81f8", 
          "push eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x86c8", 
          "push dword ptr [ebp - 8]", 
          "push ebx", 
          "call 0xbe29", 
          "push dword ptr [0x1014fec]", 
          "push dword ptr [ebx]", 
          "call 0x8d44", 
          "test eax, eax", 
          "je 0xdc18"
        ]
      }, 
      {
        "basicblock_0xdb6c": [
          "push dword ptr [0x1014fe8]", 
          "push dword ptr [ebx]", 
          "call 0x8f17", 
          "test eax, eax", 
          "je 0xdc18"
        ]
      }, 
      {
        "basicblock_0xdc18": [
          "push ebx", 
          "call 0xd73b", 
          "push dword ptr [ebp - 4]", 
          "push ebx", 
          "call 0xbbd4", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "push dword ptr [ebp - 8]", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xdb81": [
          "push dword ptr [ebx]", 
          "call 0x7bd1", 
          "and dword ptr [ebx], 0", 
          "call 0x7c26", 
          "mov dword ptr [ebx], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax], 0", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx], eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov esi, dword ptr [eax]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebx]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov eax, dword ptr [eax + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov esi, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebx]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "jmp 0xdc27"
        ]
      }, 
      {
        "basicblock_0xdc27": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "push dword ptr [ebp - 8]", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7bd1", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xbb88": [
      {
        "basicblock_0xbb88": [
          "push esi", 
          "mov esi, dword ptr [esp + 8]", 
          "mov eax, dword ptr [esi]", 
          "push 0x80000000", 
          "push dword ptr [eax + 4]", 
          "push eax", 
          "call 0x11b2d", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xbbb6"
        ]
      }, 
      {
        "basicblock_0xbba8": [
          "mov eax, dword ptr [eax + 4]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax]", 
          "and dword ptr [eax + 8], 0", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xbbd0"
        ]
      }, 
      {
        "basicblock_0xbbb6": [
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov ecx, dword ptr [ecx + 8]", 
          "test ecx, ecx", 
          "jge 0xbbd0"
        ]
      }, 
      {
        "basicblock_0xbbc2": [
          "mov eax, dword ptr [eax]", 
          "sub dword ptr [eax + 8], ecx", 
          "mov eax, dword ptr [esi]", 
          "mov eax, dword ptr [eax + 4]", 
          "and dword ptr [eax + 8], 0", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xbbd0": [
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x12770": [
      {
        "basicblock_0x12770": [
          "mov eax, dword ptr [esp + 8]", 
          "mov ecx, dword ptr [esp + 0x10]", 
          "or ecx, eax", 
          "mov ecx, dword ptr [esp + 0xc]", 
          "jne 0x12789"
        ]
      }, 
      {
        "basicblock_0x12780": [
          "mov eax, dword ptr [esp + 4]", 
          "mul ecx", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x12789": [
          "push ebx", 
          "mul ecx", 
          "mov ebx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "mul dword ptr [esp + 0x14]", 
          "add ebx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "mul ecx", 
          "add edx, ebx", 
          "pop ebx", 
          "ret 0x10"
        ]
      }
    ]
  }, 
  {
    "func_0x81f8": [
      {
        "basicblock_0x81f8": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push esi", 
          "push edi", 
          "push dword ptr [0x1014fc8]", 
          "xor esi, esi", 
          "push ebx", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x8d44", 
          "test eax, eax", 
          "jne 0x8340"
        ]
      }, 
      {
        "basicblock_0x821b": [
          "push dword ptr [0x1014ff8]", 
          "push ebx", 
          "call 0x8f17", 
          "test eax, eax", 
          "jne 0x8340"
        ]
      }, 
      {
        "basicblock_0x8340": [
          "push 0x1012a34", 
          "lea eax, dword ptr [ebp + 8]", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x80000001", 
          "call 0x12670", 
          "int3 ", 
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x18", 
          "mov ecx, dword ptr [0x1014f5c]", 
          "and dword ptr [ebp - 4], 0", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [edi]", 
          "add ecx, 2", 
          "push ecx", 
          "push eax", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "mov dword ptr [ebp + 8], eax", 
          "call 0x7cd3", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [eax + 4]", 
          "mov esi, dword ptr [eax + 8]", 
          "mov eax, dword ptr [0x1014f5c]", 
          "add esi, ecx", 
          "cmp esi, eax", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "jle 0x83a3"
        ]
      }, 
      {
        "basicblock_0x822f": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bd1", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x7c26", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [eax]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [eax], esi", 
          "mov eax, dword ptr [ebx]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx], eax", 
          "mov esi, dword ptr [ebx]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [ebx + 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov ebx, dword ptr [ebx + 4]", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "and ecx, 3", 
          "push eax", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x8a54", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "push eax", 
          "call 0x123eb", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "and dword ptr [eax + 4], 0", 
          "mov eax, dword ptr [0x1014f64]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [ecx + 4], eax", 
          "mov esi, dword ptr [0x1014f64]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov edi, dword ptr [eax + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov esi, dword ptr [ebp - 4]", 
          "push 0x80000000", 
          "push dword ptr [esi]", 
          "call 0x7c8e", 
          "mov edi, eax", 
          "push esi", 
          "call 0x7bd1", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x126d0": [
      {
        "basicblock_0x126d0": [
          "push esi", 
          "mov eax, dword ptr [esp + 0x14]", 
          "or eax, eax", 
          "jne 0x12701"
        ]
      }, 
      {
        "basicblock_0x126d9": [
          "mov ecx, dword ptr [esp + 0x10]", 
          "mov eax, dword ptr [esp + 0xc]", 
          "xor edx, edx", 
          "div ecx", 
          "mov ebx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "div ecx", 
          "mov esi, eax", 
          "mov eax, ebx", 
          "mul dword ptr [esp + 0x10]", 
          "mov ecx, eax", 
          "mov eax, esi", 
          "mul dword ptr [esp + 0x10]", 
          "add edx, ecx", 
          "jmp 0x12748"
        ]
      }, 
      {
        "basicblock_0x12701": [
          "mov ecx, eax", 
          "mov ebx, dword ptr [esp + 0x10]", 
          "mov edx, dword ptr [esp + 0xc]", 
          "mov eax, dword ptr [esp + 8]", 
          "shr ecx, 1", 
          "rcr ebx, 1", 
          "shr edx, 1", 
          "rcr eax, 1", 
          "or ecx, ecx", 
          "jne 0x1270f"
        ]
      }, 
      {
        "basicblock_0x12748": [
          "sub eax, dword ptr [esp + 8]", 
          "sbb edx, dword ptr [esp + 0xc]", 
          "neg edx", 
          "neg eax", 
          "sbb edx, 0", 
          "mov ecx, edx", 
          "mov edx, ebx", 
          "mov ebx, ecx", 
          "mov ecx, eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x1271b": [
          "div ebx", 
          "mov esi, eax", 
          "mul dword ptr [esp + 0x14]", 
          "mov ecx, eax", 
          "mov eax, dword ptr [esp + 0x10]", 
          "mul esi", 
          "add edx, ecx", 
          "jb 0x1273d"
        ]
      }, 
      {
        "basicblock_0x1270f": [
          "shr ecx, 1", 
          "rcr ebx, 1", 
          "shr edx, 1", 
          "rcr eax, 1", 
          "or ecx, ecx", 
          "jne 0x1270f"
        ]
      }, 
      {
        "basicblock_0x1272f": [
          "cmp edx, dword ptr [esp + 0xc]", 
          "ja 0x1273d"
        ]
      }, 
      {
        "basicblock_0x1273d": [
          "dec esi", 
          "sub eax, dword ptr [esp + 0x10]", 
          "sbb edx, dword ptr [esp + 0x14]", 
          "xor ebx, ebx", 
          "sub eax, dword ptr [esp + 8]", 
          "sbb edx, dword ptr [esp + 0xc]", 
          "neg edx", 
          "neg eax", 
          "sbb edx, 0", 
          "mov ecx, edx", 
          "mov edx, ebx", 
          "mov ebx, ecx", 
          "mov ecx, eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x12735": [
          "jb 0x12746"
        ]
      }, 
      {
        "basicblock_0x12737": [
          "cmp eax, dword ptr [esp + 8]", 
          "jbe 0x12746"
        ]
      }, 
      {
        "basicblock_0x12746": [
          "xor ebx, ebx", 
          "sub eax, dword ptr [esp + 8]", 
          "sbb edx, dword ptr [esp + 0xc]", 
          "neg edx", 
          "neg eax", 
          "sbb edx, 0", 
          "mov ecx, edx", 
          "mov edx, ebx", 
          "mov ebx, ecx", 
          "mov ecx, eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 0x10"
        ]
      }
    ]
  }, 
  {
    "func_0x123eb": [
      {
        "basicblock_0x123eb": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor ecx, ecx", 
          "push edi", 
          "inc ecx", 
          "xor edi, edi", 
          "cmp dword ptr [esi + 4], ecx", 
          "jg 0x12415"
        ]
      }, 
      {
        "basicblock_0x123fd": [
          "cmp dword ptr [esi + 0xc], ecx", 
          "jne 0x12415"
        ]
      }, 
      {
        "basicblock_0x12415": [
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [ebx]", 
          "cmp dword ptr [eax + 4], ecx", 
          "jg 0x12467"
        ]
      }, 
      {
        "basicblock_0x12402": [
          "cmp dword ptr [esi + 8], edi", 
          "jne 0x12415"
        ]
      }, 
      {
        "basicblock_0x12420": [
          "cmp dword ptr [eax + 0xc], ecx", 
          "jne 0x12467"
        ]
      }, 
      {
        "basicblock_0x12467": [
          "push esi", 
          "push ebx", 
          "call 0x1208e", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x12407": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, dword ptr [eax]", 
          "imul ecx, dword ptr [esi]", 
          "mov dword ptr [eax], ecx", 
          "jmp 0x1246f"
        ]
      }, 
      {
        "basicblock_0x12425": [
          "cmp dword ptr [eax + 8], edi", 
          "jne 0x12467"
        ]
      }, 
      {
        "basicblock_0x1246f": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x1242a": [
          "mov ecx, dword ptr [eax]", 
          "push eax", 
          "mov dword ptr [ebp + 8], ecx", 
          "call 0x7bc1", 
          "mov dword ptr [ebx], edi", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebx], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov ebx, dword ptr [ebx]", 
          "mov eax, dword ptr [ebx]", 
          "imul eax, dword ptr [ebp + 8]", 
          "mov dword ptr [ebx], eax", 
          "jmp 0x1246e"
        ]
      }, 
      {
        "basicblock_0x1246e": [
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x7c8e": [
      {
        "basicblock_0x7c8e": [
          "mov eax, dword ptr [esp + 4]", 
          "mov ecx, dword ptr [eax + 4]", 
          "push esi", 
          "xor esi, esi", 
          "test ecx, ecx", 
          "push edi", 
          "mov edi, dword ptr [eax + 8]", 
          "lea edx, dword ptr [eax + ecx*4 + 8]", 
          "jle 0x7cbd"
        ]
      }, 
      {
        "basicblock_0x7ca4": [
          "push ebx", 
          "lea ebx, dword ptr [ecx + edi]", 
          "test ebx, ebx", 
          "jle 0x7cbc"
        ]
      }, 
      {
        "basicblock_0x7cbd": [
          "test edi, edi", 
          "jle 0x7cc9"
        ]
      }, 
      {
        "basicblock_0x7cac": [
          "imul esi, dword ptr [esp + 0x14]", 
          "add esi, dword ptr [edx]", 
          "sub edx, 4", 
          "dec ecx", 
          "dec ebx", 
          "test ecx, ecx", 
          "jg 0x7ca8"
        ]
      }, 
      {
        "basicblock_0x7cbc": [
          "pop ebx", 
          "test edi, edi", 
          "jle 0x7cc9"
        ]
      }, 
      {
        "basicblock_0x7cc1": [
          "imul esi, dword ptr [esp + 0x10]", 
          "dec edi", 
          "jne 0x7cc1"
        ]
      }, 
      {
        "basicblock_0x7cc9": [
          "mov eax, dword ptr [eax]", 
          "pop edi", 
          "imul eax, esi", 
          "pop esi", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x7ca8": [
          "test ebx, ebx", 
          "jle 0x7cbc"
        ]
      }
    ]
  }, 
  {
    "func_0x1208e": [
      {
        "basicblock_0x1208e": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x1c", 
          "mov eax, dword ptr [0x1014f5c]", 
          "mov ecx, dword ptr [0x1014f40]", 
          "and dword ptr [ebp - 4], 0", 
          "and dword ptr [ebp - 8], 0", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "lea edi, dword ptr [ecx + eax]", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov esi, dword ptr [eax]", 
          "mov eax, dword ptr [esi + 4]", 
          "cmp edi, eax", 
          "mov dword ptr [ebp - 0xc], edi", 
          "jge 0x120c1"
        ]
      }, 
      {
        "basicblock_0x120bc": [
          "mov dword ptr [ebp - 0xc], eax", 
          "mov edi, eax", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebx + 4]", 
          "cmp edi, eax", 
          "jge 0x120d0"
        ]
      }, 
      {
        "basicblock_0x120c1": [
          "mov ebx, dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebx + 4]", 
          "cmp edi, eax", 
          "jge 0x120d0"
        ]
      }, 
      {
        "basicblock_0x120cb": [
          "mov dword ptr [ebp - 0xc], eax", 
          "mov edi, eax", 
          "lea eax, dword ptr [edi + 1]", 
          "push eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 8]", 
          "sub ecx, dword ptr [ebx + 4]", 
          "mov edx, dword ptr [esi + 4]", 
          "sub ecx, dword ptr [ebx + 8]", 
          "and dword ptr [ebp + 0xc], 0", 
          "lea ecx, dword ptr [ecx + edx + 1]", 
          "mov dword ptr [eax + 8], ecx", 
          "mov ecx, dword ptr [esi]", 
          "imul ecx, dword ptr [ebx]", 
          "mov dword ptr [eax], ecx", 
          "push dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "lea eax, dword ptr [eax + edi*4 + 0xc]", 
          "mov dword ptr [ebp - 0x14], eax", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 8], 0", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebp - 8], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "sub ecx, dword ptr [eax + 4]", 
          "add ecx, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "mov dword ptr [eax + 8], ecx", 
          "jle 0x122aa"
        ]
      }, 
      {
        "basicblock_0x120d0": [
          "lea eax, dword ptr [edi + 1]", 
          "push eax", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [esi + 8]", 
          "sub ecx, dword ptr [ebx + 4]", 
          "mov edx, dword ptr [esi + 4]", 
          "sub ecx, dword ptr [ebx + 8]", 
          "and dword ptr [ebp + 0xc], 0", 
          "lea ecx, dword ptr [ecx + edx + 1]", 
          "mov dword ptr [eax + 8], ecx", 
          "mov ecx, dword ptr [esi]", 
          "imul ecx, dword ptr [ebx]", 
          "mov dword ptr [eax], ecx", 
          "push dword ptr [ebp - 8]", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "lea eax, dword ptr [eax + edi*4 + 0xc]", 
          "mov dword ptr [ebp - 0x14], eax", 
          "call 0x7bc1", 
          "and dword ptr [ebp - 8], 0", 
          "push dword ptr [esi + 4]", 
          "call 0x7bfb", 
          "mov dword ptr [ebp - 8], eax", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "mov eax, dword ptr [ebx]", 
          "mov ecx, dword ptr [ebp - 8]", 
          "mov dword ptr [ecx], eax", 
          "mov ecx, dword ptr [ebx + 4]", 
          "mov eax, dword ptr [ebp - 8]", 
          "sub ecx, dword ptr [eax + 4]", 
          "add ecx, dword ptr [ebx + 8]", 
          "cmp dword ptr [ebp - 0xc], 0", 
          "mov dword ptr [eax + 8], ecx", 
          "jle 0x122aa"
        ]
      }, 
      {
        "basicblock_0x12152": [
          "push dword ptr [ebp - 8]", 
          "inc dword ptr [ebp + 0xc]", 
          "call 0x11a18", 
          "test eax, eax", 
          "jne 0x122ad"
        ]
      }, 
      {
        "basicblock_0x122aa": [
          "inc dword ptr [ebp + 0xc]", 
          "mov esi, dword ptr [ebp - 0x14]", 
          "mov ebx, dword ptr [ebp - 0x1c]", 
          "dec dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "add esi, 4", 
          "lea edi, dword ptr [ebx + 0xc]", 
          "cmp edi, esi", 
          "je 0x122c7"
        ]
      }, 
      {
        "basicblock_0x12165": [
          "mov eax, dword ptr [ebp - 0x14]", 
          "and dword ptr [eax], 0", 
          "jmp 0x12283"
        ]
      }, 
      {
        "basicblock_0x122ad": [
          "mov esi, dword ptr [ebp - 0x14]", 
          "mov ebx, dword ptr [ebp - 0x1c]", 
          "dec dword ptr [ebp + 0xc]", 
          "mov eax, dword ptr [ebp + 0xc]", 
          "add esi, 4", 
          "lea edi, dword ptr [ebx + 0xc]", 
          "cmp edi, esi", 
          "je 0x122c7"
        ]
      }, 
      {
        "basicblock_0x122c3": [
          "mov ecx, eax", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "xor esi, esi", 
          "cmp eax, esi", 
          "jne 0x122d9"
        ]
      }, 
      {
        "basicblock_0x122c7": [
          "xor esi, esi", 
          "cmp eax, esi", 
          "jne 0x122d9"
        ]
      }, 
      {
        "basicblock_0x12283": [
          "push ebx", 
          "push dword ptr [ebp - 8]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x12170"
        ]
      }, 
      {
        "basicblock_0x122cd": [
          "mov dword ptr [ebx + 8], esi", 
          "mov dword ptr [ebx + 4], 1", 
          "jmp 0x122f6"
        ]
      }, 
      {
        "basicblock_0x122d9": [
          "sub dword ptr [ebx + 8], eax", 
          "cmp eax, 1", 
          "mov dword ptr [ebx + 4], eax", 
          "jle 0x122f6"
        ]
      }, 
      {
        "basicblock_0x12294": [
          "mov eax, dword ptr [ebp - 8]", 
          "inc dword ptr [eax + 8]", 
          "mov eax, dword ptr [ebp - 0xc]", 
          "sub dword ptr [ebp - 0x14], 4", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "jl 0x12152"
        ]
      }, 
      {
        "basicblock_0x12170": [
          "push dword ptr [ebp - 4]", 
          "mov dword ptr [ebp - 0x18], 1", 
          "call 0x7bc1", 
          "push dword ptr [ebx + 4]", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7bfb", 
          "mov ecx, dword ptr [ebx + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov dword ptr [ebp - 4], eax", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov esi, ebx", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "call 0x7bc1", 
          "push 0x80000000", 
          "push 0", 
          "call 0x7c4c", 
          "mov dword ptr [ebp - 0x10], eax", 
          "jmp 0x12215"
        ]
      }, 
      {
        "basicblock_0x122f6": [
          "push dword ptr [ebp - 8]", 
          "call 0x7bc1", 
          "mov dword ptr [ebp - 8], esi", 
          "mov esi, dword ptr [ebp + 8]", 
          "push dword ptr [esi]", 
          "call 0x7bc1", 
          "pop edi", 
          "mov dword ptr [esi], ebx", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x122e4": [
          "mov eax, dword ptr [ebx + 4]", 
          "cmp dword ptr [ebx + eax*4 + 8], esi", 
          "jne 0x122f6"
        ]
      }, 
      {
        "basicblock_0x12215": [
          "push dword ptr [ebp - 8]", 
          "push dword ptr [ebp - 4]", 
          "call 0x11990", 
          "test eax, eax", 
          "jne 0x121c2"
        ]
      }, 
      {
        "basicblock_0x122ed": [
          "dec eax", 
          "cmp eax, 1", 
          "mov dword ptr [ebx + 4], eax", 
          "jg 0x122e4"
        ]
      }, 
      {
        "basicblock_0x12224": [
          "push dword ptr [ebp - 4]", 
          "push dword ptr [ebp - 8]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x12251"
        ]
      }, 
      {
        "basicblock_0x121c2": [
          "push dword ptr [ebp - 0x10]", 
          "call 0x7bc1", 
          "push 0", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 4]", 
          "push dword ptr [eax + 4]", 
          "call 0x7bfb", 
          "mov esi, dword ptr [ebp - 4]", 
          "mov ecx, dword ptr [esi + 4]", 
          "lea ecx, dword ptr [ecx*4 + 0xc]", 
          "mov edi, eax", 
          "mov eax, ecx", 
          "shr ecx, 2", 
          "mov dword ptr [ebp - 0x10], edi", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "mov ecx, eax", 
          "and ecx, 3", 
          "push 0x80000000", 
          "rep movsb byte ptr es:[edi], byte ptr [esi]", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "call 0x11a3c", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "add eax, eax", 
          "mov dword ptr [ebp - 0x18], eax", 
          "push dword ptr [ebp - 8]", 
          "push dword ptr [ebp - 4]", 
          "call 0x11990", 
          "test eax, eax", 
          "jne 0x121c2"
        ]
      }, 
      {
        "basicblock_0x12233": [
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "cdq ", 
          "sub eax, edx", 
          "sar eax, 1", 
          "mov esi, eax", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "and dword ptr [ebp - 0x10], 0", 
          "mov dword ptr [ebp - 4], eax", 
          "jmp 0x12257"
        ]
      }, 
      {
        "basicblock_0x12251": [
          "mov eax, dword ptr [ebp - 4]", 
          "mov esi, dword ptr [ebp - 0x18]", 
          "neg dword ptr [eax]", 
          "push 0x80000000", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x11a3c", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 0x10]", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "or dword ptr [eax], esi", 
          "push ebx", 
          "push dword ptr [ebp - 8]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x12170"
        ]
      }, 
      {
        "basicblock_0x12257": [
          "neg dword ptr [eax]", 
          "push 0x80000000", 
          "push dword ptr [ebp - 4]", 
          "lea eax, dword ptr [ebp - 8]", 
          "push eax", 
          "call 0x11a3c", 
          "push dword ptr [ebp - 4]", 
          "call 0x7bc1", 
          "push dword ptr [ebp - 0x10]", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x7bc1", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "or dword ptr [eax], esi", 
          "push ebx", 
          "push dword ptr [ebp - 8]", 
          "call 0x11990", 
          "test eax, eax", 
          "je 0x12170"
        ]
      }
    ]
  }
]