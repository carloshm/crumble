[
  {
    "func_0x41f02": [
      {
        "basicblock_0x41f02": [
          "push ebp", 
          "mov ebp, esp", 
          "push -1", 
          "push 0x44cd20", 
          "push 0x441efc", 
          "mov eax, dword ptr fs:[0]", 
          "push eax", 
          "mov dword ptr fs:[0], esp", 
          "sub esp, 0x68", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ebp - 0x18], esp", 
          "xor ebx, ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "push 2", 
          "call dword ptr [0x44b25c]", 
          "pop ecx", 
          "or dword ptr [0x45faa4], 0xffffffff", 
          "or dword ptr [0x45faa8], 0xffffffff", 
          "call dword ptr [0x44b260]", 
          "mov ecx, dword ptr [0x45da98]", 
          "mov dword ptr [eax], ecx", 
          "call dword ptr [0x44b298]", 
          "mov ecx, dword ptr [0x45da94]", 
          "mov dword ptr [eax], ecx", 
          "mov eax, dword ptr [0x44b2ac]", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [0x45faa0], eax", 
          "call 0x42090", 
          "cmp dword ptr [0x45d490], ebx", 
          "jne 0x41f85"
        ]
      }, 
      {
        "basicblock_0x41f79": [
          "push 0x440dc5", 
          "call dword ptr [0x44b248]", 
          "pop ecx", 
          "call 0x4207e", 
          "push 0x45b058", 
          "push 0x45b054", 
          "call 0x42078", 
          "mov eax, dword ptr [0x45da90]", 
          "mov dword ptr [ebp - 0x6c], eax", 
          "lea eax, dword ptr [ebp - 0x6c]", 
          "push eax", 
          "push dword ptr [0x45da8c]", 
          "lea eax, dword ptr [ebp - 0x64]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x70]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x60]", 
          "push eax", 
          "call dword ptr [0x44b250]", 
          "push 0x45b050", 
          "push 0x45b000", 
          "call 0x42078", 
          "add esp, 0x24", 
          "mov eax, dword ptr [0x44b254]", 
          "mov esi, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x74], esi", 
          "cmp byte ptr [esi], 0x22", 
          "jne 0x42018"
        ]
      }, 
      {
        "basicblock_0x41f85": [
          "call 0x4207e", 
          "push 0x45b058", 
          "push 0x45b054", 
          "call 0x42078", 
          "mov eax, dword ptr [0x45da90]", 
          "mov dword ptr [ebp - 0x6c], eax", 
          "lea eax, dword ptr [ebp - 0x6c]", 
          "push eax", 
          "push dword ptr [0x45da8c]", 
          "lea eax, dword ptr [ebp - 0x64]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x70]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x60]", 
          "push eax", 
          "call dword ptr [0x44b250]", 
          "push 0x45b050", 
          "push 0x45b000", 
          "call 0x42078", 
          "add esp, 0x24", 
          "mov eax, dword ptr [0x44b254]", 
          "mov esi, dword ptr [eax]", 
          "mov dword ptr [ebp - 0x74], esi", 
          "cmp byte ptr [esi], 0x22", 
          "jne 0x42018"
        ]
      }, 
      {
        "basicblock_0x41fde": [
          "inc esi", 
          "mov dword ptr [ebp - 0x74], esi", 
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x41fec"
        ]
      }, 
      {
        "basicblock_0x42018": [
          "cmp byte ptr [esi], 0x20", 
          "jbe 0x41ff5"
        ]
      }, 
      {
        "basicblock_0x41fe8": [
          "cmp al, 0x22", 
          "jne 0x41fde"
        ]
      }, 
      {
        "basicblock_0x41fec": [
          "cmp byte ptr [esi], 0x22", 
          "jne 0x41ff5"
        ]
      }, 
      {
        "basicblock_0x4201d": [
          "inc esi", 
          "mov dword ptr [ebp - 0x74], esi", 
          "jmp 0x42018"
        ]
      }, 
      {
        "basicblock_0x41ff5": [
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x41fff"
        ]
      }, 
      {
        "basicblock_0x41ff1": [
          "inc esi", 
          "mov dword ptr [ebp - 0x74], esi", 
          "mov al, byte ptr [esi]", 
          "cmp al, bl", 
          "je 0x41fff"
        ]
      }, 
      {
        "basicblock_0x41ffb": [
          "cmp al, 0x20", 
          "jbe 0x41ff1"
        ]
      }, 
      {
        "basicblock_0x41fff": [
          "mov dword ptr [ebp - 0x30], ebx", 
          "lea eax, dword ptr [ebp - 0x5c]", 
          "push eax", 
          "call dword ptr [0x44b064]", 
          "test byte ptr [ebp - 0x30], 1", 
          "je 0x42023"
        ]
      }, 
      {
        "basicblock_0x42012": [
          "movzx eax, word ptr [ebp - 0x2c]", 
          "jmp 0x42026"
        ]
      }, 
      {
        "basicblock_0x42023": [
          "push 0xa", 
          "pop eax", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push ebx", 
          "call dword ptr [0x44b1d4]", 
          "push eax", 
          "call 0x5ef6", 
          "mov dword ptr [ebp - 0x68], eax", 
          "push eax", 
          "call dword ptr [0x44b264]", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "mov ecx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "mov dword ptr [ebp - 0x78], ecx", 
          "push eax", 
          "push ecx", 
          "call 0x42072", 
          "pop ecx", 
          "pop ecx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x42026": [
          "push eax", 
          "push esi", 
          "push ebx", 
          "push ebx", 
          "call dword ptr [0x44b1d4]", 
          "push eax", 
          "call 0x5ef6", 
          "mov dword ptr [ebp - 0x68], eax", 
          "push eax", 
          "call dword ptr [0x44b264]", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "mov ecx, dword ptr [eax]", 
          "mov ecx, dword ptr [ecx]", 
          "mov dword ptr [ebp - 0x78], ecx", 
          "push eax", 
          "push ecx", 
          "call 0x42072", 
          "pop ecx", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x42090": [
      {
        "basicblock_0x42090": [
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x4207e": [
      {
        "basicblock_0x4207e": [
          "push 0x30000", 
          "push 0x10000", 
          "call 0x42092", 
          "pop ecx", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x42078": [
      {
        "basicblock_0x42078": [
          "jmp dword ptr [0x44b24c]"
        ]
      }
    ]
  }, 
  {
    "func_0x42092": [
      {
        "basicblock_0x42092": [
          "jmp dword ptr [0x44b258]"
        ]
      }
    ]
  }, 
  {
    "func_0x5ef6": [
      {
        "basicblock_0x5ef6": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x58", 
          "push ebx", 
          "push esi", 
          "call 0x615d", 
          "mov byte ptr [0x45d8b4], al", 
          "call 0x411f0", 
          "call dword ptr [0x44b040]", 
          "mov ecx, 0x45b2e0", 
          "call 0x6193", 
          "cmp eax, 0x40047", 
          "mov dword ptr [0x45d88c], eax", 
          "sbb al, al", 
          "mov ecx, 0xc8", 
          "inc al", 
          "mov edx, ecx", 
          "mov byte ptr [0x45b2c0], al", 
          "call 0x2fb0b", 
          "neg al", 
          "sbb al, al", 
          "xor ebx, ebx", 
          "inc al", 
          "push ebx", 
          "mov byte ptr [0x45d8b7], al", 
          "call dword ptr [0x44b4ec]", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "pop esi", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "push esi", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x3396", 
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov dword ptr [ebp - 0x30], ebx", 
          "mov dword ptr [ebp - 0x2c], ebx", 
          "mov dword ptr [ebp - 0x28], ebx", 
          "call 0x3396", 
          "call dword ptr [0x44b1f0]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x3091", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "lea edx, dword ptr [ebp - 0x30]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x1f806", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x6f3f", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x6f04", 
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x3396", 
          "push esi", 
          "lea ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr [ebp - 0xc], ebx", 
          "mov dword ptr [ebp - 8], ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x3396", 
          "lea eax, dword ptr [ebp - 0xc]", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x1f806", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x6f3f", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x6f04", 
          "lea ecx, dword ptr [ebp - 0xc]", 
          "call 0x6f3f", 
          "lea ecx, dword ptr [ebp - 0xc]", 
          "call 0x6f04", 
          "lea eax, dword ptr [ebp - 0x3c]", 
          "push 2", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0xc]", 
          "call 0x3228", 
          "mov ecx, dword ptr [eax]", 
          "mov edx, 0x45b2d8", 
          "call 0x2828a", 
          "push dword ptr [ebp - 0x3c]", 
          "mov esi, eax", 
          "call 0x284d8", 
          "cmp esi, ebx", 
          "pop ecx", 
          "jne 0x604c"
        ]
      }, 
      {
        "basicblock_0x602a": [
          "lea eax, dword ptr [ebp - 0x3c]", 
          "push 2", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0xc]", 
          "call 0x5246", 
          "push eax", 
          "mov ecx, 0x45d890", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "cmp dword ptr [ebp - 0x14], ebx", 
          "je 0x605f"
        ]
      }, 
      {
        "basicblock_0x604c": [
          "cmp dword ptr [ebp - 0x14], ebx", 
          "je 0x605f"
        ]
      }, 
      {
        "basicblock_0x6051": [
          "lea eax, dword ptr [ebp - 0x18]", 
          "mov ecx, 0x45d8a0", 
          "push eax", 
          "call 0x312c", 
          "call 0x61f9", 
          "mov edx, dword ptr [ebp + 0x14]", 
          "mov ecx, dword ptr [ebp + 8]", 
          "call 0x5cd4", 
          "test eax, eax", 
          "je 0x6132"
        ]
      }, 
      {
        "basicblock_0x605f": [
          "call 0x61f9", 
          "mov edx, dword ptr [ebp + 0x14]", 
          "mov ecx, dword ptr [ebp + 8]", 
          "call 0x5cd4", 
          "test eax, eax", 
          "je 0x6132"
        ]
      }, 
      {
        "basicblock_0x6077": [
          "cmp byte ptr [0x45d8b4], bl", 
          "push edi", 
          "push 0xd1", 
          "push dword ptr [ebp + 8]", 
          "je 0x60d5"
        ]
      }, 
      {
        "basicblock_0x6132": [
          "push dword ptr [ebp - 0xc]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x30]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "add esp, 0x10", 
          "mov eax, ebx", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x6088": [
          "call dword ptr [0x44b464]", 
          "mov esi, dword ptr [0x44b468]", 
          "mov edi, eax", 
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "call esi", 
          "test eax, eax", 
          "je 0x6122"
        ]
      }, 
      {
        "basicblock_0x60d5": [
          "call dword ptr [0x44b478]", 
          "mov esi, dword ptr [0x44b47c]", 
          "mov edi, eax", 
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "call esi", 
          "test eax, eax", 
          "je 0x6122"
        ]
      }, 
      {
        "basicblock_0x60a3": [
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "push edi", 
          "push dword ptr [0x45d8ac]", 
          "call dword ptr [0x44b46c]", 
          "test eax, eax", 
          "jne 0x60cc"
        ]
      }, 
      {
        "basicblock_0x6122": [
          "mov dword ptr [0x45d8ac], ebx", 
          "call dword ptr [0x44b4e0]", 
          "mov ebx, dword ptr [ebp - 0x50]", 
          "pop edi", 
          "push dword ptr [ebp - 0xc]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x30]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "add esp, 0x10", 
          "mov eax, ebx", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x60f0": [
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "push edi", 
          "push dword ptr [0x45d8ac]", 
          "call dword ptr [0x44b480]", 
          "test eax, eax", 
          "jne 0x6119"
        ]
      }, 
      {
        "basicblock_0x60b8": [
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "call dword ptr [0x44b470]", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "call dword ptr [0x44b474]", 
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "jmp 0x609d"
        ]
      }, 
      {
        "basicblock_0x60cc": [
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "jmp 0x609d"
        ]
      }, 
      {
        "basicblock_0x6105": [
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "call dword ptr [0x44b470]", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push eax", 
          "call dword ptr [0x44b484]", 
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "jmp 0x60ea"
        ]
      }, 
      {
        "basicblock_0x6119": [
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 0x58]", 
          "push ebx", 
          "push eax", 
          "jmp 0x60ea"
        ]
      }, 
      {
        "basicblock_0x609d": [
          "call esi", 
          "test eax, eax", 
          "je 0x6122"
        ]
      }, 
      {
        "basicblock_0x60ea": [
          "call esi", 
          "test eax, eax", 
          "je 0x6122"
        ]
      }
    ]
  }, 
  {
    "func_0x42072": [
      {
        "basicblock_0x42072": [
          "jmp dword ptr [0x44b268]"
        ]
      }
    ]
  }, 
  {
    "func_0x615d": [
      {
        "basicblock_0x615d": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x94", 
          "lea eax, dword ptr [ebp - 0x94]"
        ]
      }
    ]
  }, 
  {
    "func_0x411f0": [
      {
        "basicblock_0x411f0": [
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x6193": [
      {
        "basicblock_0x6193": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x18", 
          "push ebx", 
          "push ecx", 
          "xor ebx, ebx", 
          "call dword ptr [0x44b1e8]", 
          "cmp eax, ebx", 
          "mov dword ptr [ebp - 4], eax", 
          "je 0x61f4"
        ]
      }, 
      {
        "basicblock_0x61aa": [
          "push edi", 
          "push 0x45b2f0", 
          "push eax", 
          "call dword ptr [0x44b1f8]", 
          "mov edi, eax", 
          "cmp edi, ebx", 
          "je 0x61ea"
        ]
      }, 
      {
        "basicblock_0x61f4": [
          "mov eax, ebx", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x61bd": [
          "push 0x14", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push ebx", 
          "push eax", 
          "call 0x41d82", 
          "add esp, 0xc", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], 0x14", 
          "push eax", 
          "call edi", 
          "test eax, eax", 
          "jl 0x61ea"
        ]
      }, 
      {
        "basicblock_0x61ea": [
          "push dword ptr [ebp - 4]", 
          "call dword ptr [0x44b1ec]", 
          "pop edi", 
          "mov eax, ebx", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x61dd": [
          "movzx ebx, word ptr [ebp - 0x14]", 
          "movzx eax, word ptr [ebp - 0x10]", 
          "shl ebx, 0x10", 
          "or ebx, eax", 
          "push dword ptr [ebp - 4]", 
          "call dword ptr [0x44b1ec]", 
          "pop edi", 
          "mov eax, ebx", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2fb0b": [
      {
        "basicblock_0x2fb0b": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov ebx, edx", 
          "mov edi, ecx", 
          "call dword ptr [0x44b324]", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov esi, eax", 
          "call 0x2fb64", 
          "mov eax, edi", 
          "push 4", 
          "cdq ", 
          "pop ecx", 
          "idiv ecx", 
          "movzx ecx, si", 
          "imul eax, ecx", 
          "mov ecx, dword ptr [ebp - 8]", 
          "sub ecx, dword ptr [ebp - 0x10]", 
          "cmp eax, ecx", 
          "jg 0x2fb5d"
        ]
      }, 
      {
        "basicblock_0x2fb40": [
          "mov eax, ebx", 
          "push 8", 
          "cdq ", 
          "pop ecx", 
          "idiv ecx", 
          "shr esi, 0x10", 
          "imul esi, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "sub eax, dword ptr [ebp - 0xc]", 
          "cmp esi, eax", 
          "jg 0x2fb5d"
        ]
      }, 
      {
        "basicblock_0x2fb5d": [
          "xor eax, eax", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2fb58": [
          "push 1", 
          "pop eax", 
          "jmp 0x2fb5f"
        ]
      }, 
      {
        "basicblock_0x2fb5f": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x3396": [
      {
        "basicblock_0x3396": [
          "mov eax, dword ptr [esp + 4]", 
          "push ebx", 
          "push esi", 
          "mov esi, ecx", 
          "lea ebx, dword ptr [eax + 1]", 
          "cmp ebx, dword ptr [esi + 8]", 
          "je 0x33e5"
        ]
      }, 
      {
        "basicblock_0x33a6": [
          "lea eax, dword ptr [ebx + ebx]", 
          "push edi", 
          "push eax", 
          "call 0x284b1", 
          "mov edi, eax", 
          "xor eax, eax", 
          "cmp dword ptr [esi + 8], eax", 
          "pop ecx", 
          "jle 0x33d7"
        ]
      }, 
      {
        "basicblock_0x33e5": [
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x33ba": [
          "cmp dword ptr [esi + 4], eax", 
          "jle 0x33cf"
        ]
      }, 
      {
        "basicblock_0x33d7": [
          "mov eax, dword ptr [esi + 4]", 
          "mov dword ptr [esi], edi", 
          "and word ptr [edi + eax*2], 0", 
          "mov dword ptr [esi + 8], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x33bf": [
          "mov ecx, dword ptr [esi]", 
          "mov cx, word ptr [ecx + eax*2]", 
          "mov word ptr [edi + eax*2], cx", 
          "inc eax", 
          "cmp eax, dword ptr [esi + 4]", 
          "jl 0x33bf"
        ]
      }, 
      {
        "basicblock_0x33cf": [
          "push dword ptr [esi]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, dword ptr [esi + 4]", 
          "mov dword ptr [esi], edi", 
          "and word ptr [edi + eax*2], 0", 
          "mov dword ptr [esi + 8], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x3091": [
      {
        "basicblock_0x3091": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov esi, ecx", 
          "xor ebx, ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov dword ptr [esi], ebx", 
          "mov dword ptr [esi + 4], ebx", 
          "mov dword ptr [esi + 8], ebx", 
          "cmp word ptr [edi], bx", 
          "je 0x30bb"
        ]
      }, 
      {
        "basicblock_0x30af": [
          "mov eax, edi", 
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], bx", 
          "jne 0x30b1"
        ]
      }, 
      {
        "basicblock_0x30bb": [
          "push dword ptr [ebp - 4]", 
          "mov ecx, esi", 
          "call 0x3396", 
          "mov eax, dword ptr [esi]", 
          "mov cx, word ptr [edi]", 
          "lea edx, dword ptr [edi + 2]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "cmp cx, bx", 
          "je 0x30e3"
        ]
      }, 
      {
        "basicblock_0x30b1": [
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], bx", 
          "jne 0x30b1"
        ]
      }, 
      {
        "basicblock_0x30d7": [
          "mov cx, word ptr [edx]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "inc edx", 
          "inc edx", 
          "jmp 0x30d2"
        ]
      }, 
      {
        "basicblock_0x30e3": [
          "mov eax, dword ptr [ebp - 4]", 
          "pop edi", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x30d2": [
          "cmp cx, bx", 
          "je 0x30e3"
        ]
      }
    ]
  }, 
  {
    "func_0x1f806": [
      {
        "basicblock_0x1f806": [
          "mov eax, 0x446228", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push esi", 
          "push edi", 
          "mov edi, edx", 
          "mov esi, ecx", 
          "xor eax, eax", 
          "mov ecx, dword ptr [edi]", 
          "and byte ptr [ebp + 0xb], al", 
          "mov dword ptr [edi + 4], eax", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov word ptr [ecx], ax", 
          "mov ecx, dword ptr [ebx]", 
          "mov dword ptr [ebx + 4], eax", 
          "mov word ptr [ecx], ax", 
          "cmp dword ptr [esi + 4], eax", 
          "jle 0x1f875"
        ]
      }, 
      {
        "basicblock_0x1f83a": [
          "mov ecx, dword ptr [esi]", 
          "mov cx, word ptr [ecx + eax*2]", 
          "cmp cx, 0x22", 
          "jne 0x1f852"
        ]
      }, 
      {
        "basicblock_0x1f875": [
          "push eax", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "mov ecx, esi", 
          "call 0x5246", 
          "and dword ptr [ebp - 4], 0", 
          "push eax", 
          "mov ecx, ebx", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1f846": [
          "cmp byte ptr [ebp + 0xb], 0", 
          "sete cl", 
          "mov byte ptr [ebp + 0xb], cl", 
          "jmp 0x1f869"
        ]
      }, 
      {
        "basicblock_0x1f852": [
          "cmp cx, 0x20", 
          "jne 0x1f85e"
        ]
      }, 
      {
        "basicblock_0x1f869": [
          "inc eax", 
          "cmp eax, dword ptr [esi + 4]", 
          "mov dword ptr [ebp - 0x10], eax", 
          "jge 0x1f875"
        ]
      }, 
      {
        "basicblock_0x1f858": [
          "cmp byte ptr [ebp + 0xb], 0", 
          "je 0x1f874"
        ]
      }, 
      {
        "basicblock_0x1f85e": [
          "push ecx", 
          "mov ecx, edi", 
          "call 0x316a", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "inc eax", 
          "cmp eax, dword ptr [esi + 4]", 
          "mov dword ptr [ebp - 0x10], eax", 
          "jge 0x1f875"
        ]
      }, 
      {
        "basicblock_0x1f872": [
          "jmp 0x1f83a"
        ]
      }, 
      {
        "basicblock_0x1f874": [
          "inc eax", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "mov ecx, esi", 
          "call 0x5246", 
          "and dword ptr [ebp - 4], 0", 
          "push eax", 
          "mov ecx, ebx", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x284d8": [
      {
        "basicblock_0x284d8": [
          "push dword ptr [esp + 4]", 
          "call dword ptr [0x44b29c]", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x6f3f": [
      {
        "basicblock_0x6f3f": [
          "mov eax, 0x442e2c", 
          "call 0x41b80", 
          "sub esp, 0xc", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push esi", 
          "mov esi, ecx", 
          "push eax", 
          "call 0x6ffd", 
          "and dword ptr [ebp - 4], 0", 
          "push eax", 
          "mov ecx, esi", 
          "call 0x6fae", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x6f04": [
      {
        "basicblock_0x6f04": [
          "mov eax, 0x442e18", 
          "call 0x41b80", 
          "sub esp, 0xc", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push esi", 
          "mov esi, ecx", 
          "push eax", 
          "call 0x6ffd", 
          "and dword ptr [ebp - 4], 0", 
          "push eax", 
          "mov ecx, esi", 
          "call 0x6f7a", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x3228": [
      {
        "basicblock_0x3228": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push dword ptr [ebp + 0xc]", 
          "and dword ptr [ebp - 4], 0", 
          "push 0", 
          "push dword ptr [ebp + 8]", 
          "call 0x3434", 
          "mov eax, dword ptr [ebp + 8]", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2828a": [
      {
        "basicblock_0x2828a": [
          "push esi", 
          "mov ax, word ptr [ecx]", 
          "mov si, word ptr [edx]", 
          "inc ecx", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp ax, si", 
          "jb 0x282a3"
        ]
      }, 
      {
        "basicblock_0x2829a": [
          "ja 0x282a8"
        ]
      }, 
      {
        "basicblock_0x282a3": [
          "or eax, 0xffffffff", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2829c": [
          "test ax, ax", 
          "je 0x282ad"
        ]
      }, 
      {
        "basicblock_0x282a8": [
          "push 1", 
          "pop eax", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x282a1": [
          "jmp 0x2828b"
        ]
      }, 
      {
        "basicblock_0x282ad": [
          "xor eax, eax", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2828b": [
          "mov ax, word ptr [ecx]", 
          "mov si, word ptr [edx]", 
          "inc ecx", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp ax, si", 
          "jb 0x282a3"
        ]
      }
    ]
  }, 
  {
    "func_0x2fb64": [
      {
        "basicblock_0x2fb64": [
          "push 0", 
          "push ecx", 
          "push 0", 
          "push 0x30", 
          "call dword ptr [0x44b328]", 
          "neg eax", 
          "sbb eax, eax", 
          "neg eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x41b80": [
      {
        "basicblock_0x41b80": [
          "push -1", 
          "push eax", 
          "mov eax, dword ptr fs:[0]", 
          "push eax", 
          "mov eax, dword ptr [esp + 0xc]", 
          "mov dword ptr fs:[0], esp", 
          "mov dword ptr [esp + 0xc], ebp", 
          "lea ebp, dword ptr [esp + 0xc]", 
          "push eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x6ffd": [
      {
        "basicblock_0x6ffd": [
          "mov eax, 0x442e40", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "push esi", 
          "xor esi, esi", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 0x1c], esi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "mov dword ptr [ebp - 0x14], esi", 
          "call 0x3396", 
          "push 0x20", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 4], esi", 
          "call 0x316a", 
          "push 0xa", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x316a", 
          "push 9", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x316a", 
          "mov ecx, dword ptr [ebp + 8]", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp + 8]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x6fae": [
      {
        "basicblock_0x6fae": [
          "push ebx", 
          "mov ebx, ecx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebx]", 
          "xor esi, esi", 
          "mov ax, word ptr [edi]", 
          "test ax, ax", 
          "je 0x6ff7"
        ]
      }, 
      {
        "basicblock_0x6fbf": [
          "mov ecx, dword ptr [esp + 0x10]", 
          "push eax", 
          "call 0x706b", 
          "test eax, eax", 
          "jl 0x6fd5"
        ]
      }, 
      {
        "basicblock_0x6ff7": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x6fcd": [
          "test esi, esi", 
          "jne 0x6fd7"
        ]
      }, 
      {
        "basicblock_0x6fd5": [
          "xor esi, esi", 
          "inc edi", 
          "inc edi", 
          "mov ax, word ptr [edi]", 
          "test ax, ax", 
          "jne 0x6fbf"
        ]
      }, 
      {
        "basicblock_0x6fd1": [
          "mov esi, edi", 
          "jmp 0x6fd7"
        ]
      }, 
      {
        "basicblock_0x6fd7": [
          "inc edi", 
          "inc edi", 
          "mov ax, word ptr [edi]", 
          "test ax, ax", 
          "jne 0x6fbf"
        ]
      }, 
      {
        "basicblock_0x6fe1": [
          "test esi, esi", 
          "je 0x6ff7"
        ]
      }, 
      {
        "basicblock_0x6fe5": [
          "sub esi, dword ptr [ebx]", 
          "mov eax, dword ptr [ebx + 4]", 
          "mov ecx, ebx", 
          "sar esi, 1", 
          "sub eax, esi", 
          "push eax", 
          "push esi", 
          "call 0x708e", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x6f7a": [
      {
        "basicblock_0x6f7a": [
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "mov esi, dword ptr [edi]", 
          "mov ax, word ptr [esi]", 
          "mov ecx, dword ptr [esp + 0xc]", 
          "push eax", 
          "call 0x706b", 
          "test eax, eax", 
          "jl 0x6f9b"
        ]
      }, 
      {
        "basicblock_0x6f91": [
          "cmp word ptr [esi], 0", 
          "je 0x6f9b"
        ]
      }, 
      {
        "basicblock_0x6f9b": [
          "sub esi, dword ptr [edi]", 
          "mov ecx, edi", 
          "sar esi, 1", 
          "push esi", 
          "push 0", 
          "call 0x708e", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x6f97": [
          "inc esi", 
          "inc esi", 
          "jmp 0x6f80"
        ]
      }, 
      {
        "basicblock_0x6f80": [
          "mov ax, word ptr [esi]", 
          "mov ecx, dword ptr [esp + 0xc]", 
          "push eax", 
          "call 0x706b", 
          "test eax, eax", 
          "jl 0x6f9b"
        ]
      }
    ]
  }, 
  {
    "func_0x3434": [
      {
        "basicblock_0x3434": [
          "mov eax, 0x442684", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "mov edi, ecx", 
          "lea edx, dword ptr [ebx + esi]", 
          "xor ecx, ecx", 
          "mov eax, dword ptr [edi + 4]", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "cmp edx, eax", 
          "jle 0x345f"
        ]
      }, 
      {
        "basicblock_0x345b": [
          "mov esi, eax", 
          "sub esi, ebx", 
          "cmp ebx, ecx", 
          "jne 0x3472"
        ]
      }, 
      {
        "basicblock_0x345f": [
          "cmp ebx, ecx", 
          "jne 0x3472"
        ]
      }, 
      {
        "basicblock_0x3463": [
          "cmp esi, eax", 
          "jne 0x3472"
        ]
      }, 
      {
        "basicblock_0x3472": [
          "mov dword ptr [ebp - 0x1c], ecx", 
          "mov dword ptr [ebp - 0x18], ecx", 
          "mov dword ptr [ebp - 0x14], ecx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x3396", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x3396", 
          "xor ecx, ecx", 
          "test esi, esi", 
          "jle 0x34af"
        ]
      }, 
      {
        "basicblock_0x3467": [
          "mov ecx, dword ptr [ebp + 8]", 
          "push edi", 
          "call 0x30f2", 
          "jmp 0x34cf"
        ]
      }, 
      {
        "basicblock_0x3498": [
          "lea eax, dword ptr [ebx + ebx]", 
          "mov edx, dword ptr [edi]", 
          "mov ebx, dword ptr [ebp - 0x1c]", 
          "mov dx, word ptr [eax + edx]", 
          "mov word ptr [ebx + ecx*2], dx", 
          "inc ecx", 
          "inc eax", 
          "inc eax", 
          "cmp ecx, esi", 
          "jl 0x349b"
        ]
      }, 
      {
        "basicblock_0x34af": [
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, dword ptr [ebp + 8]", 
          "and word ptr [eax + esi*2], 0", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "mov dword ptr [ebp - 0x18], esi", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ebp + 8]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x34cf": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ebp + 8]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x349b": [
          "mov edx, dword ptr [edi]", 
          "mov ebx, dword ptr [ebp - 0x1c]", 
          "mov dx, word ptr [eax + edx]", 
          "mov word ptr [ebx + ecx*2], dx", 
          "inc ecx", 
          "inc eax", 
          "inc eax", 
          "cmp ecx, esi", 
          "jl 0x349b"
        ]
      }
    ]
  }, 
  {
    "func_0x5246": [
      {
        "basicblock_0x5246": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "mov eax, dword ptr [ecx + 4]", 
          "and dword ptr [ebp - 4], 0", 
          "sub eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x3434", 
          "mov eax, dword ptr [ebp + 8]", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x312c": [
      {
        "basicblock_0x312c": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "cmp edi, esi", 
          "je 0x3163"
        ]
      }, 
      {
        "basicblock_0x3138": [
          "mov eax, dword ptr [esi]", 
          "and dword ptr [esi + 4], 0", 
          "and word ptr [eax], 0", 
          "push dword ptr [edi + 4]", 
          "call 0x3396", 
          "mov ecx, dword ptr [edi]", 
          "mov eax, dword ptr [esi]", 
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x314e"
        ]
      }, 
      {
        "basicblock_0x3163": [
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x315d": [
          "mov eax, dword ptr [edi + 4]", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x314e": [
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x314e"
        ]
      }
    ]
  }, 
  {
    "func_0x284b1": [
      {
        "basicblock_0x284b1": [
          "push ebp", 
          "mov ebp, esp", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b2a0]", 
          "test eax, eax", 
          "pop ecx", 
          "jne 0x284d6"
        ]
      }, 
      {
        "basicblock_0x284c2": [
          "mov al, byte ptr [ebp + 0xb]", 
          "push 0x4541a8", 
          "mov byte ptr [ebp + 0xb], al", 
          "lea eax, dword ptr [ebp + 0xb]", 
          "push eax", 
          "call 0x41ba0", 
          "pop ebp", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x284d6": [
          "pop ebp", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x316a": [
      {
        "basicblock_0x316a": [
          "push esi", 
          "mov esi, ecx", 
          "push 1", 
          "call 0x33ea", 
          "mov eax, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi]", 
          "mov dx, word ptr [esp + 8]", 
          "mov word ptr [ecx + eax*2], dx", 
          "inc dword ptr [esi + 4]", 
          "mov eax, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi]", 
          "and word ptr [ecx + eax*2], 0", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x30f2": [
      {
        "basicblock_0x30f2": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "xor eax, eax", 
          "mov dword ptr [esi], eax", 
          "mov dword ptr [esi + 4], eax", 
          "mov dword ptr [esi + 8], eax", 
          "push dword ptr [edi + 4]", 
          "call 0x3396", 
          "mov ecx, dword ptr [edi]", 
          "mov eax, dword ptr [esi]", 
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x3110"
        ]
      }, 
      {
        "basicblock_0x311f": [
          "mov eax, dword ptr [edi + 4]", 
          "pop edi", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3110": [
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x3110"
        ]
      }
    ]
  }, 
  {
    "func_0x706b": [
      {
        "basicblock_0x706b": [
          "mov edx, dword ptr [ecx]", 
          "mov eax, edx", 
          "mov cx, word ptr [eax]", 
          "cmp cx, word ptr [esp + 4]", 
          "je 0x7082"
        ]
      }, 
      {
        "basicblock_0x7079": [
          "test cx, cx", 
          "je 0x7088"
        ]
      }, 
      {
        "basicblock_0x7082": [
          "sub eax, edx", 
          "sar eax, 1", 
          "jmp 0x708b"
        ]
      }, 
      {
        "basicblock_0x707e": [
          "inc eax", 
          "inc eax", 
          "jmp 0x706f"
        ]
      }, 
      {
        "basicblock_0x7088": [
          "or eax, 0xffffffff", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x708b": [
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x706f": [
          "mov cx, word ptr [eax]", 
          "cmp cx, word ptr [esp + 4]", 
          "je 0x7082"
        ]
      }
    ]
  }, 
  {
    "func_0x61f9": [
      {
        "basicblock_0x61f9": [
          "call 0x5ea8", 
          "test al, al", 
          "je 0x6217"
        ]
      }, 
      {
        "basicblock_0x6202": [
          "call 0x2f751", 
          "call 0x1eb0d", 
          "test al, al", 
          "je 0x6217"
        ]
      }, 
      {
        "basicblock_0x6217": [
          "ret "
        ]
      }, 
      {
        "basicblock_0x6210": [
          "mov cl, 1", 
          "jmp 0x2c4c5"
        ]
      }, 
      {
        "basicblock_0x2c4c5": [
          "push ebx", 
          "push esi", 
          "mov bl, cl", 
          "push 0x45c730", 
          "call dword ptr [0x44b1e8]", 
          "mov esi, eax", 
          "test esi, esi", 
          "jne 0x2c4de"
        ]
      }, 
      {
        "basicblock_0x2c4da": [
          "xor al, al", 
          "jmp 0x2c4f2"
        ]
      }, 
      {
        "basicblock_0x2c4de": [
          "mov dl, bl", 
          "mov ecx, esi", 
          "call 0x2c4f5", 
          "mov bl, al", 
          "push esi", 
          "call dword ptr [0x44b1ec]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2c4f2": [
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x5cd4": [
      {
        "basicblock_0x5cd4": [
          "mov eax, 0x442ce4", 
          "call 0x41b80", 
          "sub esp, 0x90", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "xor ebx, ebx", 
          "mov dword ptr [ebp - 0x14], edx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [0x45d8b0], edi", 
          "call 0xb56e", 
          "mov edx, 0x898", 
          "lea ecx, dword ptr [ebp - 0x70]", 
          "push 0x3000000", 
          "call 0xb168", 
          "push 1", 
          "push edi", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov dword ptr [ebp - 0x64], ebx", 
          "mov dword ptr [ebp - 0x60], 0x406218", 
          "mov dword ptr [ebp - 0x5c], ebx", 
          "mov dword ptr [ebp - 0x58], ebx", 
          "mov dword ptr [ebp - 0x54], edi", 
          "call dword ptr [0x44b488]", 
          "mov dword ptr [ebp - 0x50], eax", 
          "push 0x7f84", 
          "push ebx", 
          "call dword ptr [0x44b48c]", 
          "mov dword ptr [ebp - 0x4c], eax", 
          "mov eax, dword ptr [0x45b2cc]", 
          "lea ecx, dword ptr [ebp - 0x64]", 
          "mov dword ptr [ebp - 0x48], 0x10", 
          "mov dword ptr [ebp - 0x44], 0x67", 
          "mov dword ptr [ebp - 0x40], eax", 
          "call 0x2e31e", 
          "mov esi, 0x80000000", 
          "lea edx, dword ptr [ebp - 0xd]", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 0xd], bl", 
          "mov dword ptr [ebp - 0x2c], esi", 
          "mov dword ptr [ebp - 0x28], esi", 
          "call 0x20d67", 
          "cmp al, bl", 
          "mov byte ptr [ebp - 0x15], al", 
          "je 0x5d8f"
        ]
      }, 
      {
        "basicblock_0x5d7d": [
          "mov eax, dword ptr [ebp - 0x34]", 
          "sub eax, dword ptr [ebp - 0x3c]", 
          "mov dword ptr [ebp - 0x28], eax", 
          "mov eax, dword ptr [ebp - 0x30]", 
          "sub eax, dword ptr [ebp - 0x38]", 
          "mov dword ptr [ebp - 0x2c], eax", 
          "push 0x45d8bc", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x20f9e", 
          "cmp al, bl", 
          "mov byte ptr [0x45d8c0], al", 
          "je 0x5dc1"
        ]
      }, 
      {
        "basicblock_0x5d8f": [
          "push 0x45d8bc", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x20f9e", 
          "cmp al, bl", 
          "mov byte ptr [0x45d8c0], al", 
          "je 0x5dc1"
        ]
      }, 
      {
        "basicblock_0x5da8": [
          "push 1", 
          "pop eax", 
          "cmp dword ptr [ebp - 0x1c], eax", 
          "jb 0x5db6"
        ]
      }, 
      {
        "basicblock_0x5dc1": [
          "mov dword ptr [ebp - 0x1c], 1", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "push ebx", 
          "push edi", 
          "push ebx", 
          "push ebx", 
          "push dword ptr [ebp - 0x2c]", 
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [0x45d4c8], eax", 
          "mov eax, dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp - 0x28]", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [0x45d4cc], eax", 
          "push esi", 
          "push esi", 
          "push 0xcf0000", 
          "push dword ptr [ebp - 0x70]", 
          "push dword ptr [0x45b2cc]", 
          "call 0x2e468", 
          "test al, al", 
          "je 0x5e8e"
        ]
      }, 
      {
        "basicblock_0x5db0": [
          "cmp dword ptr [ebp - 0x1c], 2", 
          "jbe 0x5db9"
        ]
      }, 
      {
        "basicblock_0x5db6": [
          "mov dword ptr [ebp - 0x1c], eax", 
          "cmp dword ptr [ebp - 0x24], 2", 
          "jb 0x5dcb"
        ]
      }, 
      {
        "basicblock_0x5e05": [
          "push 1", 
          "pop eax", 
          "cmp dword ptr [ebp - 0x14], eax", 
          "je 0x5e19"
        ]
      }, 
      {
        "basicblock_0x5e8e": [
          "push dword ptr [ebp - 0x70]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, ebx", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x5db9": [
          "cmp dword ptr [ebp - 0x24], 2", 
          "jb 0x5dcb"
        ]
      }, 
      {
        "basicblock_0x5dbf": [
          "jmp 0x5dc8"
        ]
      }, 
      {
        "basicblock_0x5dcb": [
          "push ebx", 
          "push edi", 
          "push ebx", 
          "push ebx", 
          "push dword ptr [ebp - 0x2c]", 
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [0x45d4c8], eax", 
          "mov eax, dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp - 0x28]", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [0x45d4cc], eax", 
          "push esi", 
          "push esi", 
          "push 0xcf0000", 
          "push dword ptr [ebp - 0x70]", 
          "push dword ptr [0x45b2cc]", 
          "call 0x2e468", 
          "test al, al", 
          "je 0x5e8e"
        ]
      }, 
      {
        "basicblock_0x5e0d": [
          "cmp dword ptr [ebp - 0x14], 5", 
          "je 0x5e19"
        ]
      }, 
      {
        "basicblock_0x5e19": [
          "cmp byte ptr [ebp - 0xd], bl", 
          "je 0x5e27"
        ]
      }, 
      {
        "basicblock_0x5dc8": [
          "mov dword ptr [ebp - 0x24], ebx", 
          "push ebx", 
          "push edi", 
          "push ebx", 
          "push ebx", 
          "push dword ptr [ebp - 0x2c]", 
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [0x45d4c8], eax", 
          "mov eax, dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp - 0x28]", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [0x45d4cc], eax", 
          "push esi", 
          "push esi", 
          "push 0xcf0000", 
          "push dword ptr [ebp - 0x70]", 
          "push dword ptr [0x45b2cc]", 
          "call 0x2e468", 
          "test al, al", 
          "je 0x5e8e"
        ]
      }, 
      {
        "basicblock_0x5e13": [
          "cmp dword ptr [ebp - 0x14], 0xa", 
          "jne 0x5e2a"
        ]
      }, 
      {
        "basicblock_0x5e1e": [
          "mov dword ptr [ebp - 0x14], 3", 
          "jmp 0x5e30"
        ]
      }, 
      {
        "basicblock_0x5e27": [
          "mov dword ptr [ebp - 0x14], eax", 
          "cmp dword ptr [ebp - 0x14], 3", 
          "jne 0x5e37"
        ]
      }, 
      {
        "basicblock_0x5e2a": [
          "cmp dword ptr [ebp - 0x14], 3", 
          "jne 0x5e37"
        ]
      }, 
      {
        "basicblock_0x5e30": [
          "mov byte ptr [0x45d8b6], 1", 
          "lea eax, dword ptr [ebp - 0x9c]"
        ]
      }, 
      {
        "basicblock_0x5e37": [
          "lea eax, dword ptr [ebp - 0x9c]"
        ]
      }
    ]
  }, 
  {
    "func_0x41d82": [
      {
        "basicblock_0x41d82": [
          "jmp dword ptr [0x44b2b4]"
        ]
      }
    ]
  }, 
  {
    "func_0x33ea": [
      {
        "basicblock_0x33ea": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ecx + 8]", 
          "mov ebx, dword ptr [esp + 0x10]", 
          "mov esi, edi", 
          "sub esi, dword ptr [ecx + 4]", 
          "dec esi", 
          "cmp ebx, esi", 
          "jle 0x342e"
        ]
      }, 
      {
        "basicblock_0x33fe": [
          "cmp edi, 0x40", 
          "jle 0x340c"
        ]
      }, 
      {
        "basicblock_0x342e": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3403": [
          "mov eax, edi", 
          "cdq ", 
          "sub eax, edx", 
          "sar eax, 1", 
          "jmp 0x341b"
        ]
      }, 
      {
        "basicblock_0x340c": [
          "xor eax, eax", 
          "cmp edi, 8", 
          "setle al", 
          "dec eax", 
          "and eax, 0xc", 
          "add eax, 4", 
          "lea edx, dword ptr [eax + esi]", 
          "cmp edx, ebx", 
          "jge 0x3426"
        ]
      }, 
      {
        "basicblock_0x341b": [
          "lea edx, dword ptr [eax + esi]", 
          "cmp edx, ebx", 
          "jge 0x3426"
        ]
      }, 
      {
        "basicblock_0x3422": [
          "sub ebx, esi", 
          "mov eax, ebx", 
          "add edi, eax", 
          "push edi", 
          "call 0x3396", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3426": [
          "add edi, eax", 
          "push edi", 
          "call 0x3396", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x708e": [
      {
        "basicblock_0x708e": [
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [esp + 0x10]", 
          "push edi", 
          "mov edi, ecx", 
          "mov ecx, dword ptr [esp + 0x10]", 
          "mov ebx, dword ptr [edi + 4]", 
          "lea eax, dword ptr [ecx + esi]", 
          "cmp eax, ebx", 
          "jle 0x70a9"
        ]
      }, 
      {
        "basicblock_0x70a5": [
          "mov esi, ebx", 
          "sub esi, ecx", 
          "test esi, esi", 
          "jle 0x70d6"
        ]
      }, 
      {
        "basicblock_0x70a9": [
          "test esi, esi", 
          "jle 0x70d6"
        ]
      }, 
      {
        "basicblock_0x70ad": [
          "lea edx, dword ptr [ecx + esi]", 
          "mov eax, dword ptr [edi]", 
          "imul edx, edx, 0x7fffffff", 
          "add edx, ebx", 
          "lea edx, dword ptr [edx + edx + 2]", 
          "push edx", 
          "lea edx, dword ptr [ecx + esi]", 
          "lea edx, dword ptr [eax + edx*2]", 
          "lea eax, dword ptr [eax + ecx*2]", 
          "push edx", 
          "push eax", 
          "call dword ptr [0x44b2b8]", 
          "add esp, 0xc", 
          "sub dword ptr [edi + 4], esi", 
          "mov eax, dword ptr [edi + 4]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x70d6": [
          "mov eax, dword ptr [edi + 4]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x5ea8": [
      {
        "basicblock_0x5ea8": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x94", 
          "lea eax, dword ptr [ebp - 0x94]"
        ]
      }
    ]
  }, 
  {
    "func_0xb56e": [
      {
        "basicblock_0xb56e": [
          "mov eax, 0x443874", 
          "call 0x41b80", 
          "sub esp, 0xc", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "je 0xb5dd"
        ]
      }, 
      {
        "basicblock_0xb586": [
          "mov ecx, 0x45d8e0", 
          "call 0x1e873", 
          "cmp dword ptr [0x45d8e4], ebx", 
          "jne 0xb5dd"
        ]
      }, 
      {
        "basicblock_0xb5dd": [
          "call 0xae68", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb598": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x3396", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0xb42f", 
          "cmp dword ptr [ebp - 0x14], ebx", 
          "jne 0xb5c8"
        ]
      }, 
      {
        "basicblock_0xb5bb": [
          "push 0x45b600", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x4722", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x1e80b", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "call 0xae68", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb5c8": [
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x1e80b", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "call 0xae68", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xb168": [
      {
        "basicblock_0xb168": [
          "mov eax, 0x4437c0", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "xor esi, esi", 
          "mov ebx, edx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [ebp - 0x1c], esi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "mov dword ptr [ebp - 0x14], esi", 
          "call 0x3396", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, 0x45d8f0", 
          "push eax", 
          "mov dword ptr [ebp - 4], esi", 
          "push dword ptr [ebp + 8]", 
          "call 0x27f75", 
          "test al, al", 
          "je 0xb1b9"
        ]
      }, 
      {
        "basicblock_0xb1ac": [
          "lea eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, edi", 
          "push eax", 
          "call 0x30f2", 
          "jmp 0xb1c2"
        ]
      }, 
      {
        "basicblock_0xb1b9": [
          "mov edx, ebx", 
          "mov ecx, edi", 
          "call 0x2dbf9", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xb1c2": [
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2e31e": [
      {
        "basicblock_0x2e31e": [
          "mov eax, 0x447ab0", 
          "call 0x41b80", 
          "sub esp, 0x58", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "push esi", 
          "mov esi, ecx", 
          "je 0x2e345"
        ]
      }, 
      {
        "basicblock_0x2e339": [
          "push esi", 
          "call dword ptr [0x44b348]", 
          "jmp 0x2e45a"
        ]
      }, 
      {
        "basicblock_0x2e345": [
          "mov eax, dword ptr [esi]", 
          "push edi", 
          "mov dword ptr [ebp - 0x64], eax", 
          "mov eax, dword ptr [esi + 4]", 
          "mov dword ptr [ebp - 0x60], eax", 
          "mov eax, dword ptr [esi + 8]", 
          "mov dword ptr [ebp - 0x5c], eax", 
          "mov eax, dword ptr [esi + 0xc]", 
          "mov dword ptr [ebp - 0x58], eax", 
          "mov eax, dword ptr [esi + 0x10]", 
          "mov dword ptr [ebp - 0x54], eax", 
          "mov eax, dword ptr [esi + 0x14]", 
          "mov dword ptr [ebp - 0x50], eax", 
          "mov eax, dword ptr [esi + 0x18]", 
          "mov dword ptr [ebp - 0x4c], eax", 
          "mov eax, dword ptr [esi + 0x1c]", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x48], eax", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x34e3", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x34e3", 
          "mov eax, dword ptr [esi + 0x20]", 
          "mov edi, 0xffff0000", 
          "test eax, edi", 
          "mov byte ptr [ebp - 4], 1", 
          "je 0x2e3ec"
        ]
      }, 
      {
        "basicblock_0x2e45a": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2e3ae": [
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "call 0x3091", 
          "lea edx, dword ptr [ebp - 0x30]", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x3a785", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x3244", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x30]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x24]", 
          "pop ecx", 
          "pop ecx", 
          "mov esi, dword ptr [esi + 0x24]", 
          "mov dword ptr [ebp - 0x44], eax", 
          "test esi, edi", 
          "pop edi", 
          "jne 0x2e3fc"
        ]
      }, 
      {
        "basicblock_0x2e3ec": [
          "mov esi, dword ptr [esi + 0x24]", 
          "mov dword ptr [ebp - 0x44], eax", 
          "test esi, edi", 
          "pop edi", 
          "jne 0x2e3fc"
        ]
      }, 
      {
        "basicblock_0x2e3f7": [
          "mov dword ptr [ebp - 0x40], esi", 
          "jmp 0x2e439"
        ]
      }, 
      {
        "basicblock_0x2e3fc": [
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "call 0x3091", 
          "lea edx, dword ptr [ebp - 0x30]", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 4", 
          "call 0x3a785", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov byte ptr [ebp - 4], 5", 
          "call 0x3244", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x30]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x18]", 
          "pop ecx", 
          "pop ecx", 
          "mov dword ptr [ebp - 0x40], eax", 
          "lea eax, dword ptr [ebp - 0x64]", 
          "push eax", 
          "call dword ptr [0x44b34c]", 
          "mov esi, eax", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ax, si", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2e439": [
          "lea eax, dword ptr [ebp - 0x64]", 
          "push eax", 
          "call dword ptr [0x44b34c]", 
          "mov esi, eax", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ax, si", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x20d67": [
      {
        "basicblock_0x20d67": [
          "mov eax, 0x446484", 
          "call 0x41b80", 
          "sub esp, 0x30", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov esi, ecx", 
          "push dword ptr [0x45c160]", 
          "mov ebx, edx", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x1e0dd", 
          "and dword ptr [ebp - 4], 0", 
          "mov edi, 0x45d940", 
          "push edi", 
          "mov dword ptr [ebp - 0x18], edi", 
          "call dword ptr [0x44b060]", 
          "and dword ptr [ebp - 0x10], 0", 
          "push 0x20019", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 2", 
          "push 0x80000001", 
          "call 0x2d35b", 
          "test eax, eax", 
          "je 0x20dc4"
        ]
      }, 
      {
        "basicblock_0x20dbd": [
          "xor bl, bl", 
          "jmp 0x20e56"
        ]
      }, 
      {
        "basicblock_0x20dc4": [
          "and dword ptr [ebp - 0x2c], 0", 
          "and dword ptr [ebp - 0x28], 0", 
          "mov dword ptr [ebp - 0x30], 0x44c434", 
          "lea eax, dword ptr [ebp - 0x14]", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x30]", 
          "push eax", 
          "mov byte ptr [ebp - 4], 3", 
          "push dword ptr [0x45c168]", 
          "call 0x2d887", 
          "test eax, eax", 
          "je 0x20df5"
        ]
      }, 
      {
        "basicblock_0x20e56": [
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push edi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x20df1": [
          "xor bl, bl", 
          "jmp 0x20e46"
        ]
      }, 
      {
        "basicblock_0x20df5": [
          "push 0x14", 
          "pop eax", 
          "cmp dword ptr [ebp - 0x14], eax", 
          "jne 0x20df1"
        ]
      }, 
      {
        "basicblock_0x20e46": [
          "push dword ptr [ebp - 0x28]", 
          "mov dword ptr [ebp - 0x30], 0x44c434", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push edi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x20dfd": [
          "and dword ptr [ebp - 0x1c], 0", 
          "mov dword ptr [ebp - 0x20], eax", 
          "mov eax, dword ptr [ebp - 0x28]", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x24], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [esi], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [esi + 4], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [esi + 8], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [esi + 0xc], eax", 
          "call 0x20bda", 
          "test eax, eax", 
          "setne al", 
          "mov byte ptr [ebx], al", 
          "mov bl, 1", 
          "push dword ptr [ebp - 0x28]", 
          "mov dword ptr [ebp - 0x30], 0x44c434", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push edi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x41ba0": [
      {
        "basicblock_0x41ba0": [
          "jmp dword ptr [0x44b2a8]"
        ]
      }
    ]
  }, 
  {
    "func_0x2f751": [
      {
        "basicblock_0x2f751": [
          "mov eax, 0x447d34", 
          "call 0x41b80", 
          "sub esp, 0x334", 
          "push ebx", 
          "push esi", 
          "xor ebx, ebx", 
          "push 0x45c730", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "call dword ptr [0x44b1d4]", 
          "mov dword ptr [ebp - 0x14], eax", 
          "cmp eax, ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov dword ptr [ebp - 0x34], 0x18", 
          "mov dword ptr [ebp - 0x30], ebx", 
          "mov dword ptr [ebp - 0x2c], ebx", 
          "mov dword ptr [ebp - 0x28], ebx", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "je 0x2f851"
        ]
      }, 
      {
        "basicblock_0x2f797": [
          "push 0x45c820", 
          "push eax", 
          "call dword ptr [0x44b1f8]", 
          "mov esi, eax", 
          "cmp esi, ebx", 
          "je 0x2f851"
        ]
      }, 
      {
        "basicblock_0x2f851": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x2f872", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2f7ad": [
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x2f872", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x34]", 
          "push 0xf0fff", 
          "push eax", 
          "push ebx", 
          "call esi", 
          "cmp eax, ebx", 
          "jne 0x2f851"
        ]
      }, 
      {
        "basicblock_0x2f7cd": [
          "push edi", 
          "push 0xb", 
          "pop ecx", 
          "mov esi, 0x45c7f4", 
          "lea edi, dword ptr [ebp - 0x13c]", 
          "push 0x35", 
          "rep movsd dword ptr es:[edi], dword ptr [esi]", 
          "pop ecx", 
          "xor eax, eax", 
          "lea edi, dword ptr [ebp - 0x110]", 
          "lea edx, dword ptr [ebp - 0x3c]", 
          "rep stosd dword ptr es:[edi], eax", 
          "lea ecx, dword ptr [ebp - 0x13c]", 
          "call 0x2f8d8", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x1c], 0x100", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x340]", 
          "push eax", 
          "call dword ptr [0x44b020]", 
          "test eax, eax", 
          "pop edi", 
          "je 0x2f851"
        ]
      }, 
      {
        "basicblock_0x2f816": [
          "lea ecx, dword ptr [ebp - 0x340]", 
          "call 0x2f8fa", 
          "mov esi, eax", 
          "cmp esi, ebx", 
          "je 0x2f851"
        ]
      }, 
      {
        "basicblock_0x2f827": [
          "lea eax, dword ptr [ebp - 0x3c]", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "push eax", 
          "push esi", 
          "mov byte ptr [ebp - 0xd], bl", 
          "call 0x2f8a5", 
          "cmp eax, ebx", 
          "jne 0x2f83f"
        ]
      }, 
      {
        "basicblock_0x2f83b": [
          "mov byte ptr [ebp - 0xd], 1", 
          "push esi", 
          "push ebx", 
          "call dword ptr [0x44b090]", 
          "push eax", 
          "call dword ptr [0x44b094]", 
          "mov bl, byte ptr [ebp - 0xd]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x2f872", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2f83f": [
          "push esi", 
          "push ebx", 
          "call dword ptr [0x44b090]", 
          "push eax", 
          "call dword ptr [0x44b094]", 
          "mov bl, byte ptr [ebp - 0xd]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x2f872", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x1eb0d": [
      {
        "basicblock_0x1eb0d": [
          "mov ecx, dword ptr [0x45bf84]", 
          "xor dl, dl", 
          "jmp 0x1eb1a"
        ]
      }, 
      {
        "basicblock_0x1eb1a": [
          "mov eax, 0x446050", 
          "call 0x41b80", 
          "push ecx", 
          "push ecx", 
          "and dword ptr [ebp - 0x14], 0", 
          "push ebx", 
          "push esi", 
          "mov bl, dl", 
          "mov esi, ecx", 
          "and dword ptr [ebp - 4], 0", 
          "push 0x20019", 
          "push dword ptr [0x45bf58]", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "push 0x80000001", 
          "call 0x2d35b", 
          "test eax, eax", 
          "jne 0x1eb64"
        ]
      }, 
      {
        "basicblock_0x1eb50": [
          "lea eax, dword ptr [ebp - 0xd]", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "push eax", 
          "push esi", 
          "call 0x2d615", 
          "test eax, eax", 
          "jne 0x1eb64"
        ]
      }, 
      {
        "basicblock_0x1eb64": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x1eb61": [
          "mov bl, byte ptr [ebp - 0xd]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x27f75": [
      {
        "basicblock_0x27f75": [
          "push esi", 
          "mov esi, ecx", 
          "push dword ptr [esp + 8]", 
          "call 0x27f3d", 
          "test eax, eax", 
          "jge 0x27f89"
        ]
      }, 
      {
        "basicblock_0x27f85": [
          "xor al, al", 
          "jmp 0x27f9e"
        ]
      }, 
      {
        "basicblock_0x27f89": [
          "mov ecx, dword ptr [esi + 0xc]", 
          "mov eax, dword ptr [ecx + eax*4]", 
          "mov ecx, dword ptr [esp + 0xc]", 
          "add eax, 4", 
          "push eax", 
          "call 0x312c", 
          "mov al, 1", 
          "pop esi", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x27f9e": [
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x1e0dd": [
      {
        "basicblock_0x1e0dd": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0x10]", 
          "mov esi, ecx", 
          "xor ebx, ebx", 
          "mov dword ptr [esi], ebx", 
          "mov dword ptr [esi + 4], ebx", 
          "mov dword ptr [esi + 8], ebx", 
          "cmp byte ptr [edi], bl", 
          "je 0x1e0fb"
        ]
      }, 
      {
        "basicblock_0x1e0f4": [
          "inc ebx", 
          "cmp byte ptr [ebx + edi], 0", 
          "jne 0x1e0f4"
        ]
      }, 
      {
        "basicblock_0x1e0fb": [
          "push ebx", 
          "mov ecx, esi", 
          "call 0x34e3", 
          "mov eax, dword ptr [esi]", 
          "mov cl, byte ptr [edi]", 
          "lea edx, dword ptr [edi + 1]", 
          "mov byte ptr [eax], cl", 
          "inc eax", 
          "test cl, cl", 
          "je 0x1e119"
        ]
      }, 
      {
        "basicblock_0x1e111": [
          "mov cl, byte ptr [edx]", 
          "mov byte ptr [eax], cl", 
          "inc eax", 
          "inc edx", 
          "jmp 0x1e10d"
        ]
      }, 
      {
        "basicblock_0x1e119": [
          "mov dword ptr [esi + 4], ebx", 
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1e10d": [
          "test cl, cl", 
          "je 0x1e119"
        ]
      }
    ]
  }, 
  {
    "func_0x2d35b": [
      {
        "basicblock_0x2d35b": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 4]", 
          "push esi", 
          "push eax", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp + 0x10]", 
          "mov esi, ecx", 
          "push 0", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b000]", 
          "test eax, eax", 
          "jne 0x2d38b"
        ]
      }, 
      {
        "basicblock_0x2d37f": [
          "mov ecx, esi", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [esi], ecx", 
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x2d38b": [
          "pop esi", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x20f9e": [
      {
        "basicblock_0x20f9e": [
          "mov eax, 0x4464dc", 
          "call 0x41b80", 
          "sub esp, 0x30", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov ebx, ecx", 
          "push dword ptr [0x45c160]", 
          "mov edi, edx", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x1e0dd", 
          "and dword ptr [ebp - 4], 0", 
          "mov esi, 0x45d940", 
          "push esi", 
          "mov dword ptr [ebp - 0x18], esi", 
          "call dword ptr [0x44b060]", 
          "and dword ptr [ebp - 0x10], 0", 
          "push 0x20019", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 2", 
          "push 0x80000001", 
          "call 0x2d35b", 
          "test eax, eax", 
          "je 0x20ff8"
        ]
      }, 
      {
        "basicblock_0x20ff4": [
          "xor bl, bl", 
          "jmp 0x21071"
        ]
      }, 
      {
        "basicblock_0x20ff8": [
          "and dword ptr [ebp - 0x20], 0", 
          "and dword ptr [ebp - 0x1c], 0", 
          "mov dword ptr [ebp - 0x24], 0x44c434", 
          "lea eax, dword ptr [ebp - 0x14]", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "mov byte ptr [ebp - 4], 3", 
          "push dword ptr [0x45c16c]", 
          "call 0x2d887", 
          "test eax, eax", 
          "je 0x21029"
        ]
      }, 
      {
        "basicblock_0x21071": [
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push esi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x21025": [
          "xor bl, bl", 
          "jmp 0x21061"
        ]
      }, 
      {
        "basicblock_0x21029": [
          "push 0xc", 
          "pop eax", 
          "cmp dword ptr [ebp - 0x14], eax", 
          "jne 0x21025"
        ]
      }, 
      {
        "basicblock_0x21061": [
          "push dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x24], 0x44c434", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push esi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x21031": [
          "and dword ptr [ebp - 0x28], 0", 
          "mov dword ptr [ebp - 0x2c], eax", 
          "mov eax, dword ptr [ebp - 0x1c]", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov dword ptr [ebp - 0x30], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov dword ptr [ebx], eax", 
          "call 0x20bda", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov dword ptr [edi], eax", 
          "call 0x20bda", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov bl, 1", 
          "mov dword ptr [ecx], eax", 
          "push dword ptr [ebp - 0x1c]", 
          "mov dword ptr [ebp - 0x24], 0x44c434", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x2d390", 
          "push esi", 
          "call dword ptr [0x44b20c]", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x1e873": [
      {
        "basicblock_0x1e873": [
          "mov edx, dword ptr [0x45bf60]", 
          "push ecx", 
          "mov ecx, dword ptr [0x45bf58]", 
          "call 0x1e886", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xae68": [
      {
        "basicblock_0xae68": [
          "mov eax, 0x44375c", 
          "call 0x41b80", 
          "sub esp, 0x3c", 
          "push ebx", 
          "push esi", 
          "mov esi, 0x45d8e0", 
          "push edi", 
          "mov ecx, esi", 
          "call 0x1e873", 
          "mov edi, 0x45d8f0", 
          "mov ecx, edi", 
          "call 0x28327", 
          "xor ebx, ebx", 
          "cmp dword ptr [0x45d8e4], ebx", 
          "je 0xaf8a"
        ]
      }, 
      {
        "basicblock_0xae9e": [
          "mov ecx, dword ptr [0x45d8e0]", 
          "mov edx, 0x45b600", 
          "call 0x2828a", 
          "cmp eax, ebx", 
          "je 0xaf8a"
        ]
      }, 
      {
        "basicblock_0xaf8a": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xaeb6": [
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x30f2", 
          "push ebx", 
          "push 0x5c", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0xb7e1", 
          "test eax, eax", 
          "jge 0xaf77"
        ]
      }, 
      {
        "basicblock_0xaed5": [
          "push ebx", 
          "push 0x2e", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0xb7e1", 
          "test eax, eax", 
          "jge 0xaef1"
        ]
      }, 
      {
        "basicblock_0xaf77": [
          "push dword ptr [ebp - 0x18]", 
          "mov ecx, edi", 
          "call 0x27bc6", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xaee4": [
          "push 0x45b5f4", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x3195", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x3396", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x1d79c", 
          "test al, al", 
          "je 0xaf6b"
        ]
      }, 
      {
        "basicblock_0xaef1": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x3396", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x1d79c", 
          "test al, al", 
          "je 0xaf6b"
        ]
      }, 
      {
        "basicblock_0xaf14": [
          "push 0x45b5e8", 
          "lea ecx, dword ptr [ebp - 0x48]", 
          "call 0x3091", 
          "push eax", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x356a", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov edx, eax", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x356a", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov byte ptr [ebp - 4], 4", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x30]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x48]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "push dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], bl", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x18]", 
          "mov ecx, edi", 
          "call 0x27bc6", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xaf6b": [
          "push dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], bl", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x18]", 
          "mov ecx, edi", 
          "call 0x27bc6", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x27f3d": [
      {
        "basicblock_0x27f3d": [
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ecx + 8]", 
          "push edi", 
          "xor edi, edi", 
          "test esi, esi", 
          "je 0x27f6c"
        ]
      }, 
      {
        "basicblock_0x27f49": [
          "mov ebx, dword ptr [ecx + 0xc]", 
          "lea eax, dword ptr [esi + edi]", 
          "cdq ", 
          "sub eax, edx", 
          "sar eax, 1", 
          "mov ecx, dword ptr [ebx + eax*4]", 
          "mov ecx, dword ptr [ecx]", 
          "cmp dword ptr [esp + 0x10], ecx", 
          "je 0x27f6f"
        ]
      }, 
      {
        "basicblock_0x27f6c": [
          "or eax, 0xffffffff", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27f5f": [
          "jae 0x27f65"
        ]
      }, 
      {
        "basicblock_0x27f6f": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27f61": [
          "mov esi, eax", 
          "jmp 0x27f68"
        ]
      }, 
      {
        "basicblock_0x27f65": [
          "lea edi, dword ptr [eax + 1]", 
          "cmp edi, esi", 
          "jne 0x27f4c"
        ]
      }, 
      {
        "basicblock_0x27f68": [
          "cmp edi, esi", 
          "jne 0x27f4c"
        ]
      }, 
      {
        "basicblock_0x27f4c": [
          "lea eax, dword ptr [esi + edi]", 
          "cdq ", 
          "sub eax, edx", 
          "sar eax, 1", 
          "mov ecx, dword ptr [ebx + eax*4]", 
          "mov ecx, dword ptr [ecx]", 
          "cmp dword ptr [esp + 0x10], ecx", 
          "je 0x27f6f"
        ]
      }
    ]
  }, 
  {
    "func_0x2dbf9": [
      {
        "basicblock_0x2dbf9": [
          "push ecx", 
          "and dword ptr [esp], 0", 
          "push esi", 
          "push edx", 
          "mov edx, dword ptr [0x45d8b0]", 
          "mov esi, ecx", 
          "call 0x2db28", 
          "mov eax, esi", 
          "pop esi", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x34e3": [
      {
        "basicblock_0x34e3": [
          "mov eax, dword ptr [esp + 4]", 
          "push ebx", 
          "push esi", 
          "mov esi, ecx", 
          "lea ebx, dword ptr [eax + 1]", 
          "cmp ebx, dword ptr [esi + 8]", 
          "je 0x352c"
        ]
      }, 
      {
        "basicblock_0x34f3": [
          "push edi", 
          "push ebx", 
          "call 0x284b1", 
          "mov edi, eax", 
          "xor eax, eax", 
          "cmp dword ptr [esi + 8], eax", 
          "pop ecx", 
          "jle 0x351f"
        ]
      }, 
      {
        "basicblock_0x352c": [
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3504": [
          "cmp dword ptr [esi + 4], eax", 
          "jle 0x3517"
        ]
      }, 
      {
        "basicblock_0x351f": [
          "mov eax, dword ptr [esi + 4]", 
          "mov dword ptr [esi], edi", 
          "and byte ptr [eax + edi], 0", 
          "mov dword ptr [esi + 8], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3509": [
          "mov ecx, dword ptr [esi]", 
          "mov cl, byte ptr [ecx + eax]", 
          "mov byte ptr [eax + edi], cl", 
          "inc eax", 
          "cmp eax, dword ptr [esi + 4]", 
          "jl 0x3509"
        ]
      }, 
      {
        "basicblock_0x3517": [
          "push dword ptr [esi]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, dword ptr [esi + 4]", 
          "mov dword ptr [esi], edi", 
          "and byte ptr [eax + edi], 0", 
          "mov dword ptr [esi + 8], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2d887": [
      {
        "basicblock_0x2d887": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "xor ebx, ebx", 
          "push esi", 
          "lea eax, dword ptr [ebp - 4]", 
          "push ebx", 
          "push eax", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "mov edi, ecx", 
          "mov dword ptr [esi], ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "push dword ptr [edi]", 
          "call dword ptr [0x44b018]", 
          "cmp eax, ebx", 
          "je 0x2d8b7"
        ]
      }, 
      {
        "basicblock_0x2d8b0": [
          "cmp eax, 0xea", 
          "jne 0x2d8d2"
        ]
      }, 
      {
        "basicblock_0x2d8b7": [
          "mov ebx, dword ptr [ebp + 0xc]", 
          "push dword ptr [esi]", 
          "mov ecx, ebx", 
          "call 0x1b339", 
          "mov ebx, dword ptr [ebx + 8]", 
          "push esi", 
          "push ebx", 
          "mov ecx, edi", 
          "push dword ptr [ebp + 8]", 
          "call 0x2d864", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x2d8d2": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x2e468": [
      {
        "basicblock_0x2e468": [
          "mov eax, 0x447ad4", 
          "call 0x41b80", 
          "sub esp, 0x30", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "push esi", 
          "mov esi, ecx", 
          "je 0x2e4bb"
        ]
      }, 
      {
        "basicblock_0x2e483": [
          "push dword ptr [ebp + 0x30]", 
          "push dword ptr [ebp + 0x2c]", 
          "push dword ptr [ebp + 0x28]", 
          "push dword ptr [ebp + 0x24]", 
          "push dword ptr [ebp + 0x20]", 
          "push dword ptr [ebp + 0x1c]", 
          "push dword ptr [ebp + 0x18]", 
          "push dword ptr [ebp + 0x14]", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "push ebx", 
          "call dword ptr [0x44b344]", 
          "xor ecx, ecx", 
          "cmp eax, ebx", 
          "setne cl", 
          "mov dword ptr [esi], eax", 
          "mov al, cl", 
          "jmp 0x2e548"
        ]
      }, 
      {
        "basicblock_0x2e4bb": [
          "push edi", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp + 0xc]", 
          "call 0x3091", 
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x3091", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x3a785", 
          "mov edi, dword ptr [eax]", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x3a785", 
          "push dword ptr [ebp + 0x30]", 
          "mov eax, dword ptr [eax]", 
          "push dword ptr [ebp + 0x2c]", 
          "push dword ptr [ebp + 0x28]", 
          "push dword ptr [ebp + 0x24]", 
          "push dword ptr [ebp + 0x20]", 
          "push dword ptr [ebp + 0x1c]", 
          "push dword ptr [ebp + 0x18]", 
          "push dword ptr [ebp + 0x14]", 
          "push dword ptr [ebp + 0x10]", 
          "push edi", 
          "push eax", 
          "push ebx", 
          "call dword ptr [0x44b4ac]", 
          "push dword ptr [ebp - 0x30]", 
          "cmp eax, ebx", 
          "mov dword ptr [esi], eax", 
          "setne bl", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x3c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "add esp, 0x10", 
          "mov al, bl", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x2c"
        ]
      }, 
      {
        "basicblock_0x2e548": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x2c"
        ]
      }
    ]
  }, 
  {
    "func_0x2f872": [
      {
        "basicblock_0x2f872": [
          "push esi", 
          "mov esi, ecx", 
          "cmp dword ptr [esi], 0", 
          "jne 0x2f87e"
        ]
      }, 
      {
        "basicblock_0x2f87a": [
          "xor eax, eax", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2f87e": [
          "mov eax, dword ptr [esi + 4]", 
          "test eax, eax", 
          "je 0x2f895"
        ]
      }, 
      {
        "basicblock_0x2f885": [
          "push 0x45c830", 
          "push eax", 
          "call dword ptr [0x44b1f8]", 
          "test eax, eax", 
          "jne 0x2f89c"
        ]
      }, 
      {
        "basicblock_0x2f895": [
          "mov eax, 0xc0000002", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2f89c": [
          "push dword ptr [esi]", 
          "call eax", 
          "and dword ptr [esi], 0", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x1e886": [
      {
        "basicblock_0x1e886": [
          "mov eax, 0x446000", 
          "call 0x41b80", 
          "xor eax, eax", 
          "push esi", 
          "mov esi, dword ptr [ebp + 8]", 
          "push edi", 
          "mov edi, edx", 
          "mov edx, dword ptr [esi]", 
          "mov dword ptr [esi + 4], eax", 
          "mov word ptr [edx], ax", 
          "mov dword ptr [ebp + 8], eax", 
          "push 0x20019", 
          "push ecx", 
          "push 0x80000001", 
          "lea ecx, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], eax", 
          "call 0x2d35b", 
          "test eax, eax", 
          "jne 0x1e8c8"
        ]
      }, 
      {
        "basicblock_0x1e8be": [
          "push esi", 
          "push edi", 
          "lea ecx, dword ptr [ebp + 8]", 
          "call 0x2d70f", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp + 8]", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1e8c8": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp + 8]", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xb42f": [
      {
        "basicblock_0xb42f": [
          "mov eax, 0x443860", 
          "call 0x41b80", 
          "sub esp, 0x30", 
          "mov eax, dword ptr [ecx]", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor edi, edi", 
          "mov dword ptr [ebp - 0x18], ecx", 
          "mov dword ptr [ecx + 4], edi", 
          "mov word ptr [eax], di", 
          "call dword ptr [0x44b1c0]", 
          "mov esi, eax", 
          "call dword ptr [0x44b1c4]", 
          "cmp si, ax", 
          "jne 0xb53e"
        ]
      }, 
      {
        "basicblock_0xb463": [
          "mov esi, eax", 
          "push 4", 
          "shr ax, 0xa", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "and esi, 0x3ff", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "call 0x2794", 
          "mov ebx, 0x44bcf4", 
          "mov dword ptr [ebp - 0x3c], ebx", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0xb1de", 
          "cmp dword ptr [ebp - 0x34], edi", 
          "mov dword ptr [ebp - 0x14], edi", 
          "jle 0xb520"
        ]
      }, 
      {
        "basicblock_0xb53e": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb49b": [
          "mov eax, dword ptr [ebp - 0x30]", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push 3", 
          "mov edi, dword ptr [eax + ecx*4]", 
          "xor eax, eax", 
          "lea ecx, dword ptr [ebp - 0x28]", 
          "mov dword ptr [ebp - 0x28], eax", 
          "mov dword ptr [ebp - 0x24], eax", 
          "mov dword ptr [ebp - 0x20], eax", 
          "call 0x3396", 
          "lea eax, dword ptr [ebp - 0x28]", 
          "mov ecx, edi", 
          "push eax", 
          "push 2", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x27f75", 
          "test al, al", 
          "je 0xb504"
        ]
      }, 
      {
        "basicblock_0xb520": [
          "mov dword ptr [ebp - 0x3c], ebx", 
          "mov dword ptr [ebp - 4], 3", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x28327", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x282fe", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb4ce": [
          "lea eax, dword ptr [ebp - 0xe]", 
          "lea edx, dword ptr [ebp - 0x10]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x28]", 
          "call 0xb3c2", 
          "test al, al", 
          "je 0xb504"
        ]
      }, 
      {
        "basicblock_0xb504": [
          "push dword ptr [ebp - 0x28]", 
          "and byte ptr [ebp - 4], 0", 
          "call 0x284d8", 
          "inc dword ptr [ebp - 0x14]", 
          "pop ecx", 
          "mov eax, dword ptr [ebp - 0x14]", 
          "cmp eax, dword ptr [ebp - 0x34]", 
          "jl 0xb49b"
        ]
      }, 
      {
        "basicblock_0xb4e1": [
          "cmp word ptr [ebp - 0x10], si", 
          "jne 0xb504"
        ]
      }, 
      {
        "basicblock_0xb4e7": [
          "cmp word ptr [ebp - 0xe], 0", 
          "jne 0xb4fa"
        ]
      }, 
      {
        "basicblock_0xb4ee": [
          "mov ecx, dword ptr [ebp - 0x18]", 
          "lea eax, dword ptr [edi + 0x14]", 
          "push eax", 
          "call 0x312c", 
          "mov ax, word ptr [ebp - 0xe]", 
          "cmp word ptr [ebp - 0x1c], ax", 
          "je 0xb54d"
        ]
      }, 
      {
        "basicblock_0xb4fa": [
          "mov ax, word ptr [ebp - 0xe]", 
          "cmp word ptr [ebp - 0x1c], ax", 
          "je 0xb54d"
        ]
      }, 
      {
        "basicblock_0xb54d": [
          "mov ecx, dword ptr [ebp - 0x18]", 
          "add edi, 0x14", 
          "push edi", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x28]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [ebp - 0x3c], ebx", 
          "mov dword ptr [ebp - 4], 2", 
          "jmp 0xb52a"
        ]
      }, 
      {
        "basicblock_0xb52a": [
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x28327", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "call 0x282fe", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x28327": [
      {
        "basicblock_0x28327": [
          "push 0", 
          "call 0x2833c", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2db28": [
      {
        "basicblock_0x2db28": [
          "mov eax, 0x44798c", 
          "call 0x41b80", 
          "sub esp, 0x24", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "mov dword ptr [ebp - 0x14], edx", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "je 0x2dbc2"
        ]
      }, 
      {
        "basicblock_0x2db49": [
          "push esi", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x3396", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov esi, 0x100", 
          "add esi, 0x100", 
          "lea eax, dword ptr [esi - 1]", 
          "cmp eax, dword ptr [ebp - 0x1c]", 
          "jl 0x2db7c"
        ]
      }, 
      {
        "basicblock_0x2dbc2": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "call 0x2da86", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov edx, eax", 
          "mov dword ptr [ebp - 4], 1", 
          "call 0x1242c", 
          "push dword ptr [ebp - 0x30]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2db73": [
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x3396", 
          "push esi", 
          "push dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ebp - 0x14]", 
          "call dword ptr [0x44b354]", 
          "mov ecx, esi", 
          "sub ecx, eax", 
          "cmp ecx, 1", 
          "jle 0x2db65"
        ]
      }, 
      {
        "basicblock_0x2db7c": [
          "push esi", 
          "push dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ebp - 0x14]", 
          "call dword ptr [0x44b354]", 
          "mov ecx, esi", 
          "sub ecx, eax", 
          "cmp ecx, 1", 
          "jle 0x2db65"
        ]
      }, 
      {
        "basicblock_0x2db95": [
          "mov ecx, dword ptr [ebp - 0x24]", 
          "xor eax, eax", 
          "pop esi", 
          "cmp word ptr [ecx], bx", 
          "je 0x2dbaa"
        ]
      }, 
      {
        "basicblock_0x2db65": [
          "add esi, 0x100", 
          "lea eax, dword ptr [esi - 1]", 
          "cmp eax, dword ptr [ebp - 0x1c]", 
          "jl 0x2db7c"
        ]
      }, 
      {
        "basicblock_0x2dba0": [
          "mov edx, ecx", 
          "inc eax", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2dba2"
        ]
      }, 
      {
        "basicblock_0x2dbaa": [
          "mov word ptr [ecx + eax*2], bx", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 0x20], eax", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x24]", 
          "jmp 0x2dbe1"
        ]
      }, 
      {
        "basicblock_0x2dba2": [
          "inc eax", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2dba2"
        ]
      }, 
      {
        "basicblock_0x2dbe1": [
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x3a785": [
      {
        "basicblock_0x3a785": [
          "push ecx", 
          "and dword ptr [esp], 0", 
          "push esi", 
          "mov esi, ecx", 
          "push 0", 
          "call 0x28673", 
          "mov eax, esi", 
          "pop esi", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x3244": [
      {
        "basicblock_0x3244": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "cmp edi, esi", 
          "je 0x3275"
        ]
      }, 
      {
        "basicblock_0x3250": [
          "mov eax, dword ptr [esi]", 
          "and dword ptr [esi + 4], 0", 
          "and byte ptr [eax], 0", 
          "push dword ptr [edi + 4]", 
          "call 0x34e3", 
          "mov ecx, dword ptr [edi]", 
          "mov eax, dword ptr [esi]", 
          "mov dl, byte ptr [ecx]", 
          "mov byte ptr [eax], dl", 
          "inc eax", 
          "inc ecx", 
          "test dl, dl", 
          "jne 0x3265"
        ]
      }, 
      {
        "basicblock_0x3275": [
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x326f": [
          "mov eax, dword ptr [edi + 4]", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x3265": [
          "mov dl, byte ptr [ecx]", 
          "mov byte ptr [eax], dl", 
          "inc eax", 
          "inc ecx", 
          "test dl, dl", 
          "jne 0x3265"
        ]
      }
    ]
  }, 
  {
    "func_0x2d390": [
      {
        "basicblock_0x2d390": [
          "push esi", 
          "mov esi, ecx", 
          "xor eax, eax", 
          "mov ecx, dword ptr [esi]", 
          "test ecx, ecx", 
          "je 0x2d3a5"
        ]
      }, 
      {
        "basicblock_0x2d39b": [
          "push ecx", 
          "call dword ptr [0x44b004]", 
          "and dword ptr [esi], 0", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2d3a5": [
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2d615": [
      {
        "basicblock_0x2d615": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor eax, eax", 
          "cmp byte ptr [esi], al", 
          "setne al", 
          "mov dword ptr [ebp + 0xc], eax", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "call 0x2d5e9", 
          "cmp dword ptr [ebp + 0xc], 0", 
          "setne cl", 
          "mov byte ptr [esi], cl", 
          "pop esi", 
          "pop ebp", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2c4f5": [
      {
        "basicblock_0x2c4f5": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x20", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "test edi, edi", 
          "mov bl, dl", 
          "je 0x2c5ab"
        ]
      }, 
      {
        "basicblock_0x2c50a": [
          "mov esi, dword ptr [0x44b1f8]", 
          "push 0x45c788", 
          "push edi", 
          "call esi", 
          "mov dword ptr [ebp - 8], eax", 
          "push 0x45c770", 
          "push edi", 
          "call esi", 
          "mov dword ptr [ebp - 0xc], eax", 
          "push 0x45c758", 
          "push edi", 
          "call esi", 
          "xor esi, esi", 
          "mov edi, eax", 
          "cmp dword ptr [ebp - 8], esi", 
          "je 0x2c5ab"
        ]
      }, 
      {
        "basicblock_0x2c5ab": [
          "xor al, al", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2c537": [
          "cmp edi, esi", 
          "je 0x2c5ab"
        ]
      }, 
      {
        "basicblock_0x2c53b": [
          "cmp dword ptr [ebp - 0xc], esi", 
          "je 0x2c5ab"
        ]
      }, 
      {
        "basicblock_0x2c540": [
          "lea eax, dword ptr [ebp - 0x10]", 
          "push eax", 
          "push 0x20", 
          "call dword ptr [0x44b184]", 
          "push eax", 
          "call dword ptr [ebp - 8]", 
          "test eax, eax", 
          "je 0x2c5ab"
        ]
      }, 
      {
        "basicblock_0x2c554": [
          "and byte ptr [ebp - 1], 0", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "push 0x45c740", 
          "push esi", 
          "call dword ptr [ebp - 0xc]", 
          "test eax, eax", 
          "je 0x2c59b"
        ]
      }, 
      {
        "basicblock_0x2c569": [
          "push esi", 
          "push esi", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push esi", 
          "neg bl", 
          "push eax", 
          "push esi", 
          "push dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 0x20], 1", 
          "sbb ebx, ebx", 
          "and ebx, 2", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "call edi", 
          "test eax, eax", 
          "je 0x2c59b"
        ]
      }, 
      {
        "basicblock_0x2c59b": [
          "mov bl, byte ptr [ebp - 1]", 
          "push dword ptr [ebp - 0x10]", 
          "call dword ptr [0x44b1a4]", 
          "mov al, bl", 
          "jmp 0x2c5ad"
        ]
      }, 
      {
        "basicblock_0x2c58b": [
          "call dword ptr [0x44b200]", 
          "mov ebx, eax", 
          "neg ebx", 
          "sbb bl, bl", 
          "inc bl", 
          "jmp 0x2c59e"
        ]
      }, 
      {
        "basicblock_0x2c5ad": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2c59e": [
          "push dword ptr [ebp - 0x10]", 
          "call dword ptr [0x44b1a4]", 
          "mov al, bl", 
          "jmp 0x2c5ad"
        ]
      }
    ]
  }, 
  {
    "func_0x4722": [
      {
        "basicblock_0x4722": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [esi]", 
          "xor ecx, ecx", 
          "mov dword ptr [esi + 4], ecx", 
          "mov dword ptr [ebp - 4], ecx", 
          "mov word ptr [eax], cx", 
          "cmp word ptr [edi], cx", 
          "je 0x474b"
        ]
      }, 
      {
        "basicblock_0x473f": [
          "mov eax, edi", 
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], cx", 
          "jne 0x4741"
        ]
      }, 
      {
        "basicblock_0x474b": [
          "push dword ptr [ebp - 4]", 
          "mov ecx, esi", 
          "call 0x3396", 
          "mov eax, dword ptr [esi]", 
          "mov cx, word ptr [edi]", 
          "lea edx, dword ptr [edi + 2]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "test cx, cx", 
          "je 0x4773"
        ]
      }, 
      {
        "basicblock_0x4741": [
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], cx", 
          "jne 0x4741"
        ]
      }, 
      {
        "basicblock_0x4767": [
          "mov cx, word ptr [edx]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "inc edx", 
          "inc edx", 
          "jmp 0x4762"
        ]
      }, 
      {
        "basicblock_0x4773": [
          "mov eax, dword ptr [ebp - 4]", 
          "pop edi", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x4762": [
          "test cx, cx", 
          "je 0x4773"
        ]
      }
    ]
  }, 
  {
    "func_0x1e80b": [
      {
        "basicblock_0x1e80b": [
          "push dword ptr [ecx]", 
          "mov edx, dword ptr [0x45bf60]", 
          "mov ecx, dword ptr [0x45bf58]", 
          "call 0x1e81f", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2833c": [
      {
        "basicblock_0x2833c": [
          "mov edx, dword ptr [ecx + 8]", 
          "mov eax, dword ptr [ecx]", 
          "sub edx, dword ptr [esp + 4]", 
          "push edx", 
          "push dword ptr [esp + 8]", 
          "call dword ptr [eax + 4]", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x28673": [
      {
        "basicblock_0x28673": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "and dword ptr [ebp - 4], 0", 
          "lea eax, dword ptr [ebp + 0xb]", 
          "push esi", 
          "push eax", 
          "push 0x5f", 
          "mov esi, ecx", 
          "push dword ptr [ebp + 8]", 
          "call 0x285b2", 
          "mov eax, esi", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x1b339": [
      {
        "basicblock_0x1b339": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "cmp edi, dword ptr [esi + 4]", 
          "je 0x1b383"
        ]
      }, 
      {
        "basicblock_0x1b346": [
          "test edi, edi", 
          "push ebx", 
          "jbe 0x1b371"
        ]
      }, 
      {
        "basicblock_0x1b383": [
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1b34b": [
          "push edi", 
          "call 0x284b1", 
          "mov ebx, eax", 
          "mov eax, dword ptr [esi + 4]", 
          "test eax, eax", 
          "pop ecx", 
          "jbe 0x1b373"
        ]
      }, 
      {
        "basicblock_0x1b371": [
          "xor ebx, ebx", 
          "push dword ptr [esi + 8]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [esi + 8], ebx", 
          "mov dword ptr [esi + 4], edi", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1b35b": [
          "cmp eax, edi", 
          "jb 0x1b361"
        ]
      }, 
      {
        "basicblock_0x1b373": [
          "push dword ptr [esi + 8]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [esi + 8], ebx", 
          "mov dword ptr [esi + 4], edi", 
          "pop ebx", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1b35f": [
          "mov eax, edi", 
          "push eax", 
          "push dword ptr [esi + 8]", 
          "push ebx", 
          "call dword ptr [0x44b2b8]", 
          "add esp, 0xc", 
          "jmp 0x1b373"
        ]
      }, 
      {
        "basicblock_0x1b361": [
          "push eax", 
          "push dword ptr [esi + 8]", 
          "push ebx", 
          "call dword ptr [0x44b2b8]", 
          "add esp, 0xc", 
          "jmp 0x1b373"
        ]
      }
    ]
  }, 
  {
    "func_0x2d864": [
      {
        "basicblock_0x2d864": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp + 0xc]", 
          "push eax", 
          "push 0", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b018]", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x20bda": [
      {
        "basicblock_0x20bda": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor edi, edi", 
          "mov ebx, ecx", 
          "xor esi, esi", 
          "mov ecx, ebx", 
          "call 0x20c01", 
          "movzx eax, al", 
          "mov ecx, esi", 
          "add esi, 8", 
          "shl eax, cl", 
          "or edi, eax", 
          "cmp esi, 0x20", 
          "jl 0x20be3"
        ]
      }, 
      {
        "basicblock_0x20bfb": [
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x20be3": [
          "mov ecx, ebx", 
          "call 0x20c01", 
          "movzx eax, al", 
          "mov ecx, esi", 
          "add esi, 8", 
          "shl eax, cl", 
          "or edi, eax", 
          "cmp esi, 0x20", 
          "jl 0x20be3"
        ]
      }
    ]
  }, 
  {
    "func_0x2f8d8": [
      {
        "basicblock_0x2f8d8": [
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "mov esi, edx", 
          "push edi", 
          "call dword ptr [0x44b2c4]", 
          "pop ecx", 
          "mov dword ptr [esi + 4], edi", 
          "lea ecx, dword ptr [eax + eax]", 
          "lea eax, dword ptr [eax + eax + 2]", 
          "mov word ptr [esi], cx", 
          "mov word ptr [esi + 2], ax", 
          "pop edi", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2d5e9": [
      {
        "basicblock_0x2d5e9": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 4]", 
          "and dword ptr [ebp - 8], 0", 
          "push eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "push dword ptr [ebp + 0xc]", 
          "mov dword ptr [ebp - 4], 4", 
          "push eax", 
          "push 0", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b018]", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2d70f": [
      {
        "basicblock_0x2d70f": [
          "mov eax, 0x44792e", 
          "call 0x41b80", 
          "sub esp, 0x2c", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor ebx, ebx", 
          "push edi", 
          "mov edi, ecx", 
          "mov eax, dword ptr [esi]", 
          "mov dword ptr [esi + 4], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "mov word ptr [eax], bx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp + 0xc], ebx", 
          "je 0x2d7a5"
        ]
      }, 
      {
        "basicblock_0x2d73f": [
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x14]", 
          "push ebx", 
          "push eax", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [edi]", 
          "call dword ptr [0x44b01c]", 
          "cmp eax, ebx", 
          "je 0x2d763"
        ]
      }, 
      {
        "basicblock_0x2d7a5": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "call 0x34e3", 
          "cmp dword ptr [ebp + 8], ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "jne 0x2d7c4"
        ]
      }, 
      {
        "basicblock_0x2d758": [
          "cmp eax, 0xea", 
          "jne 0x2d853"
        ]
      }, 
      {
        "basicblock_0x2d763": [
          "mov eax, dword ptr [ebp + 0xc]", 
          "cmp eax, dword ptr [esi + 8]", 
          "jl 0x2d773"
        ]
      }, 
      {
        "basicblock_0x2d7c0": [
          "xor eax, eax", 
          "jmp 0x2d7f5"
        ]
      }, 
      {
        "basicblock_0x2d7c4": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x3091", 
          "mov dword ptr [ebp - 0x10], 1", 
          "lea edx, dword ptr [ebp - 0x2c]", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x3a785", 
          "mov dword ptr [ebp - 0x10], 3", 
          "mov eax, dword ptr [eax]", 
          "mov dword ptr [ebp - 4], 2", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "push ecx", 
          "push eax", 
          "mov ecx, edi", 
          "call 0x2d67e", 
          "test byte ptr [ebp - 0x10], 2", 
          "mov edi, eax", 
          "je 0x2d816"
        ]
      }, 
      {
        "basicblock_0x2d853": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d76b": [
          "push eax", 
          "mov ecx, esi", 
          "call 0x3396", 
          "mov eax, dword ptr [esi]", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "push ecx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "mov ecx, edi", 
          "call 0x2d6ec", 
          "mov edi, eax", 
          "mov eax, dword ptr [esi]", 
          "xor ecx, ecx", 
          "cmp word ptr [eax], bx", 
          "je 0x2d799"
        ]
      }, 
      {
        "basicblock_0x2d773": [
          "mov eax, dword ptr [esi]", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "push ecx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "mov ecx, edi", 
          "call 0x2d6ec", 
          "mov edi, eax", 
          "mov eax, dword ptr [esi]", 
          "xor ecx, ecx", 
          "cmp word ptr [eax], bx", 
          "je 0x2d799"
        ]
      }, 
      {
        "basicblock_0x2d7f5": [
          "lea ecx, dword ptr [ebp - 0x20]", 
          "push ecx", 
          "push eax", 
          "mov ecx, edi", 
          "call 0x2d67e", 
          "test byte ptr [ebp - 0x10], 2", 
          "mov edi, eax", 
          "je 0x2d816"
        ]
      }, 
      {
        "basicblock_0x2d809": [
          "push dword ptr [ebp - 0x38]", 
          "and dword ptr [ebp - 0x10], 0xfffffffd", 
          "call 0x284d8", 
          "pop ecx", 
          "test byte ptr [ebp - 0x10], 1", 
          "mov dword ptr [ebp - 4], ebx", 
          "je 0x2d828"
        ]
      }, 
      {
        "basicblock_0x2d816": [
          "test byte ptr [ebp - 0x10], 1", 
          "mov dword ptr [ebp - 4], ebx", 
          "je 0x2d828"
        ]
      }, 
      {
        "basicblock_0x2d78f": [
          "mov edx, eax", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2d791"
        ]
      }, 
      {
        "basicblock_0x2d799": [
          "mov word ptr [eax + ecx*2], bx", 
          "mov dword ptr [esi + 4], ecx", 
          "jmp 0x2d851"
        ]
      }, 
      {
        "basicblock_0x2d81f": [
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "lea edx, dword ptr [ebp - 0x20]", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "call 0x1242c", 
          "push eax", 
          "mov ecx, esi", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop ecx", 
          "mov eax, edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d828": [
          "lea edx, dword ptr [ebp - 0x20]", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "call 0x1242c", 
          "push eax", 
          "mov ecx, esi", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop ecx", 
          "mov eax, edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d791": [
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2d791"
        ]
      }, 
      {
        "basicblock_0x2d851": [
          "mov eax, edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2794": [
      {
        "basicblock_0x2794": [
          "mov eax, ecx", 
          "xor ecx, ecx", 
          "mov dword ptr [eax + 4], ecx", 
          "mov dword ptr [eax + 8], ecx", 
          "mov dword ptr [eax + 0xc], ecx", 
          "mov ecx, dword ptr [esp + 4]", 
          "mov dword ptr [eax + 0x10], ecx", 
          "mov dword ptr [eax], 0x44b520", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xb1de": [
      {
        "basicblock_0xb1de": [
          "mov eax, 0x44381f", 
          "call 0x41b80", 
          "sub esp, 0x98", 
          "push ebx", 
          "push esi", 
          "mov esi, ecx", 
          "call 0x28327", 
          "xor ebx, ebx", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "push 3", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x3396", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x1d79c", 
          "test al, al", 
          "je 0xb368"
        ]
      }, 
      {
        "basicblock_0xb21f": [
          "push 0x45b5e8", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "call 0x3195", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "push 0x45b604", 
          "call 0x9948", 
          "or dword ptr [ebp - 0x34], 0xffffffff", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], 4", 
          "call 0x284d8", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x7c]", 
          "call 0x3079", 
          "mov byte ptr [ebp - 4], 5", 
          "lea eax, dword ptr [ebp - 0xa4]", 
          "lea ecx, dword ptr [ebp - 0x34]", 
          "push eax", 
          "call 0x2b72e", 
          "test al, al", 
          "je 0xb34b"
        ]
      }, 
      {
        "basicblock_0xb368": [
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb27d": [
          "mov eax, dword ptr [ebp - 0x84]", 
          "shr eax, 4", 
          "test al, 1", 
          "jne 0xb266"
        ]
      }, 
      {
        "basicblock_0xb34b": [
          "push dword ptr [ebp - 0x7c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x30]", 
          "mov byte ptr [ebp - 4], bl", 
          "call 0x284d8", 
          "pop ecx", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x34]", 
          "call 0x2b047", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0xb28a": [
          "lea ecx, dword ptr [ebp - 0x60]", 
          "call 0xae0c", 
          "lea ecx, dword ptr [ebp - 0x4c]", 
          "mov byte ptr [ebp - 4], 6", 
          "call 0x3079", 
          "lea eax, dword ptr [ebp - 0x7c]", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [ebp - 4], 7", 
          "call 0x356a", 
          "lea eax, dword ptr [ebp - 0x40]", 
          "push 4", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x7c]", 
          "mov byte ptr [ebp - 4], 8", 
          "call 0xb5ef", 
          "mov ecx, dword ptr [ebp - 0x40]", 
          "mov edx, 0x45b5f4", 
          "mov byte ptr [ebp - 4], 9", 
          "call 0x282b1", 
          "cmp eax, ebx", 
          "jne 0xb31f"
        ]
      }, 
      {
        "basicblock_0xb266": [
          "lea eax, dword ptr [ebp - 0xa4]", 
          "lea ecx, dword ptr [ebp - 0x34]", 
          "push eax", 
          "call 0x2b72e", 
          "test al, al", 
          "je 0xb34b"
        ]
      }, 
      {
        "basicblock_0xb2d8": [
          "mov eax, dword ptr [ebp - 0x78]", 
          "lea ecx, dword ptr [ebp - 0x7c]", 
          "add eax, -4", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x6c]", 
          "push eax", 
          "call 0x3228", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x4c]", 
          "mov byte ptr [ebp - 4], 0xa", 
          "call 0x312c", 
          "mov byte ptr [ebp - 4], 9", 
          "push dword ptr [ebp - 0x6c]", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x24]", 
          "lea ecx, dword ptr [ebp - 0x60]", 
          "call 0x27bc6", 
          "test al, al", 
          "je 0xb31f"
        ]
      }, 
      {
        "basicblock_0xb31f": [
          "push dword ptr [ebp - 0x40]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x4c]", 
          "mov byte ptr [ebp - 4], 5", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "lea ecx, dword ptr [ebp - 0x60]", 
          "call 0xb616", 
          "jmp 0xb266"
        ]
      }, 
      {
        "basicblock_0xb314": [
          "lea eax, dword ptr [ebp - 0x60]", 
          "mov ecx, esi", 
          "push eax", 
          "call 0xb6e7", 
          "push dword ptr [ebp - 0x40]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x4c]", 
          "mov byte ptr [ebp - 4], 5", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "lea ecx, dword ptr [ebp - 0x60]", 
          "call 0xb616", 
          "jmp 0xb266"
        ]
      }
    ]
  }, 
  {
    "func_0x1e81f": [
      {
        "basicblock_0x1e81f": [
          "mov eax, 0x445fec", 
          "call 0x41b80", 
          "push ecx", 
          "xor eax, eax", 
          "push esi", 
          "mov esi, edx", 
          "mov dword ptr [ebp - 0x10], eax", 
          "push eax", 
          "push eax", 
          "push 0xf003f", 
          "push eax", 
          "push eax", 
          "push ecx", 
          "push 0x80000001", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 4], eax", 
          "call 0x2d30d", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp + 8]", 
          "push esi", 
          "call 0x2d4ca", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x10]", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0xb7e1": [
      {
        "basicblock_0xb7e1": [
          "mov edx, dword ptr [ecx]", 
          "mov eax, dword ptr [esp + 8]", 
          "lea eax, dword ptr [edx + eax*2]", 
          "mov cx, word ptr [eax]", 
          "cmp cx, word ptr [esp + 4]", 
          "je 0xb7fd"
        ]
      }, 
      {
        "basicblock_0xb7f4": [
          "test cx, cx", 
          "je 0xb803"
        ]
      }, 
      {
        "basicblock_0xb7fd": [
          "sub eax, edx", 
          "sar eax, 1", 
          "jmp 0xb806"
        ]
      }, 
      {
        "basicblock_0xb7f9": [
          "inc eax", 
          "inc eax", 
          "jmp 0xb7ea"
        ]
      }, 
      {
        "basicblock_0xb803": [
          "or eax, 0xffffffff", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xb806": [
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xb7ea": [
          "mov cx, word ptr [eax]", 
          "cmp cx, word ptr [esp + 4]", 
          "je 0xb7fd"
        ]
      }
    ]
  }, 
  {
    "func_0x2da86": [
      {
        "basicblock_0x2da86": [
          "mov eax, 0x447970", 
          "call 0x41b80", 
          "sub esp, 0x18", 
          "push ebx", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "push esi", 
          "xor ebx, ebx", 
          "mov dword ptr [ebp - 0x14], edx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x34e3", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov esi, 0x100", 
          "add esi, 0x100", 
          "lea eax, dword ptr [esi - 1]", 
          "cmp eax, dword ptr [ebp - 0x1c]", 
          "jl 0x2dad2"
        ]
      }, 
      {
        "basicblock_0x2dac9": [
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x34e3", 
          "push esi", 
          "push dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ebp - 0x14]", 
          "call dword ptr [0x44b358]", 
          "mov ecx, esi", 
          "sub ecx, eax", 
          "cmp ecx, 1", 
          "jle 0x2dabb"
        ]
      }, 
      {
        "basicblock_0x2dad2": [
          "push esi", 
          "push dword ptr [ebp - 0x24]", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ebp - 0x14]", 
          "call dword ptr [0x44b358]", 
          "mov ecx, esi", 
          "sub ecx, eax", 
          "cmp ecx, 1", 
          "jle 0x2dabb"
        ]
      }, 
      {
        "basicblock_0x2daeb": [
          "mov ecx, dword ptr [ebp - 0x24]", 
          "xor eax, eax", 
          "cmp byte ptr [ecx], bl", 
          "je 0x2dafa"
        ]
      }, 
      {
        "basicblock_0x2dabb": [
          "add esi, 0x100", 
          "lea eax, dword ptr [esi - 1]", 
          "cmp eax, dword ptr [ebp - 0x1c]", 
          "jl 0x2dad2"
        ]
      }, 
      {
        "basicblock_0x2daf4": [
          "inc eax", 
          "cmp byte ptr [eax + ecx], bl", 
          "jne 0x2daf4"
        ]
      }, 
      {
        "basicblock_0x2dafa": [
          "mov byte ptr [eax + ecx], bl", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 0x20], eax", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x1242c": [
      {
        "basicblock_0x1242c": [
          "push ecx", 
          "and dword ptr [esp], 0", 
          "push esi", 
          "mov esi, ecx", 
          "push 0", 
          "call 0x2850b", 
          "mov eax, esi", 
          "pop esi", 
          "pop ecx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x285b2": [
      {
        "basicblock_0x285b2": [
          "mov eax, 0x44715c", 
          "call 0x41b80", 
          "sub esp, 0x18", 
          "push ebx", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "push esi", 
          "xor ebx, ebx", 
          "mov esi, edx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x24], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "call 0x34e3", 
          "mov eax, dword ptr [ebp + 0x10]", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov byte ptr [eax], bl", 
          "mov eax, dword ptr [esi + 4]", 
          "cmp eax, ebx", 
          "je 0x2864b"
        ]
      }, 
      {
        "basicblock_0x285ed": [
          "push edi", 
          "lea edi, dword ptr [eax + eax]", 
          "cmp edi, dword ptr [ebp - 0x1c]", 
          "jl 0x285ff"
        ]
      }, 
      {
        "basicblock_0x2864b": [
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x285f6": [
          "push edi", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x34e3", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "mov eax, dword ptr [esi + 4]", 
          "mov esi, dword ptr [esi]", 
          "push ecx", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "inc edi", 
          "push ecx", 
          "push edi", 
          "push dword ptr [ebp - 0x24]", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b178]", 
          "cmp dword ptr [ebp - 0x14], ebx", 
          "mov edx, dword ptr [ebp + 0x10]", 
          "pop edi", 
          "setne cl", 
          "cmp eax, ebx", 
          "mov byte ptr [edx], cl", 
          "jne 0x28642"
        ]
      }, 
      {
        "basicblock_0x285ff": [
          "lea ecx, dword ptr [ebp - 0x14]", 
          "mov eax, dword ptr [esi + 4]", 
          "mov esi, dword ptr [esi]", 
          "push ecx", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "inc edi", 
          "push ecx", 
          "push edi", 
          "push dword ptr [ebp - 0x24]", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b178]", 
          "cmp dword ptr [ebp - 0x14], ebx", 
          "mov edx, dword ptr [ebp + 0x10]", 
          "pop edi", 
          "setne cl", 
          "cmp eax, ebx", 
          "mov byte ptr [edx], cl", 
          "jne 0x28642"
        ]
      }, 
      {
        "basicblock_0x2862d": [
          "lea eax, dword ptr [ebp + 0x10]", 
          "push 0x44d120", 
          "push eax", 
          "mov dword ptr [ebp + 0x10], 0x44e75", 
          "call 0x41ba0", 
          "mov ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [eax + ecx], bl", 
          "mov dword ptr [ebp - 0x20], eax", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x28642": [
          "mov ecx, dword ptr [ebp - 0x24]", 
          "mov byte ptr [eax + ecx], bl", 
          "mov dword ptr [ebp - 0x20], eax", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x20c01": [
      {
        "basicblock_0x20c01": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "mov edx, dword ptr [ecx + 8]", 
          "cmp edx, dword ptr [ecx + 4]", 
          "jb 0x20c22"
        ]
      }, 
      {
        "basicblock_0x20c0d": [
          "lea eax, dword ptr [ebp - 4]", 
          "push 0x452d38", 
          "push eax", 
          "mov dword ptr [ebp - 4], 0x45c220", 
          "call 0x41ba0", 
          "mov eax, dword ptr [ecx]", 
          "mov al, byte ptr [edx + eax]", 
          "inc edx", 
          "mov dword ptr [ecx + 8], edx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x20c22": [
          "mov eax, dword ptr [ecx]", 
          "mov al, byte ptr [edx + eax]", 
          "inc edx", 
          "mov dword ptr [ecx + 8], edx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2f8fa": [
      {
        "basicblock_0x2f8fa": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x18", 
          "push ebx", 
          "mov dword ptr [ebp - 0xc], ecx", 
          "push 0x45c730", 
          "call dword ptr [0x44b1d4]", 
          "xor ebx, ebx", 
          "cmp eax, ebx", 
          "je 0x2f9b6"
        ]
      }, 
      {
        "basicblock_0x2f919": [
          "push 0x45c850", 
          "push eax", 
          "call dword ptr [0x44b1f8]", 
          "cmp eax, ebx", 
          "mov dword ptr [ebp - 0x18], eax", 
          "je 0x2f9b6"
        ]
      }, 
      {
        "basicblock_0x2f9b6": [
          "xor eax, eax", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2f930": [
          "lea ecx, dword ptr [ebp - 0x14]", 
          "mov dword ptr [ebp - 8], ebx", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 4]", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 8]", 
          "push ebx", 
          "push ecx", 
          "push ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "push dword ptr [ebp - 0xc]", 
          "push ebx", 
          "call eax", 
          "test eax, eax", 
          "jne 0x2f9b6"
        ]
      }, 
      {
        "basicblock_0x2f94e": [
          "call dword ptr [0x44b200]", 
          "cmp eax, 0x7a", 
          "jne 0x2f9b6"
        ]
      }, 
      {
        "basicblock_0x2f959": [
          "push esi", 
          "mov esi, dword ptr [0x44b090]", 
          "push edi", 
          "push dword ptr [ebp - 8]", 
          "push 8", 
          "call esi", 
          "mov edi, dword ptr [0x44b08c]", 
          "push eax", 
          "call edi", 
          "mov dword ptr [ebp - 0x10], eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "lea eax, dword ptr [eax + eax + 2]", 
          "push eax", 
          "push 8", 
          "call esi", 
          "push eax", 
          "call edi", 
          "mov edi, eax", 
          "lea eax, dword ptr [ebp - 0x14]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "push edi", 
          "push eax", 
          "push dword ptr [ebp - 0x10]", 
          "push dword ptr [ebp - 0xc]", 
          "push ebx", 
          "call dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], eax", 
          "push edi", 
          "push ebx", 
          "call esi", 
          "push eax", 
          "call dword ptr [0x44b094]", 
          "cmp dword ptr [ebp - 0x18], ebx", 
          "pop edi", 
          "pop esi", 
          "je 0x2f9b6"
        ]
      }, 
      {
        "basicblock_0x2f9b1": [
          "mov eax, dword ptr [ebp - 0x10]", 
          "jmp 0x2f9b8"
        ]
      }, 
      {
        "basicblock_0x2f9b8": [
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x1d79c": [
      {
        "basicblock_0x1d79c": [
          "mov eax, 0x445d18", 
          "call 0x41b80", 
          "sub esp, 0xc", 
          "push esi", 
          "mov esi, ecx", 
          "mov ecx, dword ptr [0x45d8b0]", 
          "mov edx, esi", 
          "call 0x29ade", 
          "test al, al", 
          "je 0x1d7e5"
        ]
      }, 
      {
        "basicblock_0x1d7bd": [
          "mov eax, dword ptr [esi + 4]", 
          "test eax, eax", 
          "je 0x1d7e5"
        ]
      }, 
      {
        "basicblock_0x1d7e5": [
          "xor al, al", 
          "jmp 0x1d80d"
        ]
      }, 
      {
        "basicblock_0x1d7c4": [
          "mov ecx, dword ptr [esi]", 
          "lea eax, dword ptr [ecx + eax*2 - 2]", 
          "cmp word ptr [eax], 0x5c", 
          "je 0x1d7d8"
        ]
      }, 
      {
        "basicblock_0x1d80d": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x1d7d0": [
          "cmp eax, ecx", 
          "je 0x1d7de"
        ]
      }, 
      {
        "basicblock_0x1d7d8": [
          "sub eax, ecx", 
          "sar eax, 1", 
          "jmp 0x1d7e1"
        ]
      }, 
      {
        "basicblock_0x1d7d4": [
          "dec eax", 
          "dec eax", 
          "jmp 0x1d7ca"
        ]
      }, 
      {
        "basicblock_0x1d7de": [
          "or eax, 0xffffffff", 
          "test eax, eax", 
          "jge 0x1d7e9"
        ]
      }, 
      {
        "basicblock_0x1d7e1": [
          "test eax, eax", 
          "jge 0x1d7e9"
        ]
      }, 
      {
        "basicblock_0x1d7ca": [
          "cmp word ptr [eax], 0x5c", 
          "je 0x1d7d8"
        ]
      }, 
      {
        "basicblock_0x1d7e9": [
          "inc eax", 
          "mov ecx, esi", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push eax", 
          "call 0x3228", 
          "and dword ptr [ebp - 4], 0", 
          "push eax", 
          "mov ecx, esi", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, 1", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x282fe": [
      {
        "basicblock_0x282fe": [
          "mov dword ptr [ecx], 0x44b520", 
          "jmp 0x28309"
        ]
      }, 
      {
        "basicblock_0x28309": [
          "push esi", 
          "mov esi, ecx", 
          "call 0x28327", 
          "push dword ptr [esi + 0xc]", 
          "call 0x284d8", 
          "xor eax, eax", 
          "pop ecx", 
          "mov dword ptr [esi + 4], eax", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [esi + 0xc], eax", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2d30d": [
      {
        "basicblock_0x2d30d": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "lea eax, dword ptr [ebp + 0x1c]", 
          "push esi", 
          "push eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp + 0x1c]", 
          "mov esi, ecx", 
          "push dword ptr [ebp + 0x18]", 
          "push dword ptr [ebp + 0x14]", 
          "push dword ptr [ebp + 0x10]", 
          "push 0", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b024]", 
          "mov ecx, dword ptr [ebp + 0x20]", 
          "test ecx, ecx", 
          "je 0x2d346"
        ]
      }, 
      {
        "basicblock_0x2d341": [
          "mov edx, dword ptr [ebp + 0x1c]", 
          "mov dword ptr [ecx], edx", 
          "test eax, eax", 
          "jne 0x2d356"
        ]
      }, 
      {
        "basicblock_0x2d346": [
          "test eax, eax", 
          "jne 0x2d356"
        ]
      }, 
      {
        "basicblock_0x2d34a": [
          "mov ecx, esi", 
          "call 0x2d390", 
          "mov ecx, dword ptr [ebp - 4]", 
          "mov dword ptr [esi], ecx", 
          "pop esi", 
          "leave ", 
          "ret 0x1c"
        ]
      }, 
      {
        "basicblock_0x2d356": [
          "pop esi", 
          "leave ", 
          "ret 0x1c"
        ]
      }
    ]
  }, 
  {
    "func_0x2d4ca": [
      {
        "basicblock_0x2d4ca": [
          "mov eax, 0x4478e5", 
          "call 0x41b80", 
          "sub esp, 0x34", 
          "push ebx", 
          "push esi", 
          "xor ebx, ebx", 
          "xor esi, esi", 
          "cmp byte ptr [0x45d8b4], bl", 
          "push edi", 
          "mov edi, ecx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "je 0x2d510"
        ]
      }, 
      {
        "basicblock_0x2d4eb": [
          "push dword ptr [ebp + 0xc]", 
          "call dword ptr [0x44b2c4]", 
          "pop ecx", 
          "lea eax, dword ptr [eax + eax + 2]", 
          "push eax", 
          "push dword ptr [ebp + 0xc]", 
          "push 1", 
          "push esi", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [edi]", 
          "call dword ptr [0x44b014]", 
          "jmp 0x2d5bd"
        ]
      }, 
      {
        "basicblock_0x2d510": [
          "cmp dword ptr [ebp + 0xc], esi", 
          "je 0x2d540"
        ]
      }, 
      {
        "basicblock_0x2d5bd": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d515": [
          "push dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ebp - 0x28]", 
          "call 0x3091", 
          "push 1", 
          "pop esi", 
          "mov dword ptr [ebp - 0x10], esi", 
          "and dword ptr [ebp - 4], 0", 
          "lea edx, dword ptr [ebp - 0x28]", 
          "lea ecx, dword ptr [ebp - 0x40]", 
          "call 0x3a785", 
          "push 3", 
          "pop ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "mov dword ptr [ebp - 4], esi", 
          "mov esi, dword ptr [eax]", 
          "xor eax, eax", 
          "cmp dword ptr [ebp + 8], eax", 
          "je 0x2d56f"
        ]
      }, 
      {
        "basicblock_0x2d540": [
          "xor eax, eax", 
          "cmp dword ptr [ebp + 8], eax", 
          "je 0x2d56f"
        ]
      }, 
      {
        "basicblock_0x2d547": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x3091", 
          "or ebx, 4", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "lea edx, dword ptr [ebp - 0x1c]", 
          "lea ecx, dword ptr [ebp - 0x34]", 
          "mov dword ptr [ebp - 4], 2", 
          "call 0x3a785", 
          "mov eax, dword ptr [eax]", 
          "or ebx, 8", 
          "push esi", 
          "push eax", 
          "mov ecx, edi", 
          "call 0x2d4a3", 
          "test bl, 8", 
          "mov esi, eax", 
          "je 0x2d58b"
        ]
      }, 
      {
        "basicblock_0x2d56f": [
          "push esi", 
          "push eax", 
          "mov ecx, edi", 
          "call 0x2d4a3", 
          "test bl, 8", 
          "mov esi, eax", 
          "je 0x2d58b"
        ]
      }, 
      {
        "basicblock_0x2d57f": [
          "push dword ptr [ebp - 0x34]", 
          "and ebx, 0xfffffff7", 
          "call 0x284d8", 
          "pop ecx", 
          "test bl, 4", 
          "je 0x2d59c"
        ]
      }, 
      {
        "basicblock_0x2d58b": [
          "test bl, 4", 
          "je 0x2d59c"
        ]
      }, 
      {
        "basicblock_0x2d590": [
          "push dword ptr [ebp - 0x1c]", 
          "and ebx, 0xfffffffb", 
          "call 0x284d8", 
          "pop ecx", 
          "test bl, 2", 
          "je 0x2d5ad"
        ]
      }, 
      {
        "basicblock_0x2d59c": [
          "test bl, 2", 
          "je 0x2d5ad"
        ]
      }, 
      {
        "basicblock_0x2d5a1": [
          "push dword ptr [ebp - 0x40]", 
          "and ebx, 0xfffffffd", 
          "call 0x284d8", 
          "pop ecx", 
          "test bl, 1", 
          "je 0x2d5bb"
        ]
      }, 
      {
        "basicblock_0x2d5ad": [
          "test bl, 1", 
          "je 0x2d5bb"
        ]
      }, 
      {
        "basicblock_0x2d5b2": [
          "push dword ptr [ebp - 0x28]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d5bb": [
          "mov eax, esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x27bc6": [
      {
        "basicblock_0x27bc6": [
          "mov eax, 0x4470ea", 
          "call 0x41b80", 
          "sub esp, 0x78", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov dword ptr [ebp - 0x14], ecx", 
          "call 0x28327", 
          "or dword ptr [ebp - 0x58], 0xffffffff", 
          "push dword ptr [ebp + 8]", 
          "xor edi, edi", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0x2c145", 
          "test al, al", 
          "jne 0x27bfd"
        ]
      }, 
      {
        "basicblock_0x27bf6": [
          "xor bl, bl", 
          "jmp 0x27e3f"
        ]
      }, 
      {
        "basicblock_0x27bfd": [
          "lea eax, dword ptr [ebp - 0x20]", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "push eax", 
          "call 0x2bedb", 
          "test al, al", 
          "je 0x27bf6"
        ]
      }, 
      {
        "basicblock_0x27e3f": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27c0d": [
          "cmp dword ptr [ebp - 0x1c], edi", 
          "ja 0x27bf6"
        ]
      }, 
      {
        "basicblock_0x27c12": [
          "cmp dword ptr [ebp - 0x20], 0x100000", 
          "ja 0x27bf6"
        ]
      }, 
      {
        "basicblock_0x27c1b": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "pop ebx", 
          "mov dword ptr [ebp - 0x2c], edi", 
          "push ebx", 
          "mov dword ptr [ebp - 0x28], edi", 
          "mov dword ptr [ebp - 0x24], edi", 
          "call 0x34e3", 
          "mov eax, dword ptr [ebp - 0x20]", 
          "mov byte ptr [ebp - 4], 1", 
          "inc eax", 
          "cmp eax, dword ptr [ebp - 0x24]", 
          "jl 0x27c46"
        ]
      }, 
      {
        "basicblock_0x27c3d": [
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x34e3", 
          "mov esi, dword ptr [ebp - 0x2c]", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "push dword ptr [ebp - 0x20]", 
          "push esi", 
          "call 0x2c1a2", 
          "test al, al", 
          "jne 0x27c64"
        ]
      }, 
      {
        "basicblock_0x27c46": [
          "mov esi, dword ptr [ebp - 0x2c]", 
          "lea eax, dword ptr [ebp - 0x18]", 
          "push eax", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "push dword ptr [ebp - 0x20]", 
          "push esi", 
          "call 0x2c1a2", 
          "test al, al", 
          "jne 0x27c64"
        ]
      }, 
      {
        "basicblock_0x27c5d": [
          "xor bl, bl", 
          "jmp 0x27e36"
        ]
      }, 
      {
        "basicblock_0x27c64": [
          "mov eax, dword ptr [ebp - 0x20]", 
          "and byte ptr [eax + esi], 0", 
          "mov ecx, dword ptr [ebp - 0x2c]", 
          "call 0x28078", 
          "mov ecx, dword ptr [ebp - 0x2c]", 
          "and byte ptr [eax + ecx], 0", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "mov dword ptr [ebp - 0x28], eax", 
          "call 0x2bebb", 
          "cmp dword ptr [ebp - 0x28], ebx", 
          "mov dword ptr [ebp - 0x10], edi", 
          "jl 0x27ca4"
        ]
      }, 
      {
        "basicblock_0x27e36": [
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27c8d": [
          "mov eax, dword ptr [ebp - 0x2c]", 
          "cmp byte ptr [eax], 0xef", 
          "jne 0x27ca4"
        ]
      }, 
      {
        "basicblock_0x27ca4": [
          "push 0x45c660", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "call 0x1e0dd", 
          "push dword ptr [ebp - 0x34]", 
          "lea eax, dword ptr [ebp - 0x44]", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov byte ptr [ebp - 4], 2", 
          "push dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0x1e186", 
          "mov edx, dword ptr [ebp - 0x38]", 
          "mov ecx, dword ptr [eax]", 
          "mov byte ptr [ebp - 4], bl", 
          "call 0x28267", 
          "push dword ptr [ebp - 0x44]", 
          "cmp eax, edi", 
          "setne bl", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x284d8", 
          "test bl, bl", 
          "pop ecx", 
          "je 0x27cf1"
        ]
      }, 
      {
        "basicblock_0x27c95": [
          "cmp byte ptr [eax + 1], 0xbb", 
          "jne 0x27ca4"
        ]
      }, 
      {
        "basicblock_0x27cea": [
          "xor bl, bl", 
          "jmp 0x27e2d"
        ]
      }, 
      {
        "basicblock_0x27cf1": [
          "mov eax, dword ptr [ebp - 0x34]", 
          "lea edx, dword ptr [ebp - 0x10]", 
          "add dword ptr [ebp - 0x10], eax", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x289b3", 
          "test al, al", 
          "je 0x27cea"
        ]
      }, 
      {
        "basicblock_0x27c9b": [
          "cmp byte ptr [eax + 2], 0xbf", 
          "jne 0x27ca4"
        ]
      }, 
      {
        "basicblock_0x27e2d": [
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27d06": [
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "call 0x337b", 
          "mov esi, 0x44c4f0", 
          "mov dword ptr [ebp - 0x6c], esi", 
          "push dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x44]", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov byte ptr [ebp - 4], 4", 
          "push eax", 
          "call 0x27fa2", 
          "lea edx, dword ptr [ebp - 0x6c]", 
          "mov ecx, eax", 
          "mov byte ptr [ebp - 4], 5", 
          "call 0x286eb", 
          "push dword ptr [ebp - 0x44]", 
          "mov bl, al", 
          "neg bl", 
          "sbb bl, bl", 
          "mov byte ptr [ebp - 4], 4", 
          "inc bl", 
          "call 0x284d8", 
          "test bl, bl", 
          "pop ecx", 
          "je 0x27d5e"
        ]
      }, 
      {
        "basicblock_0x27ca1": [
          "mov dword ptr [ebp - 0x10], ebx", 
          "push 0x45c660", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "call 0x1e0dd", 
          "push dword ptr [ebp - 0x34]", 
          "lea eax, dword ptr [ebp - 0x44]", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov byte ptr [ebp - 4], 2", 
          "push dword ptr [ebp - 0x10]", 
          "push eax", 
          "call 0x1e186", 
          "mov edx, dword ptr [ebp - 0x38]", 
          "mov ecx, dword ptr [eax]", 
          "mov byte ptr [ebp - 4], bl", 
          "call 0x28267", 
          "push dword ptr [ebp - 0x44]", 
          "cmp eax, edi", 
          "setne bl", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x284d8", 
          "test bl, bl", 
          "pop ecx", 
          "je 0x27cf1"
        ]
      }, 
      {
        "basicblock_0x27d50": [
          "mov dword ptr [ebp - 0x6c], esi", 
          "mov byte ptr [ebp - 4], 6", 
          "xor bl, bl", 
          "jmp 0x27e19"
        ]
      }, 
      {
        "basicblock_0x27d5e": [
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push dword ptr [ecx + 8]", 
          "call 0x28378", 
          "xor ebx, ebx", 
          "cmp dword ptr [ebp - 0x64], edi", 
          "jle 0x27e02"
        ]
      }, 
      {
        "basicblock_0x27e19": [
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "call 0x28327", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x282fe", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27d74": [
          "mov eax, dword ptr [ebp - 0x60]", 
          "lea ecx, dword ptr [ebp - 0x84]", 
          "mov edi, dword ptr [eax + ebx*4]", 
          "push edi", 
          "call 0x30f2", 
          "add edi, 0xc", 
          "lea ecx, dword ptr [ebp - 0x78]", 
          "push edi", 
          "mov byte ptr [ebp - 4], 7", 
          "call 0x30f2", 
          "lea ecx, dword ptr [ebp - 0x44]", 
          "mov byte ptr [ebp - 4], 8", 
          "call 0x3079", 
          "lea edx, dword ptr [ebp - 0x48]", 
          "lea ecx, dword ptr [ebp - 0x84]", 
          "mov byte ptr [ebp - 4], 9", 
          "call 0x27eb9", 
          "test al, al", 
          "je 0x27e5e"
        ]
      }, 
      {
        "basicblock_0x27e02": [
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push edi", 
          "push 0x427f20", 
          "call 0x3748b", 
          "mov dword ptr [ebp - 0x6c], esi", 
          "mov byte ptr [ebp - 4], 0xb", 
          "mov bl, 1", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "call 0x28327", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x282fe", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27dbc": [
          "lea eax, dword ptr [ebp - 0x78]", 
          "lea ecx, dword ptr [ebp - 0x44]", 
          "push eax", 
          "call 0x312c", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "lea eax, dword ptr [ebp - 0x48]", 
          "push eax", 
          "call 0xb88e", 
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x78]", 
          "mov byte ptr [ebp - 4], 4", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x84]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "inc ebx", 
          "cmp ebx, dword ptr [ebp - 0x64]", 
          "jl 0x27d74"
        ]
      }, 
      {
        "basicblock_0x27e5e": [
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x78]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x84]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "mov dword ptr [ebp - 0x6c], esi", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "mov byte ptr [ebp - 4], 0xa", 
          "call 0x28327", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x282fe", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "pop ecx", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "xor al, al", 
          "jmp 0x27e4d"
        ]
      }, 
      {
        "basicblock_0x27e00": [
          "xor edi, edi", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push edi", 
          "push 0x427f20", 
          "call 0x3748b", 
          "mov dword ptr [ebp - 0x6c], esi", 
          "mov byte ptr [ebp - 4], 0xb", 
          "mov bl, 1", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "call 0x28327", 
          "lea ecx, dword ptr [ebp - 0x6c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x282fe", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "pop ecx", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "pop ecx", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "lea ecx, dword ptr [ebp - 0x58]", 
          "call 0x2bd78", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x27e4d": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2850b": [
      {
        "basicblock_0x2850b": [
          "mov eax, 0x447148", 
          "call 0x41b80", 
          "sub esp, 0x14", 
          "push ebx", 
          "push esi", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "push edi", 
          "xor ebx, ebx", 
          "mov esi, edx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "call 0x3396", 
          "mov edi, dword ptr [esi + 4]", 
          "mov dword ptr [ebp - 4], ebx", 
          "cmp edi, ebx", 
          "je 0x28589"
        ]
      }, 
      {
        "basicblock_0x28542": [
          "cmp edi, dword ptr [ebp - 0x18]", 
          "jl 0x28550"
        ]
      }, 
      {
        "basicblock_0x28589": [
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x28547": [
          "push edi", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "call 0x3396", 
          "mov eax, dword ptr [esi + 4]", 
          "mov esi, dword ptr [esi]", 
          "inc edi", 
          "push edi", 
          "push dword ptr [ebp - 0x20]", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b17c]", 
          "cmp eax, ebx", 
          "jne 0x2857f"
        ]
      }, 
      {
        "basicblock_0x28550": [
          "mov eax, dword ptr [esi + 4]", 
          "mov esi, dword ptr [esi]", 
          "inc edi", 
          "push edi", 
          "push dword ptr [ebp - 0x20]", 
          "push eax", 
          "push esi", 
          "push ebx", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b17c]", 
          "cmp eax, ebx", 
          "jne 0x2857f"
        ]
      }, 
      {
        "basicblock_0x2856a": [
          "lea eax, dword ptr [ebp + 8]", 
          "push 0x44d120", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x44e74", 
          "call 0x41ba0", 
          "mov ecx, dword ptr [ebp - 0x20]", 
          "mov word ptr [ecx + eax*2], bx", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2857f": [
          "mov ecx, dword ptr [ebp - 0x20]", 
          "mov word ptr [ecx + eax*2], bx", 
          "mov dword ptr [ebp - 0x1c], eax", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2f8a5": [
      {
        "basicblock_0x2f8a5": [
          "push esi", 
          "mov esi, ecx", 
          "mov eax, dword ptr [esi + 4]", 
          "test eax, eax", 
          "je 0x2f8bf"
        ]
      }, 
      {
        "basicblock_0x2f8af": [
          "push 0x45c83c", 
          "push eax", 
          "call dword ptr [0x44b1f8]", 
          "test eax, eax", 
          "jne 0x2f8c6"
        ]
      }, 
      {
        "basicblock_0x2f8bf": [
          "mov eax, 0xc0000002", 
          "jmp 0x2f8d4"
        ]
      }, 
      {
        "basicblock_0x2f8c6": [
          "push 1", 
          "push dword ptr [esp + 0x10]", 
          "push dword ptr [esp + 0x10]", 
          "push dword ptr [esi]", 
          "call eax", 
          "pop esi", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2f8d4": [
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x29ade": [
      {
        "basicblock_0x29ade": [
          "mov eax, 0x447318", 
          "call 0x41b80", 
          "sub esp, 0x224", 
          "push ebx", 
          "push esi", 
          "mov esi, edx", 
          "xor ebx, ebx", 
          "push edi", 
          "mov edi, ecx", 
          "mov eax, dword ptr [esi]", 
          "mov dword ptr [esi + 4], ebx", 
          "mov word ptr [eax], bx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "je 0x29b3b"
        ]
      }, 
      {
        "basicblock_0x29b07": [
          "lea eax, dword ptr [ebp - 0x230]", 
          "push 0x105", 
          "push eax", 
          "push edi", 
          "call dword ptr [0x44b164]", 
          "cmp eax, 0x104", 
          "ja 0x29b37"
        ]
      }, 
      {
        "basicblock_0x29b3b": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x34e3", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "mov ecx, edi", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x29a94", 
          "test al, al", 
          "je 0x29b8d"
        ]
      }, 
      {
        "basicblock_0x29b21": [
          "cmp eax, ebx", 
          "je 0x29b37"
        ]
      }, 
      {
        "basicblock_0x29b37": [
          "xor al, al", 
          "jmp 0x29b98"
        ]
      }, 
      {
        "basicblock_0x29b5f": [
          "call dword ptr [0x44b1c8]", 
          "neg eax", 
          "sbb eax, eax", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "inc eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x2850b", 
          "push eax", 
          "mov ecx, esi", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov bl, 1", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x29b8d": [
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x29b25": [
          "lea eax, dword ptr [ebp - 0x230]", 
          "mov ecx, esi", 
          "push eax", 
          "call 0x4722", 
          "mov al, 1", 
          "jmp 0x29b98"
        ]
      }, 
      {
        "basicblock_0x29b98": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x3195": [
      {
        "basicblock_0x3195": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov esi, ecx", 
          "xor ecx, ecx", 
          "cmp word ptr [edi], cx", 
          "mov dword ptr [ebp - 4], ecx", 
          "je 0x31b6"
        ]
      }, 
      {
        "basicblock_0x31aa": [
          "mov eax, edi", 
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], cx", 
          "jne 0x31ac"
        ]
      }, 
      {
        "basicblock_0x31b6": [
          "push dword ptr [ebp - 4]", 
          "mov ecx, esi", 
          "call 0x33ea", 
          "mov eax, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi]", 
          "lea edx, dword ptr [edi + 2]", 
          "lea eax, dword ptr [ecx + eax*2]", 
          "mov cx, word ptr [edi]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "test cx, cx", 
          "je 0x31e4"
        ]
      }, 
      {
        "basicblock_0x31ac": [
          "inc dword ptr [ebp - 4]", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], cx", 
          "jne 0x31ac"
        ]
      }, 
      {
        "basicblock_0x31d8": [
          "mov cx, word ptr [edx]", 
          "mov word ptr [eax], cx", 
          "inc eax", 
          "inc eax", 
          "inc edx", 
          "inc edx", 
          "jmp 0x31d3"
        ]
      }, 
      {
        "basicblock_0x31e4": [
          "mov eax, dword ptr [ebp - 4]", 
          "pop edi", 
          "add dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x31d3": [
          "test cx, cx", 
          "je 0x31e4"
        ]
      }
    ]
  }, 
  {
    "func_0x9948": [
      {
        "basicblock_0x9948": [
          "mov eax, 0x443404", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "and dword ptr [ebp - 0x10], 0", 
          "push esi", 
          "mov esi, ecx", 
          "push edx", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x30f2", 
          "push dword ptr [ebp + 8]", 
          "and dword ptr [ebp - 4], 0", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x3195", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, esi", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x3079": [
      {
        "basicblock_0x3079": [
          "push esi", 
          "mov esi, ecx", 
          "xor eax, eax", 
          "push 3", 
          "mov dword ptr [esi], eax", 
          "mov dword ptr [esi + 4], eax", 
          "mov dword ptr [esi + 8], eax", 
          "call 0x3396", 
          "mov eax, esi", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2b72e": [
      {
        "basicblock_0x2b72e": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "push edi", 
          "mov ecx, esi", 
          "call 0x2b70e", 
          "test al, al", 
          "je 0x2b74f"
        ]
      }, 
      {
        "basicblock_0x2b742": [
          "mov ecx, edi", 
          "call 0x2b012", 
          "test al, al", 
          "je 0x2b753"
        ]
      }, 
      {
        "basicblock_0x2b74f": [
          "xor al, al", 
          "jmp 0x2b755"
        ]
      }, 
      {
        "basicblock_0x2b74d": [
          "jmp 0x2b736"
        ]
      }, 
      {
        "basicblock_0x2b753": [
          "mov al, 1", 
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2b755": [
          "pop edi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2b736": [
          "push edi", 
          "mov ecx, esi", 
          "call 0x2b70e", 
          "test al, al", 
          "je 0x2b74f"
        ]
      }
    ]
  }, 
  {
    "func_0xb3c2": [
      {
        "basicblock_0xb3c2": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push esi", 
          "mov esi, edx", 
          "push edi", 
          "lea edx, dword ptr [ebp + 8]", 
          "and word ptr [esi], 0", 
          "and word ptr [ebx], 0", 
          "mov edi, dword ptr [ecx]", 
          "mov ecx, edi", 
          "call 0x28693", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], edx", 
          "cmp edi, ecx", 
          "je 0xb419"
        ]
      }, 
      {
        "basicblock_0xb3ed": [
          "mov word ptr [esi], ax", 
          "mov ax, word ptr [ecx]", 
          "test ax, ax", 
          "jne 0xb3fc"
        ]
      }, 
      {
        "basicblock_0xb419": [
          "xor al, al", 
          "jmp 0xb428"
        ]
      }, 
      {
        "basicblock_0xb3f8": [
          "mov al, 1", 
          "jmp 0xb428"
        ]
      }, 
      {
        "basicblock_0xb3fc": [
          "cmp ax, 0x2d", 
          "jne 0xb419"
        ]
      }, 
      {
        "basicblock_0xb428": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xb402": [
          "lea esi, dword ptr [ecx + 2]", 
          "lea edx, dword ptr [ebp + 8]", 
          "mov ecx, esi", 
          "call 0x28693", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], edx", 
          "cmp esi, ecx", 
          "jne 0xb41d"
        ]
      }, 
      {
        "basicblock_0xb41d": [
          "mov word ptr [ebx], ax", 
          "xor eax, eax", 
          "cmp word ptr [ecx], ax", 
          "sete al", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2c145": [
      {
        "basicblock_0x2c145": [
          "push 0", 
          "push dword ptr [esp + 8]", 
          "call 0x2c124", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x128ef": [
      {
        "basicblock_0x128ef": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "and dword ptr [esi], 0", 
          "and dword ptr [esi + 4], 0", 
          "and dword ptr [esi + 8], 0", 
          "push dword ptr [edi + 4]", 
          "call 0x34e3", 
          "mov ecx, dword ptr [edi]", 
          "mov eax, dword ptr [esi]", 
          "mov dl, byte ptr [ecx]", 
          "mov byte ptr [eax], dl", 
          "inc eax", 
          "inc ecx", 
          "test dl, dl", 
          "jne 0x1290e"
        ]
      }, 
      {
        "basicblock_0x12918": [
          "mov eax, dword ptr [edi + 4]", 
          "pop edi", 
          "mov dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1290e": [
          "mov dl, byte ptr [ecx]", 
          "mov byte ptr [eax], dl", 
          "inc eax", 
          "inc ecx", 
          "test dl, dl", 
          "jne 0x1290e"
        ]
      }
    ]
  }, 
  {
    "func_0x2d67e": [
      {
        "basicblock_0x2d67e": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0xc]", 
          "xor ebx, ebx", 
          "push edi", 
          "mov edi, ecx", 
          "mov eax, dword ptr [esi]", 
          "mov dword ptr [esi + 4], ebx", 
          "mov byte ptr [eax], bl", 
          "lea eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "lea eax, dword ptr [ebp - 4]", 
          "push ebx", 
          "push eax", 
          "push ebx", 
          "mov dword ptr [ebp - 4], ebx", 
          "push dword ptr [ebp + 8]", 
          "mov dword ptr [ebp + 0xc], ebx", 
          "push dword ptr [edi]", 
          "call dword ptr [0x44b018]", 
          "cmp eax, ebx", 
          "je 0x2d6b9"
        ]
      }, 
      {
        "basicblock_0x2d6b2": [
          "cmp eax, 0xea", 
          "jne 0x2d6e5"
        ]
      }, 
      {
        "basicblock_0x2d6b9": [
          "mov eax, dword ptr [ebp + 0xc]", 
          "cmp eax, dword ptr [esi + 8]", 
          "jl 0x2d6c9"
        ]
      }, 
      {
        "basicblock_0x2d6e5": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d6c1": [
          "push eax", 
          "mov ecx, esi", 
          "call 0x34e3", 
          "mov eax, dword ptr [esi]", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "push ecx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "mov ecx, edi", 
          "call 0x2d864", 
          "mov ecx, esi", 
          "mov edi, eax", 
          "call 0x28d27", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2d6c9": [
          "mov eax, dword ptr [esi]", 
          "lea ecx, dword ptr [ebp + 0xc]", 
          "push ecx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "mov ecx, edi", 
          "call 0x2d864", 
          "mov ecx, esi", 
          "mov edi, eax", 
          "call 0x28d27", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2b70e": [
      {
        "basicblock_0x2b70e": [
          "cmp dword ptr [ecx], -1", 
          "je 0x2b71e"
        ]
      }, 
      {
        "basicblock_0x2b713": [
          "push dword ptr [esp + 4]", 
          "call 0x2b382", 
          "jmp 0x2b72b"
        ]
      }, 
      {
        "basicblock_0x2b71e": [
          "push dword ptr [esp + 4]", 
          "mov eax, dword ptr [ecx + 4]", 
          "push eax", 
          "call 0x2b10b", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2b72b": [
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2b047": [
      {
        "basicblock_0x2b047": [
          "push esi", 
          "mov esi, ecx", 
          "mov eax, dword ptr [esi]", 
          "cmp eax, 0xff", 
          "je 0x2b063"
        ]
      }, 
      {
        "basicblock_0x2b051": [
          "push eax", 
          "call dword ptr [0x44b0fc]", 
          "test eax, eax", 
          "jne 0x2b060"
        ]
      }, 
      {
        "basicblock_0x2b063": [
          "mov al, 1", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2b05c": [
          "xor al, al", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2b060": [
          "or dword ptr [esi], 0xffffffff", 
          "mov al, 1", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x28693": [
      {
        "basicblock_0x28693": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "xor ecx, ecx", 
          "mov dword ptr [ebp - 8], edx", 
          "xor edi, edi", 
          "mov ax, word ptr [esi]", 
          "cmp ax, 0x30", 
          "jb 0x286d9"
        ]
      }, 
      {
        "basicblock_0x286ad": [
          "cmp ax, 0x39", 
          "ja 0x286d9"
        ]
      }, 
      {
        "basicblock_0x286d9": [
          "mov eax, dword ptr [ebp - 8]", 
          "test eax, eax", 
          "je 0x286e2"
        ]
      }, 
      {
        "basicblock_0x286b3": [
          "movzx eax, ax", 
          "sub eax, 0x30", 
          "push 0", 
          "cdq ", 
          "mov ebx, eax", 
          "push 0xa", 
          "push edi", 
          "mov dword ptr [ebp - 4], ebx", 
          "push ecx", 
          "mov ebx, edx", 
          "call 0x41e40", 
          "mov ecx, dword ptr [ebp - 4]", 
          "add ecx, eax", 
          "adc ebx, edx", 
          "inc esi", 
          "mov edi, ebx", 
          "inc esi", 
          "jmp 0x286a4"
        ]
      }, 
      {
        "basicblock_0x286e0": [
          "mov dword ptr [eax], esi", 
          "mov edx, edi", 
          "pop edi", 
          "pop esi", 
          "mov eax, ecx", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x286e2": [
          "mov edx, edi", 
          "pop edi", 
          "pop esi", 
          "mov eax, ecx", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x286a4": [
          "mov ax, word ptr [esi]", 
          "cmp ax, 0x30", 
          "jb 0x286d9"
        ]
      }
    ]
  }, 
  {
    "func_0x356a": [
      {
        "basicblock_0x356a": [
          "mov eax, 0x442698", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "and dword ptr [ebp - 0x10], 0", 
          "push esi", 
          "mov esi, ecx", 
          "push edx", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x30f2", 
          "push dword ptr [ebp + 8]", 
          "and dword ptr [ebp - 4], 0", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x31f2", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, esi", 
          "push eax", 
          "call 0x30f2", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov eax, esi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2c124": [
      {
        "basicblock_0x2c124": [
          "mov al, byte ptr [esp + 8]", 
          "push 0x80", 
          "neg al", 
          "sbb eax, eax", 
          "push 3", 
          "and eax, 2", 
          "or al, 1", 
          "push eax", 
          "push dword ptr [esp + 0x10]", 
          "call 0x2c0eb", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2bedb": [
      {
        "basicblock_0x2bedb": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "cmp byte ptr [ecx + 4], 0", 
          "push esi", 
          "je 0x2befc"
        ]
      }, 
      {
        "basicblock_0x2bee6": [
          "cmp byte ptr [ecx + 5], 0", 
          "je 0x2befc"
        ]
      }, 
      {
        "basicblock_0x2befc": [
          "lea eax, dword ptr [ebp - 4]", 
          "push eax", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b0d0]", 
          "mov esi, eax", 
          "cmp esi, 0xff", 
          "jne 0x2bf1d"
        ]
      }, 
      {
        "basicblock_0x2beec": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov edx, dword ptr [ecx + 8]", 
          "mov dword ptr [eax], edx", 
          "mov ecx, dword ptr [ecx + 0xc]", 
          "mov dword ptr [eax + 4], ecx", 
          "jmp 0x2bf3b"
        ]
      }, 
      {
        "basicblock_0x2bf0f": [
          "call dword ptr [0x44b200]", 
          "test eax, eax", 
          "je 0x2bf1d"
        ]
      }, 
      {
        "basicblock_0x2bf1d": [
          "push 1", 
          "push 0", 
          "push 0", 
          "push dword ptr [ebp - 4]", 
          "call 0x41e40", 
          "mov ecx, eax", 
          "xor eax, eax", 
          "add ecx, esi", 
          "adc edx, eax", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov dword ptr [eax], ecx", 
          "mov dword ptr [eax + 4], edx", 
          "mov al, 1", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2bf3b": [
          "mov al, 1", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2bf19": [
          "xor al, al", 
          "jmp 0x2bf3d"
        ]
      }, 
      {
        "basicblock_0x2bf3d": [
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2d6ec": [
      {
        "basicblock_0x2d6ec": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [ebp - 4]", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp + 0xc]", 
          "push eax", 
          "push 0", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b01c]", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x29a94": [
      {
        "basicblock_0x29a94": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x108", 
          "push esi", 
          "mov esi, edx", 
          "push 0x105", 
          "mov eax, dword ptr [esi]", 
          "and dword ptr [esi + 4], 0", 
          "and byte ptr [eax], 0", 
          "lea eax, dword ptr [ebp - 0x108]", 
          "push eax", 
          "push ecx", 
          "call dword ptr [0x44b168]", 
          "cmp eax, 0x104", 
          "ja 0x29ad9"
        ]
      }, 
      {
        "basicblock_0x29ac3": [
          "test eax, eax", 
          "je 0x29ad9"
        ]
      }, 
      {
        "basicblock_0x29ad9": [
          "xor al, al", 
          "pop esi", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x29ac7": [
          "lea eax, dword ptr [ebp - 0x108]", 
          "mov ecx, esi", 
          "push eax", 
          "call 0x1e124", 
          "mov al, 1", 
          "jmp 0x29adb"
        ]
      }, 
      {
        "basicblock_0x29adb": [
          "pop esi", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2b012": [
      {
        "basicblock_0x2b012": [
          "mov eax, dword ptr [ecx + 0x20]", 
          "shr eax, 4", 
          "test al, 1", 
          "je 0x2b044"
        ]
      }, 
      {
        "basicblock_0x2b01c": [
          "mov eax, dword ptr [ecx + 0x2c]", 
          "test eax, eax", 
          "je 0x2b044"
        ]
      }, 
      {
        "basicblock_0x2b044": [
          "xor al, al", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2b023": [
          "mov ecx, dword ptr [ecx + 0x28]", 
          "cmp word ptr [ecx], 0x2e", 
          "jne 0x2b044"
        ]
      }, 
      {
        "basicblock_0x2b02c": [
          "cmp eax, 1", 
          "je 0x2b040"
        ]
      }, 
      {
        "basicblock_0x2b031": [
          "cmp word ptr [ecx + 2], 0x2e", 
          "jne 0x2b03d"
        ]
      }, 
      {
        "basicblock_0x2b040": [
          "push 1", 
          "pop eax", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2b038": [
          "cmp eax, 2", 
          "je 0x2b040"
        ]
      }, 
      {
        "basicblock_0x2b03d": [
          "xor eax, eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xae0c": [
      {
        "basicblock_0xae0c": [
          "mov eax, ecx", 
          "xor ecx, ecx", 
          "mov dword ptr [eax + 4], ecx", 
          "mov dword ptr [eax + 8], ecx", 
          "mov dword ptr [eax + 0xc], ecx", 
          "mov dword ptr [eax + 0x10], 4", 
          "mov dword ptr [eax], 0x44bcec", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xb5ef": [
      {
        "basicblock_0xb5ef": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "mov eax, dword ptr [ecx + 4]", 
          "mov edx, dword ptr [ebp + 0xc]", 
          "and dword ptr [ebp - 4], 0", 
          "cmp edx, eax", 
          "jle 0xb603"
        ]
      }, 
      {
        "basicblock_0xb601": [
          "mov edx, eax", 
          "sub eax, edx", 
          "push edx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "call 0x3434", 
          "mov eax, dword ptr [ebp + 8]", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0xb603": [
          "sub eax, edx", 
          "push edx", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "call 0x3434", 
          "mov eax, dword ptr [ebp + 8]", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x282b1": [
      {
        "basicblock_0x282b1": [
          "push ecx", 
          "push ebx", 
          "push ebp", 
          "push esi", 
          "push edi", 
          "mov ebp, edx", 
          "mov ebx, ecx", 
          "mov si, word ptr [ebx]", 
          "mov di, word ptr [ebp]", 
          "inc ebx", 
          "inc ebx", 
          "inc ebp", 
          "inc ebp", 
          "cmp si, di", 
          "je 0x282e5"
        ]
      }, 
      {
        "basicblock_0x282ca": [
          "mov ecx, esi", 
          "call 0x28086", 
          "mov ecx, edi", 
          "mov dword ptr [esp + 0x10], eax", 
          "call 0x28086", 
          "cmp word ptr [esp + 0x10], ax", 
          "jb 0x282ec"
        ]
      }, 
      {
        "basicblock_0x282e5": [
          "test si, si", 
          "je 0x282f6"
        ]
      }, 
      {
        "basicblock_0x282e3": [
          "ja 0x282f1"
        ]
      }, 
      {
        "basicblock_0x282ec": [
          "or eax, 0xffffffff", 
          "jmp 0x282f8"
        ]
      }, 
      {
        "basicblock_0x282ea": [
          "jmp 0x282ba"
        ]
      }, 
      {
        "basicblock_0x282f6": [
          "xor eax, eax", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "pop ecx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x282f1": [
          "push 1", 
          "pop eax", 
          "jmp 0x282f8"
        ]
      }, 
      {
        "basicblock_0x282f8": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "pop ecx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x282ba": [
          "mov si, word ptr [ebx]", 
          "mov di, word ptr [ebp]", 
          "inc ebx", 
          "inc ebx", 
          "inc ebp", 
          "inc ebp", 
          "cmp si, di", 
          "je 0x282e5"
        ]
      }
    ]
  }, 
  {
    "func_0x31f2": [
      {
        "basicblock_0x31f2": [
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [esp + 0xc]", 
          "mov esi, ecx", 
          "push dword ptr [edi + 4]", 
          "call 0x33ea", 
          "mov eax, dword ptr [esi + 4]", 
          "mov edx, dword ptr [esi]", 
          "mov ecx, dword ptr [edi]", 
          "lea eax, dword ptr [edx + eax*2]", 
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x320c"
        ]
      }, 
      {
        "basicblock_0x321b": [
          "mov eax, dword ptr [edi + 4]", 
          "pop edi", 
          "add dword ptr [esi + 4], eax", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x320c": [
          "mov dx, word ptr [ecx]", 
          "mov word ptr [eax], dx", 
          "inc eax", 
          "inc eax", 
          "inc ecx", 
          "inc ecx", 
          "test dx, dx", 
          "jne 0x320c"
        ]
      }
    ]
  }, 
  {
    "func_0x2c0eb": [
      {
        "basicblock_0x2c0eb": [
          "push ebp", 
          "mov ebp, esp", 
          "push ebx", 
          "push esi", 
          "push dword ptr [ebp + 0x14]", 
          "mov esi, ecx", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push 0x80000000", 
          "push dword ptr [ebp + 8]", 
          "call 0x2bdba", 
          "mov ecx, dword ptr [ebp + 8]", 
          "mov bl, al", 
          "call 0x2bb62", 
          "mov ecx, esi", 
          "mov byte ptr [esi + 4], al", 
          "call 0x2bfc6", 
          "mov al, bl", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 0x10"
        ]
      }
    ]
  }, 
  {
    "func_0x2bd78": [
      {
        "basicblock_0x2bd78": [
          "jmp 0x2bebb"
        ]
      }, 
      {
        "basicblock_0x2bebb": [
          "push esi", 
          "mov esi, ecx", 
          "mov eax, dword ptr [esi]", 
          "cmp eax, 0xff", 
          "je 0x2bed7"
        ]
      }, 
      {
        "basicblock_0x2bec5": [
          "push eax", 
          "call dword ptr [0x44b1a4]", 
          "test eax, eax", 
          "jne 0x2bed4"
        ]
      }, 
      {
        "basicblock_0x2bed7": [
          "mov al, 1", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bed0": [
          "xor al, al", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bed4": [
          "or dword ptr [esi], 0xffffffff", 
          "mov al, 1", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2b382": [
      {
        "basicblock_0x2b382": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x250", 
          "cmp byte ptr [0x45d8b4], 0", 
          "je 0x2b3b7"
        ]
      }, 
      {
        "basicblock_0x2b394": [
          "lea eax, dword ptr [ebp - 0x250]", 
          "push eax", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b0ec]", 
          "test eax, eax", 
          "je 0x2b3ca"
        ]
      }, 
      {
        "basicblock_0x2b3b7": [
          "lea eax, dword ptr [ebp - 0x140]", 
          "push eax", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b0f0]", 
          "test eax, eax", 
          "jne 0x2b3ce"
        ]
      }, 
      {
        "basicblock_0x2b3a7": [
          "mov edx, dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x250]", 
          "call 0x2b222", 
          "jmp 0x2b3dc"
        ]
      }, 
      {
        "basicblock_0x2b3ca": [
          "xor al, al", 
          "jmp 0x2b3de"
        ]
      }, 
      {
        "basicblock_0x2b3ce": [
          "mov edx, dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x140]", 
          "call 0x2b281", 
          "mov al, 1", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2b3dc": [
          "mov al, 1", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x2b3de": [
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2b10b": [
      {
        "basicblock_0x2b10b": [
          "mov eax, 0x4475f4", 
          "call 0x41b80", 
          "sub esp, 0x3b4", 
          "push esi", 
          "mov esi, ecx", 
          "call 0x2b047", 
          "test al, al", 
          "je 0x2b213"
        ]
      }, 
      {
        "basicblock_0x2b12b": [
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "je 0x2b1a6"
        ]
      }, 
      {
        "basicblock_0x2b213": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2b136": [
          "lea eax, dword ptr [ebp - 0x3c0]", 
          "push edi", 
          "mov edi, dword ptr [0x44b0f4]", 
          "push eax", 
          "push dword ptr [ebp + 8]", 
          "call edi", 
          "cmp eax, 0xff", 
          "mov dword ptr [esi], eax", 
          "jne 0x2b190"
        ]
      }, 
      {
        "basicblock_0x2b1a6": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x3091", 
          "mov dword ptr [ebp - 4], 1", 
          "call dword ptr [0x44b1c8]", 
          "neg eax", 
          "sbb eax, eax", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "inc eax", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "push eax", 
          "call 0x28673", 
          "mov eax, dword ptr [eax]", 
          "lea ecx, dword ptr [ebp - 0x170]", 
          "push ecx", 
          "push eax", 
          "call dword ptr [0x44b0f8]", 
          "push dword ptr [ebp - 0x30]", 
          "mov dword ptr [esi], eax", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "call 0x284d8", 
          "cmp dword ptr [esi], -1", 
          "pop ecx", 
          "pop ecx", 
          "je 0x2b20a"
        ]
      }, 
      {
        "basicblock_0x2b150": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x3396", 
          "mov ecx, dword ptr [ebp + 8]", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], ebx", 
          "call 0x2bd5e", 
          "test al, al", 
          "je 0x2b183"
        ]
      }, 
      {
        "basicblock_0x2b190": [
          "cmp dword ptr [esi], -1", 
          "pop edi", 
          "je 0x2b20a"
        ]
      }, 
      {
        "basicblock_0x2b1fc": [
          "mov edx, dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ebp - 0x170]", 
          "call 0x2b281", 
          "xor eax, eax", 
          "cmp dword ptr [esi], -1", 
          "pop ebx", 
          "setne al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2b20a": [
          "xor eax, eax", 
          "cmp dword ptr [esi], -1", 
          "pop ebx", 
          "setne al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x2b175": [
          "lea eax, dword ptr [ebp - 0x3c0]", 
          "push eax", 
          "push dword ptr [ebp - 0x18]", 
          "call edi", 
          "mov dword ptr [esi], eax", 
          "push dword ptr [ebp - 0x18]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "call 0x284d8", 
          "pop ecx", 
          "cmp dword ptr [esi], -1", 
          "pop edi", 
          "je 0x2b20a"
        ]
      }, 
      {
        "basicblock_0x2b183": [
          "push dword ptr [ebp - 0x18]", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "call 0x284d8", 
          "pop ecx", 
          "cmp dword ptr [esi], -1", 
          "pop edi", 
          "je 0x2b20a"
        ]
      }, 
      {
        "basicblock_0x2b196": [
          "mov edx, dword ptr [ebp + 0xc]", 
          "lea ecx, dword ptr [ebp - 0x3c0]", 
          "call 0x2b222", 
          "jmp 0x2b20a"
        ]
      }
    ]
  }, 
  {
    "func_0xb616": [
      {
        "basicblock_0xb616": [
          "mov eax, 0x443888", 
          "call 0x41b80", 
          "push ecx", 
          "push esi", 
          "mov esi, ecx", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [esi], 0x44bcec", 
          "and dword ptr [ebp - 4], 0", 
          "call 0x28327", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "mov ecx, esi", 
          "call 0x282fe", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2d4a3": [
      {
        "basicblock_0x2d4a3": [
          "push esi", 
          "mov esi, ecx", 
          "push dword ptr [esp + 0xc]", 
          "call dword ptr [0x44b190]", 
          "inc eax", 
          "push eax", 
          "push dword ptr [esp + 0x10]", 
          "push 1", 
          "push 0", 
          "push dword ptr [esp + 0x18]", 
          "push dword ptr [esi]", 
          "call dword ptr [0x44b010]", 
          "pop esi", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x2bdba": [
      {
        "basicblock_0x2bdba": [
          "mov eax, 0x447768", 
          "call 0x41b80", 
          "sub esp, 0x24", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp byte ptr [0x45d8b4], bl", 
          "push esi", 
          "mov esi, ecx", 
          "jne 0x2be2c"
        ]
      }, 
      {
        "basicblock_0x2bdd5": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "call 0x3091", 
          "mov dword ptr [ebp - 4], ebx", 
          "call dword ptr [0x44b1c8]", 
          "neg eax", 
          "sbb eax, eax", 
          "lea edx, dword ptr [ebp - 0x24]", 
          "inc eax", 
          "lea ecx, dword ptr [ebp - 0x30]", 
          "push eax", 
          "call 0x28673", 
          "push dword ptr [ebp + 0x18]", 
          "mov eax, dword ptr [eax]", 
          "mov ecx, esi", 
          "mov byte ptr [ebp - 4], 1", 
          "push dword ptr [ebp + 0x14]", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push eax", 
          "call 0x2bd7d", 
          "push dword ptr [ebp - 0x30]", 
          "mov bl, al", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "pop ecx", 
          "jmp 0x2beab"
        ]
      }, 
      {
        "basicblock_0x2be2c": [
          "mov ecx, esi", 
          "call 0x2bebb", 
          "test al, al", 
          "je 0x2beab"
        ]
      }, 
      {
        "basicblock_0x2beab": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x2be37": [
          "push edi", 
          "push ebx", 
          "push dword ptr [ebp + 0x18]", 
          "mov edi, dword ptr [0x44b148]", 
          "push dword ptr [ebp + 0x14]", 
          "push ebx", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call edi", 
          "cmp eax, 0xff", 
          "mov dword ptr [esi], eax", 
          "jne 0x2be9f"
        ]
      }, 
      {
        "basicblock_0x2be58": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x10], ebx", 
          "call 0x3396", 
          "mov ecx, dword ptr [ebp + 8]", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "mov dword ptr [ebp - 4], 2", 
          "call 0x2bd5e", 
          "test al, al", 
          "je 0x2be96"
        ]
      }, 
      {
        "basicblock_0x2be9f": [
          "xor eax, eax", 
          "cmp dword ptr [esi], -1", 
          "mov byte ptr [esi + 4], bl", 
          "pop edi", 
          "setne al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x2be81": [
          "push ebx", 
          "push dword ptr [ebp + 0x18]", 
          "push dword ptr [ebp + 0x14]", 
          "push ebx", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp - 0x18]", 
          "call edi", 
          "mov dword ptr [esi], eax", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "xor eax, eax", 
          "cmp dword ptr [esi], -1", 
          "mov byte ptr [esi + 4], bl", 
          "pop edi", 
          "setne al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x2be96": [
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "xor eax, eax", 
          "cmp dword ptr [esi], -1", 
          "mov byte ptr [esi + 4], bl", 
          "pop edi", 
          "setne al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0x14"
        ]
      }
    ]
  }, 
  {
    "func_0x2bb62": [
      {
        "basicblock_0x2bb62": [
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "cmp word ptr [esi], 0x5c", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bb6c": [
          "cmp word ptr [esi + 2], 0x5c", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bbdf": [
          "xor al, al", 
          "pop edi", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bb73": [
          "cmp word ptr [esi + 4], 0x2e", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bb7a": [
          "cmp word ptr [esi + 6], 0x5c", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bb81": [
          "push esi", 
          "call dword ptr [0x44b2c4]", 
          "mov edi, eax", 
          "pop ecx", 
          "cmp edi, 6", 
          "jne 0x2bb99"
        ]
      }, 
      {
        "basicblock_0x2bb90": [
          "cmp word ptr [esi + 0xa], 0x3a", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bb99": [
          "cmp edi, 0x12", 
          "jl 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bb97": [
          "jmp 0x2bbdb"
        ]
      }, 
      {
        "basicblock_0x2bb9e": [
          "cmp edi, 0x16", 
          "jg 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bbdb": [
          "mov al, 1", 
          "jmp 0x2bbe1"
        ]
      }, 
      {
        "basicblock_0x2bba3": [
          "push 0xd", 
          "lea eax, dword ptr [esi + 8]", 
          "push 0x45c708", 
          "push eax", 
          "call dword ptr [0x44b28c]", 
          "add esp, 0xc", 
          "test eax, eax", 
          "jne 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bbe1": [
          "pop edi", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bbbb": [
          "push 0x11", 
          "pop edx", 
          "cmp edi, edx", 
          "jle 0x2bbdb"
        ]
      }, 
      {
        "basicblock_0x2bbc2": [
          "lea eax, dword ptr [esi + 0x22]", 
          "mov cx, word ptr [eax]", 
          "cmp cx, 0x30", 
          "jb 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bbce": [
          "cmp cx, 0x39", 
          "ja 0x2bbdf"
        ]
      }, 
      {
        "basicblock_0x2bbd4": [
          "inc edx", 
          "inc eax", 
          "inc eax", 
          "cmp edx, edi", 
          "jl 0x2bbc5"
        ]
      }, 
      {
        "basicblock_0x2bbc5": [
          "mov cx, word ptr [eax]", 
          "cmp cx, 0x30", 
          "jb 0x2bbdf"
        ]
      }
    ]
  }, 
  {
    "func_0x2bfc6": [
      {
        "basicblock_0x2bfc6": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0x3c", 
          "push ebx", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "mov eax, dword ptr [esi]", 
          "cmp eax, 0xff", 
          "je 0x2c07e"
        ]
      }, 
      {
        "basicblock_0x2bfdc": [
          "xor ebx, ebx", 
          "cmp byte ptr [esi + 4], bl", 
          "je 0x2c07e"
        ]
      }, 
      {
        "basicblock_0x2c07e": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bfe7": [
          "lea ecx, dword ptr [ebp - 4]", 
          "push ebx", 
          "mov edi, dword ptr [0x44b0c8]", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 0x3c]", 
          "push 0x20", 
          "push ecx", 
          "push ebx", 
          "push ebx", 
          "push 0x74004", 
          "mov dword ptr [esi + 8], ebx", 
          "push eax", 
          "mov byte ptr [esi + 5], 1", 
          "mov dword ptr [esi + 0xc], ebx", 
          "call edi", 
          "test eax, eax", 
          "je 0x2c01e"
        ]
      }, 
      {
        "basicblock_0x2c010": [
          "mov eax, dword ptr [ebp - 0x34]", 
          "mov dword ptr [esi + 8], eax", 
          "mov eax, dword ptr [ebp - 0x30]", 
          "mov dword ptr [esi + 0xc], eax", 
          "jmp 0x2c07e"
        ]
      }, 
      {
        "basicblock_0x2c01e": [
          "lea eax, dword ptr [ebp - 4]", 
          "push ebx", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push 0x18", 
          "push eax", 
          "push ebx", 
          "push ebx", 
          "push 0x70000", 
          "push dword ptr [esi]", 
          "call edi", 
          "test eax, eax", 
          "jne 0x2c055"
        ]
      }, 
      {
        "basicblock_0x2c038": [
          "lea eax, dword ptr [ebp - 4]", 
          "push ebx", 
          "push eax", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push 0x18", 
          "push eax", 
          "push ebx", 
          "push ebx", 
          "push 0x2404c", 
          "push dword ptr [esi]", 
          "call edi", 
          "test eax, eax", 
          "jne 0x2c055"
        ]
      }, 
      {
        "basicblock_0x2c055": [
          "cmp byte ptr [esi + 5], bl", 
          "je 0x2c07e"
        ]
      }, 
      {
        "basicblock_0x2c052": [
          "mov byte ptr [esi + 5], bl", 
          "cmp byte ptr [esi + 5], bl", 
          "je 0x2c07e"
        ]
      }, 
      {
        "basicblock_0x2c05a": [
          "mov eax, dword ptr [ebp - 8]", 
          "push ebx", 
          "mul dword ptr [ebp - 0xc]", 
          "push dword ptr [ebp - 0x10]", 
          "push edx", 
          "push eax", 
          "call 0x41e40", 
          "push dword ptr [ebp - 0x18]", 
          "push dword ptr [ebp - 0x1c]", 
          "push edx", 
          "push eax", 
          "call 0x41e40", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [esi + 0xc], edx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x28d27": [
      {
        "basicblock_0x28d27": [
          "mov eax, dword ptr [ecx]", 
          "xor edx, edx", 
          "cmp byte ptr [eax], dl", 
          "je 0x28d36"
        ]
      }, 
      {
        "basicblock_0x28d2f": [
          "inc edx", 
          "cmp byte ptr [eax + edx], 0", 
          "jne 0x28d2f"
        ]
      }, 
      {
        "basicblock_0x28d36": [
          "and byte ptr [eax + edx], 0", 
          "mov dword ptr [ecx + 4], edx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x28086": [
      {
        "basicblock_0x28086": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "xor ebx, ebx", 
          "cmp cx, bx", 
          "push esi", 
          "mov word ptr [ebp - 2], cx", 
          "jne 0x2809d"
        ]
      }, 
      {
        "basicblock_0x28098": [
          "xor ax, ax", 
          "jmp 0x28103"
        ]
      }, 
      {
        "basicblock_0x2809d": [
          "movzx eax, cx", 
          "push eax", 
          "call dword ptr [0x44b398]", 
          "mov esi, eax", 
          "cmp esi, ebx", 
          "jne 0x28100"
        ]
      }, 
      {
        "basicblock_0x28103": [
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x280ad": [
          "call dword ptr [0x44b200]", 
          "cmp eax, 0x78", 
          "jne 0x28100"
        ]
      }, 
      {
        "basicblock_0x28100": [
          "mov ax, si", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x280b8": [
          "push ebx", 
          "push ebx", 
          "lea eax, dword ptr [ebp - 8]", 
          "push 4", 
          "push eax", 
          "lea eax, dword ptr [ebp - 2]", 
          "push 1", 
          "push eax", 
          "push ebx", 
          "push ebx", 
          "call dword ptr [0x44b178]", 
          "mov esi, eax", 
          "cmp esi, ebx", 
          "je 0x280fa"
        ]
      }, 
      {
        "basicblock_0x280d4": [
          "cmp esi, 4", 
          "jg 0x280fa"
        ]
      }, 
      {
        "basicblock_0x280fa": [
          "mov ax, word ptr [ebp - 2]", 
          "jmp 0x28103"
        ]
      }, 
      {
        "basicblock_0x280d9": [
          "lea eax, dword ptr [ebp - 8]", 
          "mov byte ptr [ebp + esi - 8], bl", 
          "push eax", 
          "call dword ptr [0x44b39c]", 
          "lea eax, dword ptr [ebp - 2]", 
          "push 1", 
          "push eax", 
          "lea eax, dword ptr [ebp - 8]", 
          "push esi", 
          "push eax", 
          "push ebx", 
          "push ebx", 
          "call dword ptr [0x44b17c]", 
          "mov ax, word ptr [ebp - 2]", 
          "jmp 0x28103"
        ]
      }
    ]
  }, 
  {
    "func_0xb6e7": [
      {
        "basicblock_0xb6e7": [
          "mov eax, 0x4438ba", 
          "call 0x41b80", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "mov ebx, ecx", 
          "push 0x20", 
          "call 0x284b1", 
          "mov esi, eax", 
          "pop ecx", 
          "mov dword ptr [ebp - 0x10], esi", 
          "and dword ptr [ebp - 4], 0", 
          "test esi, esi", 
          "je 0xb72a"
        ]
      }, 
      {
        "basicblock_0xb70b": [
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "push edi", 
          "mov ecx, esi", 
          "call 0xb809", 
          "add edi, 0x14", 
          "lea ecx, dword ptr [esi + 0x14]", 
          "push edi", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x30f2", 
          "pop edi", 
          "jmp 0xb72c"
        ]
      }, 
      {
        "basicblock_0xb72a": [
          "xor esi, esi", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, ebx", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xb72c": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, ebx", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x41e40": [
      {
        "basicblock_0x41e40": [
          "mov eax, dword ptr [esp + 8]", 
          "mov ecx, dword ptr [esp + 0x10]", 
          "or ecx, eax", 
          "mov ecx, dword ptr [esp + 0xc]", 
          "jne 0x41e59"
        ]
      }, 
      {
        "basicblock_0x41e50": [
          "mov eax, dword ptr [esp + 4]", 
          "mul ecx", 
          "ret 0x10"
        ]
      }, 
      {
        "basicblock_0x41e59": [
          "push ebx", 
          "mul ecx", 
          "mov ebx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "mul dword ptr [esp + 0x14]", 
          "add ebx, eax", 
          "mov eax, dword ptr [esp + 8]", 
          "mul ecx", 
          "add edx, ebx", 
          "pop ebx", 
          "ret 0x10"
        ]
      }
    ]
  }, 
  {
    "func_0x1e124": [
      {
        "basicblock_0x1e124": [
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [esp + 0xc]", 
          "push edi", 
          "mov edi, ecx", 
          "xor ebx, ebx", 
          "mov eax, dword ptr [edi]", 
          "mov dword ptr [edi + 4], ebx", 
          "and byte ptr [eax], bl", 
          "cmp byte ptr [esi], bl", 
          "je 0x1e141"
        ]
      }, 
      {
        "basicblock_0x1e13a": [
          "inc ebx", 
          "cmp byte ptr [ebx + esi], 0", 
          "jne 0x1e13a"
        ]
      }, 
      {
        "basicblock_0x1e141": [
          "push ebx", 
          "mov ecx, edi", 
          "call 0x34e3", 
          "mov eax, dword ptr [edi]", 
          "mov cl, byte ptr [esi]", 
          "lea edx, dword ptr [esi + 1]", 
          "mov byte ptr [eax], cl", 
          "inc eax", 
          "test cl, cl", 
          "je 0x1e15f"
        ]
      }, 
      {
        "basicblock_0x1e157": [
          "mov cl, byte ptr [edx]", 
          "mov byte ptr [eax], cl", 
          "inc eax", 
          "inc edx", 
          "jmp 0x1e153"
        ]
      }, 
      {
        "basicblock_0x1e15f": [
          "mov dword ptr [edi + 4], ebx", 
          "mov eax, edi", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1e153": [
          "test cl, cl", 
          "je 0x1e15f"
        ]
      }
    ]
  }, 
  {
    "func_0x2bd7d": [
      {
        "basicblock_0x2bd7d": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, ecx", 
          "call 0x2bebb", 
          "test al, al", 
          "je 0x2bdb5"
        ]
      }, 
      {
        "basicblock_0x2bd8c": [
          "push 0", 
          "push dword ptr [ebp + 0x18]", 
          "push dword ptr [ebp + 0x14]", 
          "push 0", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call dword ptr [0x44b0d4]", 
          "and byte ptr [esi + 4], 0", 
          "xor ecx, ecx", 
          "cmp eax, 0xff", 
          "mov dword ptr [esi], eax", 
          "setne cl", 
          "mov al, cl", 
          "pop esi", 
          "pop ebp", 
          "ret 0x14"
        ]
      }, 
      {
        "basicblock_0x2bdb5": [
          "pop esi", 
          "pop ebp", 
          "ret 0x14"
        ]
      }
    ]
  }, 
  {
    "func_0x2c1a2": [
      {
        "basicblock_0x2c1a2": [
          "push ebp", 
          "mov ebp, esp", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "mov edi, ecx", 
          "and dword ptr [esi], 0", 
          "lea eax, dword ptr [ebp + 0x10]", 
          "and dword ptr [ebp + 0x10], 0", 
          "push eax", 
          "mov ecx, edi", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x2c180", 
          "mov ecx, dword ptr [ebp + 0x10]", 
          "add dword ptr [esi], ecx", 
          "test al, al", 
          "je 0x2c1db"
        ]
      }, 
      {
        "basicblock_0x2c1cd": [
          "test ecx, ecx", 
          "je 0x2c1df"
        ]
      }, 
      {
        "basicblock_0x2c1db": [
          "xor al, al", 
          "jmp 0x2c1e1"
        ]
      }, 
      {
        "basicblock_0x2c1d1": [
          "add dword ptr [ebp + 8], ecx", 
          "sub dword ptr [ebp + 0xc], ecx", 
          "je 0x2c1df"
        ]
      }, 
      {
        "basicblock_0x2c1df": [
          "mov al, 1", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x2c1e1": [
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x2c1d9": [
          "jmp 0x2c1af"
        ]
      }, 
      {
        "basicblock_0x2c1af": [
          "lea eax, dword ptr [ebp + 0x10]", 
          "and dword ptr [ebp + 0x10], 0", 
          "push eax", 
          "mov ecx, edi", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x2c180", 
          "mov ecx, dword ptr [ebp + 0x10]", 
          "add dword ptr [esi], ecx", 
          "test al, al", 
          "je 0x2c1db"
        ]
      }
    ]
  }, 
  {
    "func_0x2b222": [
      {
        "basicblock_0x2b222": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "mov esi, edx", 
          "push 1", 
          "mov eax, dword ptr [edi]", 
          "push 0", 
          "mov dword ptr [esi + 0x20], eax", 
          "mov eax, dword ptr [edi + 4]", 
          "mov dword ptr [esi + 8], eax", 
          "mov eax, dword ptr [edi + 8]", 
          "mov dword ptr [esi + 0xc], eax", 
          "mov eax, dword ptr [edi + 0xc]", 
          "mov dword ptr [esi + 0x10], eax", 
          "mov eax, dword ptr [edi + 0x10]", 
          "mov dword ptr [esi + 0x14], eax", 
          "mov eax, dword ptr [edi + 0x14]", 
          "mov dword ptr [esi + 0x18], eax", 
          "mov eax, dword ptr [edi + 0x18]", 
          "push 0", 
          "mov dword ptr [esi + 0x1c], eax", 
          "push dword ptr [edi + 0x1c]", 
          "call 0x41e40", 
          "mov ecx, dword ptr [edi + 0x20]", 
          "xor ebx, ebx", 
          "add eax, ecx", 
          "lea ecx, dword ptr [esi + 0x28]", 
          "adc edx, ebx", 
          "and byte ptr [esi + 0x24], bl", 
          "add edi, 0x2c", 
          "mov dword ptr [esi], eax", 
          "push edi", 
          "mov dword ptr [esi + 4], edx", 
          "call 0x4722", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2b281": [
      {
        "basicblock_0x2b281": [
          "mov eax, 0x447610", 
          "call 0x41b80", 
          "sub esp, 0x18", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "mov esi, edx", 
          "push 1", 
          "mov eax, dword ptr [edi]", 
          "push 0", 
          "mov dword ptr [esi + 0x20], eax", 
          "mov eax, dword ptr [edi + 4]", 
          "mov dword ptr [esi + 8], eax", 
          "mov eax, dword ptr [edi + 8]", 
          "mov dword ptr [esi + 0xc], eax", 
          "mov eax, dword ptr [edi + 0xc]", 
          "mov dword ptr [esi + 0x10], eax", 
          "mov eax, dword ptr [edi + 0x10]", 
          "mov dword ptr [esi + 0x14], eax", 
          "mov eax, dword ptr [edi + 0x14]", 
          "mov dword ptr [esi + 0x18], eax", 
          "mov eax, dword ptr [edi + 0x18]", 
          "push 0", 
          "mov dword ptr [esi + 0x1c], eax", 
          "push dword ptr [edi + 0x1c]", 
          "call 0x41e40", 
          "mov ecx, dword ptr [edi + 0x20]", 
          "xor ebx, ebx", 
          "add eax, ecx", 
          "lea ecx, dword ptr [ebp - 0x18]", 
          "adc edx, ebx", 
          "and byte ptr [esi + 0x24], bl", 
          "add edi, 0x2c", 
          "mov dword ptr [esi], eax", 
          "push edi", 
          "mov dword ptr [esi + 4], edx", 
          "call 0x1e0dd", 
          "and dword ptr [ebp - 4], ebx", 
          "call dword ptr [0x44b1c8]", 
          "neg eax", 
          "sbb eax, eax", 
          "lea edx, dword ptr [ebp - 0x18]", 
          "inc eax", 
          "lea ecx, dword ptr [ebp - 0x24]", 
          "push eax", 
          "call 0x2b331", 
          "push eax", 
          "lea ecx, dword ptr [esi + 0x28]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x24]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x18]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop ecx", 
          "pop edi", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xb809": [
      {
        "basicblock_0xb809": [
          "mov eax, 0x4438cc", 
          "call 0x41b80", 
          "push ecx", 
          "push esi", 
          "mov esi, ecx", 
          "xor eax, eax", 
          "mov dword ptr [ebp - 0x10], esi", 
          "mov dword ptr [esi + 4], eax", 
          "mov dword ptr [esi + 8], eax", 
          "mov dword ptr [esi + 0xc], eax", 
          "mov dword ptr [esi + 0x10], 4", 
          "mov dword ptr [ebp - 4], eax", 
          "mov dword ptr [esi], 0x44bcec", 
          "call 0x28327", 
          "push dword ptr [ebp + 8]", 
          "mov ecx, esi", 
          "call 0xb855", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, esi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x29907": [
      {
        "basicblock_0x29907": [
          "push esi", 
          "mov esi, ecx", 
          "call 0x28350", 
          "mov eax, dword ptr [esi + 8]", 
          "mov ecx, dword ptr [esi + 0xc]", 
          "mov edx, dword ptr [esp + 8]", 
          "mov dword ptr [ecx + eax*4], edx", 
          "mov eax, dword ptr [esi + 8]", 
          "lea ecx, dword ptr [eax + 1]", 
          "mov dword ptr [esi + 8], ecx", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2c180": [
      {
        "basicblock_0x2c180": [
          "push ebp", 
          "mov ebp, esp", 
          "mov eax, dword ptr [0x45c6f4]", 
          "cmp dword ptr [ebp + 0xc], eax", 
          "jbe 0x2c190"
        ]
      }, 
      {
        "basicblock_0x2c18d": [
          "mov dword ptr [ebp + 0xc], eax", 
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x2c153", 
          "pop ebp", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x2c190": [
          "push dword ptr [ebp + 0x10]", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x2c153", 
          "pop ebp", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x28078": [
      {
        "basicblock_0x28078": [
          "xor eax, eax", 
          "cmp byte ptr [ecx], al", 
          "je 0x28085"
        ]
      }, 
      {
        "basicblock_0x2807e": [
          "inc eax", 
          "cmp byte ptr [eax + ecx], 0", 
          "jne 0x2807e"
        ]
      }, 
      {
        "basicblock_0x28085": [
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x2b331": [
      {
        "basicblock_0x2b331": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "push dword ptr [ebp + 8]", 
          "mov esi, ecx", 
          "call 0x2850b", 
          "mov eax, esi", 
          "pop esi", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2bd5e": [
      {
        "basicblock_0x2bd5e": [
          "push esi", 
          "mov esi, edx", 
          "call 0x2bbe4", 
          "test al, al", 
          "je 0x2bd74"
        ]
      }, 
      {
        "basicblock_0x2bd6a": [
          "xor eax, eax", 
          "cmp dword ptr [esi + 4], eax", 
          "pop esi", 
          "setne al", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bd74": [
          "xor al, al", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0xb855": [
      {
        "basicblock_0xb855": [
          "push ebx", 
          "push ebp", 
          "mov ebp, dword ptr [esp + 0xc]", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "mov eax, dword ptr [esi + 8]", 
          "add eax, edi", 
          "push eax", 
          "call 0x28378", 
          "xor ebx, ebx", 
          "test edi, edi", 
          "jle 0xb885"
        ]
      }, 
      {
        "basicblock_0xb873": [
          "mov eax, dword ptr [ebp + 0xc]", 
          "mov ecx, esi", 
          "push dword ptr [eax + ebx*4]", 
          "call 0xb88e", 
          "inc ebx", 
          "cmp ebx, edi", 
          "jl 0xb873"
        ]
      }, 
      {
        "basicblock_0xb885": [
          "mov eax, esi", 
          "pop edi", 
          "pop esi", 
          "pop ebp", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x28350": [
      {
        "basicblock_0x28350": [
          "mov edx, dword ptr [ecx + 4]", 
          "cmp dword ptr [ecx + 8], edx", 
          "jne 0x28377"
        ]
      }, 
      {
        "basicblock_0x28358": [
          "push 1", 
          "cmp edx, 0x40", 
          "pop eax", 
          "jl 0x28367"
        ]
      }, 
      {
        "basicblock_0x28377": [
          "ret "
        ]
      }, 
      {
        "basicblock_0x28360": [
          "mov eax, edx", 
          "shr eax, 2", 
          "jmp 0x2836f"
        ]
      }, 
      {
        "basicblock_0x28367": [
          "cmp edx, 8", 
          "jl 0x2836f"
        ]
      }, 
      {
        "basicblock_0x2836f": [
          "add edx, eax", 
          "push edx", 
          "call 0x28378", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2836c": [
          "push 8", 
          "pop eax", 
          "add edx, eax", 
          "push edx", 
          "call 0x28378", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x1e186": [
      {
        "basicblock_0x1e186": [
          "mov eax, 0x445ecc", 
          "call 0x41b80", 
          "sub esp, 0x10", 
          "push ebx", 
          "push esi", 
          "mov esi, dword ptr [ebp + 0x10]", 
          "push edi", 
          "mov edi, dword ptr [ebp + 0xc]", 
          "mov ebx, ecx", 
          "xor ecx, ecx", 
          "mov eax, dword ptr [ebx + 4]", 
          "lea edx, dword ptr [edi + esi]", 
          "cmp edx, eax", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "jle 0x1e1b1"
        ]
      }, 
      {
        "basicblock_0x1e1ad": [
          "mov esi, eax", 
          "sub esi, edi", 
          "cmp edi, ecx", 
          "jne 0x1e1c4"
        ]
      }, 
      {
        "basicblock_0x1e1b1": [
          "cmp edi, ecx", 
          "jne 0x1e1c4"
        ]
      }, 
      {
        "basicblock_0x1e1b5": [
          "cmp esi, eax", 
          "jne 0x1e1c4"
        ]
      }, 
      {
        "basicblock_0x1e1c4": [
          "mov dword ptr [ebp - 0x1c], ecx", 
          "mov dword ptr [ebp - 0x18], ecx", 
          "mov dword ptr [ebp - 0x14], ecx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x34e3", 
          "and dword ptr [ebp - 4], 0", 
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x1c]", 
          "call 0x34e3", 
          "xor eax, eax", 
          "test esi, esi", 
          "jle 0x1e1fc"
        ]
      }, 
      {
        "basicblock_0x1e1b9": [
          "mov ecx, dword ptr [ebp + 8]", 
          "push ebx", 
          "call 0x128ef", 
          "jmp 0x1e21b"
        ]
      }, 
      {
        "basicblock_0x1e1ea": [
          "mov ecx, dword ptr [ebx]", 
          "mov edx, dword ptr [ebp - 0x1c]", 
          "add ecx, eax", 
          "mov cl, byte ptr [ecx + edi]", 
          "mov byte ptr [eax + edx], cl", 
          "inc eax", 
          "cmp eax, esi", 
          "jl 0x1e1ea"
        ]
      }, 
      {
        "basicblock_0x1e1fc": [
          "mov eax, dword ptr [ebp - 0x1c]", 
          "mov ecx, dword ptr [ebp + 8]", 
          "and byte ptr [eax + esi], 0", 
          "lea eax, dword ptr [ebp - 0x1c]", 
          "push eax", 
          "mov dword ptr [ebp - 0x18], esi", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x1c]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ebp + 8]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x1e21b": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "mov eax, dword ptr [ebp + 8]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x28267": [
      {
        "basicblock_0x28267": [
          "push esi", 
          "mov esi, edx", 
          "mov al, byte ptr [ecx]", 
          "mov dl, byte ptr [esi]", 
          "inc ecx", 
          "inc esi", 
          "cmp al, dl", 
          "jb 0x2827c"
        ]
      }, 
      {
        "basicblock_0x28274": [
          "ja 0x28281"
        ]
      }, 
      {
        "basicblock_0x2827c": [
          "or eax, 0xffffffff", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28276": [
          "test al, al", 
          "je 0x28286"
        ]
      }, 
      {
        "basicblock_0x28281": [
          "push 1", 
          "pop eax", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2827a": [
          "jmp 0x2826a"
        ]
      }, 
      {
        "basicblock_0x28286": [
          "xor eax, eax", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2826a": [
          "mov al, byte ptr [ecx]", 
          "mov dl, byte ptr [esi]", 
          "inc ecx", 
          "inc esi", 
          "cmp al, dl", 
          "jb 0x2827c"
        ]
      }
    ]
  }, 
  {
    "func_0x2bbe4": [
      {
        "basicblock_0x2bbe4": [
          "mov eax, 0x447744", 
          "call 0x41b80", 
          "sub esp, 0x38", 
          "mov eax, dword ptr [edx]", 
          "push ebx", 
          "xor ebx, ebx", 
          "push esi", 
          "mov dword ptr [edx + 4], ebx", 
          "mov word ptr [eax], bx", 
          "mov si, word ptr [ecx]", 
          "push edi", 
          "xor edi, edi", 
          "cmp si, bx", 
          "mov dword ptr [ebp - 0x14], edx", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "je 0x2bc18"
        ]
      }, 
      {
        "basicblock_0x2bc0e": [
          "mov eax, ecx", 
          "inc edi", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], bx", 
          "jne 0x2bc10"
        ]
      }, 
      {
        "basicblock_0x2bc18": [
          "cmp edi, 1", 
          "jl 0x2bd4d"
        ]
      }, 
      {
        "basicblock_0x2bc10": [
          "inc edi", 
          "inc eax", 
          "inc eax", 
          "cmp word ptr [eax], bx", 
          "jne 0x2bc10"
        ]
      }, 
      {
        "basicblock_0x2bc21": [
          "cmp si, 0x5c", 
          "je 0x2bd4d"
        ]
      }, 
      {
        "basicblock_0x2bd4d": [
          "mov al, 1", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bc2b": [
          "cmp si, 0x2e", 
          "jne 0x2bc49"
        ]
      }, 
      {
        "basicblock_0x2bc31": [
          "cmp edi, 1", 
          "je 0x2bd4d"
        ]
      }, 
      {
        "basicblock_0x2bc49": [
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "call 0x3396", 
          "cmp edi, 3", 
          "mov edi, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 4], ebx", 
          "jle 0x2bc8d"
        ]
      }, 
      {
        "basicblock_0x2bc3a": [
          "cmp edi, 2", 
          "jne 0x2bc49"
        ]
      }, 
      {
        "basicblock_0x2bc67": [
          "cmp word ptr [edi + 2], 0x3a", 
          "jne 0x2bc8d"
        ]
      }, 
      {
        "basicblock_0x2bc8d": [
          "mov esi, 0x105", 
          "cmp dword ptr [ebp - 0x18], esi", 
          "jg 0x2bca0"
        ]
      }, 
      {
        "basicblock_0x2bc3f": [
          "cmp word ptr [ecx + 2], si", 
          "je 0x2bd4d"
        ]
      }, 
      {
        "basicblock_0x2bc6e": [
          "cmp word ptr [edi + 4], 0x5c", 
          "jne 0x2bc8d"
        ]
      }, 
      {
        "basicblock_0x2bc97": [
          "push esi", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "call 0x3396", 
          "push dword ptr [ebp - 0x20]", 
          "push esi", 
          "call dword ptr [0x44b110]", 
          "mov esi, dword ptr [ebp - 0x20]", 
          "xor ecx, ecx", 
          "cmp word ptr [esi], bx", 
          "je 0x2bcbe"
        ]
      }, 
      {
        "basicblock_0x2bca0": [
          "push dword ptr [ebp - 0x20]", 
          "push esi", 
          "call dword ptr [0x44b110]", 
          "mov esi, dword ptr [ebp - 0x20]", 
          "xor ecx, ecx", 
          "cmp word ptr [esi], bx", 
          "je 0x2bcbe"
        ]
      }, 
      {
        "basicblock_0x2bc75": [
          "cmp si, 0x61", 
          "jb 0x2bc81"
        ]
      }, 
      {
        "basicblock_0x2bcb4": [
          "mov edx, esi", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2bcb6"
        ]
      }, 
      {
        "basicblock_0x2bcbe": [
          "lea edx, dword ptr [ecx + ecx]", 
          "cmp eax, ebx", 
          "mov word ptr [edx + esi], bx", 
          "mov dword ptr [ebp - 0x1c], ecx", 
          "je 0x2bd40"
        ]
      }, 
      {
        "basicblock_0x2bc7b": [
          "cmp si, 0x7a", 
          "jbe 0x2bce8"
        ]
      }, 
      {
        "basicblock_0x2bc81": [
          "cmp si, 0x41", 
          "jb 0x2bc8d"
        ]
      }, 
      {
        "basicblock_0x2bcb6": [
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "cmp word ptr [edx], bx", 
          "jne 0x2bcb6"
        ]
      }, 
      {
        "basicblock_0x2bccc": [
          "cmp eax, 0x104", 
          "ja 0x2bd40"
        ]
      }, 
      {
        "basicblock_0x2bd40": [
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "jmp 0x2bd4f"
        ]
      }, 
      {
        "basicblock_0x2bce8": [
          "push 0x45c724", 
          "lea ecx, dword ptr [ebp - 0x44]", 
          "call 0x3091", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov edx, eax", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x356a", 
          "push edi", 
          "mov edx, eax", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x9948", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push eax", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "mov bl, 1", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "jmp 0x2bd4f"
        ]
      }, 
      {
        "basicblock_0x2bc87": [
          "cmp si, 0x5a", 
          "jbe 0x2bce8"
        ]
      }, 
      {
        "basicblock_0x2bcd3": [
          "mov eax, dword ptr [ebp - 0x20]", 
          "cmp word ptr [edx + eax - 2], 0x5c", 
          "je 0x2bce8"
        ]
      }, 
      {
        "basicblock_0x2bd4f": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2bcde": [
          "push 0x5c", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "call 0x316a", 
          "push 0x45c724", 
          "lea ecx, dword ptr [ebp - 0x44]", 
          "call 0x3091", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov edx, eax", 
          "push ecx", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x356a", 
          "push edi", 
          "mov edx, eax", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x9948", 
          "mov ecx, dword ptr [ebp - 0x14]", 
          "push eax", 
          "mov byte ptr [ebp - 4], 3", 
          "call 0x312c", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "mov bl, 1", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov al, bl", 
          "jmp 0x2bd4f"
        ]
      }
    ]
  }, 
  {
    "func_0x28378": [
      {
        "basicblock_0x28378": [
          "push ebp", 
          "mov ebp, esp", 
          "push ebx", 
          "mov ebx, dword ptr [ebp + 8]", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "cmp ebx, dword ptr [esi + 4]", 
          "je 0x28423"
        ]
      }, 
      {
        "basicblock_0x2838c": [
          "cmp ebx, 0x80000000", 
          "jb 0x283a9"
        ]
      }, 
      {
        "basicblock_0x28423": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x28394": [
          "lea eax, dword ptr [ebp + 8]", 
          "push 0x44d120", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x100ec1", 
          "call 0x41ba0", 
          "mov edi, dword ptr [esi + 0x10]", 
          "xor edx, edx", 
          "mov ecx, edi", 
          "imul ecx, ebx", 
          "mov eax, ecx", 
          "div edi", 
          "cmp eax, ebx", 
          "je 0x283d0"
        ]
      }, 
      {
        "basicblock_0x283a9": [
          "mov edi, dword ptr [esi + 0x10]", 
          "xor edx, edx", 
          "mov ecx, edi", 
          "imul ecx, ebx", 
          "mov eax, ecx", 
          "div edi", 
          "cmp eax, ebx", 
          "je 0x283d0"
        ]
      }, 
      {
        "basicblock_0x283bb": [
          "lea eax, dword ptr [ebp + 8]", 
          "push 0x44d120", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x100ec2", 
          "call 0x41ba0", 
          "xor edi, edi", 
          "test ecx, ecx", 
          "jbe 0x28414"
        ]
      }, 
      {
        "basicblock_0x283d0": [
          "xor edi, edi", 
          "test ecx, ecx", 
          "jbe 0x28414"
        ]
      }, 
      {
        "basicblock_0x283d6": [
          "push ecx", 
          "call 0x284b1", 
          "mov edi, eax", 
          "pop ecx", 
          "test edi, edi", 
          "jne 0x283f8"
        ]
      }, 
      {
        "basicblock_0x28414": [
          "push dword ptr [esi + 0xc]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [esi + 0xc], edi", 
          "mov dword ptr [esi + 4], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x283e3": [
          "lea eax, dword ptr [ebp + 8]", 
          "push 0x44d120", 
          "push eax", 
          "mov dword ptr [ebp + 8], 0x100ec3", 
          "call 0x41ba0", 
          "mov eax, dword ptr [esi + 8]", 
          "cmp eax, ebx", 
          "jl 0x28401"
        ]
      }, 
      {
        "basicblock_0x283f8": [
          "mov eax, dword ptr [esi + 8]", 
          "cmp eax, ebx", 
          "jl 0x28401"
        ]
      }, 
      {
        "basicblock_0x283ff": [
          "mov eax, ebx", 
          "mov ecx, dword ptr [esi + 0x10]", 
          "imul ecx, eax", 
          "push ecx", 
          "push dword ptr [esi + 0xc]", 
          "push edi", 
          "call 0x41d88", 
          "add esp, 0xc", 
          "push dword ptr [esi + 0xc]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [esi + 0xc], edi", 
          "mov dword ptr [esi + 4], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x28401": [
          "mov ecx, dword ptr [esi + 0x10]", 
          "imul ecx, eax", 
          "push ecx", 
          "push dword ptr [esi + 0xc]", 
          "push edi", 
          "call 0x41d88", 
          "add esp, 0xc", 
          "push dword ptr [esi + 0xc]", 
          "call 0x284d8", 
          "pop ecx", 
          "mov dword ptr [esi + 0xc], edi", 
          "mov dword ptr [esi + 4], ebx", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "pop ebp", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x2c153": [
      {
        "basicblock_0x2c153": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "lea eax, dword ptr [ebp - 4]", 
          "push 0", 
          "push eax", 
          "and dword ptr [ebp - 4], 0", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "push dword ptr [ecx]", 
          "call dword ptr [0x44b0c4]", 
          "mov ecx, dword ptr [ebp + 0x10]", 
          "mov edx, dword ptr [ebp - 4]", 
          "test eax, eax", 
          "mov dword ptr [ecx], edx", 
          "setne al", 
          "leave ", 
          "ret 0xc"
        ]
      }
    ]
  }, 
  {
    "func_0x289b3": [
      {
        "basicblock_0x289b3": [
          "mov eax, dword ptr [edx]", 
          "push esi", 
          "cmp eax, dword ptr [ecx + 4]", 
          "jge 0x289ce"
        ]
      }, 
      {
        "basicblock_0x289bb": [
          "mov eax, dword ptr [edx]", 
          "mov esi, dword ptr [ecx]", 
          "cmp byte ptr [esi + eax], 0xa", 
          "je 0x289ca"
        ]
      }, 
      {
        "basicblock_0x289ce": [
          "xor al, al", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x289c5": [
          "inc eax", 
          "mov dword ptr [edx], eax", 
          "jmp 0x289b6"
        ]
      }, 
      {
        "basicblock_0x289ca": [
          "mov al, 1", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x289b6": [
          "cmp eax, dword ptr [ecx + 4]", 
          "jge 0x289ce"
        ]
      }
    ]
  }, 
  {
    "func_0xb88e": [
      {
        "basicblock_0xb88e": [
          "mov eax, 0x4438e2", 
          "call 0x41b80", 
          "push ecx", 
          "push esi", 
          "push edi", 
          "mov edi, ecx", 
          "push 0x10", 
          "call 0x284b1", 
          "mov esi, eax", 
          "pop ecx", 
          "mov dword ptr [ebp - 0x10], esi", 
          "and dword ptr [ebp - 4], 0", 
          "test esi, esi", 
          "je 0xb8c7"
        ]
      }, 
      {
        "basicblock_0xb8b2": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov ecx, dword ptr [eax]", 
          "add eax, 4", 
          "mov dword ptr [esi], ecx", 
          "push eax", 
          "lea ecx, dword ptr [esi + 4]", 
          "call 0x30f2", 
          "jmp 0xb8c9"
        ]
      }, 
      {
        "basicblock_0xb8c7": [
          "xor esi, esi", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, edi", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0xb8c9": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, edi", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x337b": [
      {
        "basicblock_0x337b": [
          "mov eax, ecx", 
          "xor ecx, ecx", 
          "mov dword ptr [eax + 4], ecx", 
          "mov dword ptr [eax + 8], ecx", 
          "mov dword ptr [eax + 0xc], ecx", 
          "mov dword ptr [eax + 0x10], 4", 
          "mov dword ptr [eax], 0x44b5b8", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x27fa2": [
      {
        "basicblock_0x27fa2": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "mov eax, dword ptr [ecx + 4]", 
          "and dword ptr [ebp - 4], 0", 
          "sub eax, dword ptr [ebp + 0xc]", 
          "push eax", 
          "push dword ptr [ebp + 0xc]", 
          "push dword ptr [ebp + 8]", 
          "call 0x1e186", 
          "mov eax, dword ptr [ebp + 8]", 
          "leave ", 
          "ret 8"
        ]
      }
    ]
  }, 
  {
    "func_0x286eb": [
      {
        "basicblock_0x286eb": [
          "mov eax, 0x447188", 
          "call 0x41b80", 
          "sub esp, 0x44", 
          "push esi", 
          "mov esi, ecx", 
          "push edi", 
          "mov ecx, edx", 
          "mov dword ptr [ebp - 0x20], edx", 
          "call 0x28327", 
          "xor edi, edi", 
          "mov dword ptr [ebp - 0x10], edi", 
          "lea edx, dword ptr [ebp - 0x10]", 
          "mov ecx, esi", 
          "call 0x28973", 
          "test al, al", 
          "je 0x28879"
        ]
      }, 
      {
        "basicblock_0x2871d": [
          "lea ecx, dword ptr [ebp - 0x50]", 
          "call 0x3079", 
          "lea ecx, dword ptr [ebp - 0x44]", 
          "mov dword ptr [ebp - 4], edi", 
          "call 0x3079", 
          "mov eax, dword ptr [esi]", 
          "lea ecx, dword ptr [ebp - 0x14]", 
          "push ecx", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov dword ptr [ebp - 4], 1", 
          "lea edx, dword ptr [eax + ecx]", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "call 0x288cd", 
          "lea edx, dword ptr [ebp - 0x50]", 
          "lea ecx, dword ptr [ebp - 0x38]", 
          "mov byte ptr [ebp - 4], 2", 
          "call 0x28a33", 
          "test al, al", 
          "je 0x2887d"
        ]
      }, 
      {
        "basicblock_0x28879": [
          "mov al, 1", 
          "jmp 0x288bf"
        ]
      }, 
      {
        "basicblock_0x28762": [
          "mov eax, dword ptr [ebp - 0x14]", 
          "cmp eax, edi", 
          "je 0x2887d"
        ]
      }, 
      {
        "basicblock_0x2887d": [
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x50]", 
          "call 0x284d8", 
          "add esp, 0xc", 
          "jmp 0x288bd"
        ]
      }, 
      {
        "basicblock_0x288bf": [
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2876d": [
          "add dword ptr [ebp - 0x10], eax", 
          "lea edx, dword ptr [ebp - 0x10]", 
          "mov ecx, esi", 
          "call 0x28973", 
          "test al, al", 
          "je 0x2887d"
        ]
      }, 
      {
        "basicblock_0x288bd": [
          "xor al, al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28782": [
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "cmp byte ptr [eax + ecx], 0x3d", 
          "jne 0x2887d"
        ]
      }, 
      {
        "basicblock_0x28791": [
          "inc dword ptr [ebp - 0x10]", 
          "lea edx, dword ptr [ebp - 0x10]", 
          "mov ecx, esi", 
          "call 0x28973", 
          "test al, al", 
          "je 0x2887d"
        ]
      }, 
      {
        "basicblock_0x287a6": [
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "cmp byte ptr [eax + ecx], 0x22", 
          "jne 0x2887d"
        ]
      }, 
      {
        "basicblock_0x287b5": [
          "inc dword ptr [ebp - 0x10]", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "mov dword ptr [ebp - 0x2c], edi", 
          "mov dword ptr [ebp - 0x28], edi", 
          "mov dword ptr [ebp - 0x24], edi", 
          "call 0x34e3", 
          "mov byte ptr [ebp - 4], 3", 
          "mov eax, dword ptr [esi + 4]", 
          "cmp dword ptr [ebp - 0x10], eax", 
          "jge 0x2889a"
        ]
      }, 
      {
        "basicblock_0x287db": [
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov cl, byte ptr [eax + ecx]", 
          "inc dword ptr [ebp - 0x10]", 
          "cmp cl, 0x22", 
          "mov byte ptr [ebp - 0x1c], cl", 
          "je 0x2883b"
        ]
      }, 
      {
        "basicblock_0x2889a": [
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x44]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x50]", 
          "call 0x284d8", 
          "add esp, 0x10", 
          "xor al, al", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x287ee": [
          "cmp cl, 0x5c", 
          "jne 0x28836"
        ]
      }, 
      {
        "basicblock_0x2883b": [
          "lea edx, dword ptr [ebp - 0x44]", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x28a33", 
          "test al, al", 
          "je 0x2889a"
        ]
      }, 
      {
        "basicblock_0x287f3": [
          "mov ecx, dword ptr [ebp - 0x10]", 
          "mov al, byte ptr [eax + ecx]", 
          "inc dword ptr [ebp - 0x10]", 
          "cmp al, 0x22", 
          "mov byte ptr [ebp - 0x18], al", 
          "je 0x2882a"
        ]
      }, 
      {
        "basicblock_0x28836": [
          "push dword ptr [ebp - 0x1c]", 
          "jmp 0x2882c"
        ]
      }, 
      {
        "basicblock_0x2884a": [
          "mov ecx, dword ptr [ebp - 0x20]", 
          "lea eax, dword ptr [ebp - 0x50]", 
          "push eax", 
          "call 0x289d2", 
          "push dword ptr [ebp - 0x2c]", 
          "call 0x284d8", 
          "push dword ptr [ebp - 0x38]", 
          "call 0x284d8", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "pop ecx", 
          "pop ecx", 
          "lea ecx, dword ptr [ebp - 0x50]", 
          "call 0x9444", 
          "jmp 0x2870b"
        ]
      }, 
      {
        "basicblock_0x28803": [
          "cmp al, 0x5c", 
          "je 0x28826"
        ]
      }, 
      {
        "basicblock_0x2882a": [
          "push 0x22", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x12848", 
          "jmp 0x287cf"
        ]
      }, 
      {
        "basicblock_0x2882c": [
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x12848", 
          "jmp 0x287cf"
        ]
      }, 
      {
        "basicblock_0x2870b": [
          "lea edx, dword ptr [ebp - 0x10]", 
          "mov ecx, esi", 
          "call 0x28973", 
          "test al, al", 
          "je 0x28879"
        ]
      }, 
      {
        "basicblock_0x28807": [
          "cmp al, 0x6e", 
          "je 0x28822"
        ]
      }, 
      {
        "basicblock_0x28826": [
          "push 0x5c", 
          "jmp 0x2882c"
        ]
      }, 
      {
        "basicblock_0x287cf": [
          "mov eax, dword ptr [esi + 4]", 
          "cmp dword ptr [ebp - 0x10], eax", 
          "jge 0x2889a"
        ]
      }, 
      {
        "basicblock_0x2880b": [
          "cmp al, 0x74", 
          "je 0x2881e"
        ]
      }, 
      {
        "basicblock_0x28822": [
          "push 0xa", 
          "jmp 0x2882c"
        ]
      }, 
      {
        "basicblock_0x2880f": [
          "push 0x5c", 
          "lea ecx, dword ptr [ebp - 0x2c]", 
          "call 0x12848", 
          "push dword ptr [ebp - 0x18]", 
          "jmp 0x2882c"
        ]
      }, 
      {
        "basicblock_0x2881e": [
          "push 9", 
          "jmp 0x2882c"
        ]
      }
    ]
  }, 
  {
    "func_0x28973": [
      {
        "basicblock_0x28973": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov esi, edx", 
          "mov edi, ecx", 
          "mov eax, dword ptr [esi]", 
          "cmp eax, dword ptr [edi + 4]", 
          "jge 0x289ad"
        ]
      }, 
      {
        "basicblock_0x28981": [
          "mov eax, dword ptr [edi]", 
          "mov ecx, dword ptr [esi]", 
          "mov bl, byte ptr [eax + ecx]", 
          "mov cl, bl", 
          "call 0x28954", 
          "test al, al", 
          "jne 0x289a5"
        ]
      }, 
      {
        "basicblock_0x289ad": [
          "xor al, al", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28993": [
          "cmp bl, 0x3b", 
          "jne 0x289a9"
        ]
      }, 
      {
        "basicblock_0x289a5": [
          "inc dword ptr [esi]", 
          "jmp 0x2897a"
        ]
      }, 
      {
        "basicblock_0x28998": [
          "mov edx, esi", 
          "mov ecx, edi", 
          "call 0x289b3", 
          "test al, al", 
          "je 0x289ad"
        ]
      }, 
      {
        "basicblock_0x289a9": [
          "mov al, 1", 
          "jmp 0x289af"
        ]
      }, 
      {
        "basicblock_0x2897a": [
          "mov eax, dword ptr [esi]", 
          "cmp eax, dword ptr [edi + 4]", 
          "jge 0x289ad"
        ]
      }, 
      {
        "basicblock_0x289af": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x288cd": [
      {
        "basicblock_0x288cd": [
          "mov eax, 0x44719c", 
          "call 0x41b80", 
          "sub esp, 0x14", 
          "push ebx", 
          "push esi", 
          "mov dword ptr [ebp - 0x10], ecx", 
          "push edi", 
          "xor ebx, ebx", 
          "mov edi, edx", 
          "push 3", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "mov dword ptr [ebp - 0x14], ebx", 
          "mov dword ptr [ebp - 0x20], ebx", 
          "mov dword ptr [ebp - 0x1c], ebx", 
          "mov dword ptr [ebp - 0x18], ebx", 
          "call 0x34e3", 
          "mov esi, dword ptr [ebp + 8]", 
          "mov dword ptr [ebp - 4], ebx", 
          "mov dword ptr [esi], ebx", 
          "mov bl, byte ptr [edi]", 
          "mov cl, bl", 
          "mov byte ptr [ebp + 8], bl", 
          "call 0x28954", 
          "test al, al", 
          "jne 0x2892b"
        ]
      }, 
      {
        "basicblock_0x28912": [
          "cmp bl, 0x3d", 
          "je 0x2892b"
        ]
      }, 
      {
        "basicblock_0x2892b": [
          "mov ecx, dword ptr [ebp - 0x10]", 
          "lea eax, dword ptr [ebp - 0x20]", 
          "push eax", 
          "call 0x128ef", 
          "push dword ptr [ebp - 0x20]", 
          "call 0x284d8", 
          "mov eax, dword ptr [ebp - 0x10]", 
          "pop ecx", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x28917": [
          "push dword ptr [ebp + 8]", 
          "lea ecx, dword ptr [ebp - 0x20]", 
          "call 0x12848", 
          "inc dword ptr [esi]", 
          "mov eax, dword ptr [esi]", 
          "mov bl, byte ptr [eax + edi]", 
          "jmp 0x28904"
        ]
      }, 
      {
        "basicblock_0x28904": [
          "mov cl, bl", 
          "mov byte ptr [ebp + 8], bl", 
          "call 0x28954", 
          "test al, al", 
          "jne 0x2892b"
        ]
      }
    ]
  }, 
  {
    "func_0x28a33": [
      {
        "basicblock_0x28a33": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov esi, edx", 
          "mov edi, ecx", 
          "xor eax, eax", 
          "mov ecx, dword ptr [esi]", 
          "mov dword ptr [esi + 4], eax", 
          "lea edx, dword ptr [ebp - 4]", 
          "mov word ptr [ecx], ax", 
          "push dword ptr [edi + 4]", 
          "xor ecx, ecx", 
          "mov dword ptr [ebp - 4], eax", 
          "push dword ptr [edi]", 
          "call 0x28a98", 
          "mov eax, dword ptr [ebp - 4]", 
          "cmp eax, dword ptr [esi + 8]", 
          "jl 0x28a6a"
        ]
      }, 
      {
        "basicblock_0x28a62": [
          "push eax", 
          "mov ecx, esi", 
          "call 0x3396", 
          "mov eax, dword ptr [edi + 4]", 
          "mov ebx, dword ptr [esi]", 
          "mov edi, dword ptr [edi]", 
          "push eax", 
          "push edi", 
          "lea edx, dword ptr [ebp - 4]", 
          "mov ecx, ebx", 
          "call 0x28a98", 
          "mov edi, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ecx, esi", 
          "and word ptr [ebx + eax*2], 0", 
          "call 0x28d08", 
          "test edi, edi", 
          "pop edi", 
          "pop esi", 
          "setne al", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28a6a": [
          "mov eax, dword ptr [edi + 4]", 
          "mov ebx, dword ptr [esi]", 
          "mov edi, dword ptr [edi]", 
          "push eax", 
          "push edi", 
          "lea edx, dword ptr [ebp - 4]", 
          "mov ecx, ebx", 
          "call 0x28a98", 
          "mov edi, eax", 
          "mov eax, dword ptr [ebp - 4]", 
          "mov ecx, esi", 
          "and word ptr [ebx + eax*2], 0", 
          "call 0x28d08", 
          "test edi, edi", 
          "pop edi", 
          "pop esi", 
          "setne al", 
          "pop ebx", 
          "leave ", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x27eb9": [
      {
        "basicblock_0x27eb9": [
          "push esi", 
          "xor esi, esi", 
          "mov dword ptr [edx], esi", 
          "mov eax, dword ptr [ecx + 4]", 
          "cmp eax, esi", 
          "push edi", 
          "je 0x27f1c"
        ]
      }, 
      {
        "basicblock_0x27ec6": [
          "jle 0x27f17"
        ]
      }, 
      {
        "basicblock_0x27f1c": [
          "xor al, al", 
          "jmp 0x27f19"
        ]
      }, 
      {
        "basicblock_0x27ec8": [
          "mov eax, dword ptr [ecx]", 
          "mov ax, word ptr [eax + esi*2]", 
          "cmp ax, 0x30", 
          "jb 0x27ee2"
        ]
      }, 
      {
        "basicblock_0x27f17": [
          "mov al, 1", 
          "pop edi", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x27f19": [
          "pop edi", 
          "pop esi", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x27ed4": [
          "cmp ax, 0x39", 
          "ja 0x27ee2"
        ]
      }, 
      {
        "basicblock_0x27ee2": [
          "cmp ax, 0x41", 
          "jb 0x27ef6"
        ]
      }, 
      {
        "basicblock_0x27eda": [
          "movzx eax, ax", 
          "sub eax, 0x30", 
          "jmp 0x27f08"
        ]
      }, 
      {
        "basicblock_0x27ee8": [
          "cmp ax, 0x46", 
          "ja 0x27ef6"
        ]
      }, 
      {
        "basicblock_0x27ef6": [
          "cmp ax, 0x61", 
          "jb 0x27f1c"
        ]
      }, 
      {
        "basicblock_0x27f08": [
          "mov edi, dword ptr [edx]", 
          "shl edi, 4", 
          "add edi, eax", 
          "inc esi", 
          "mov dword ptr [edx], edi", 
          "cmp esi, dword ptr [ecx + 4]", 
          "jl 0x27ec8"
        ]
      }, 
      {
        "basicblock_0x27eee": [
          "movzx eax, ax", 
          "sub eax, 0x37", 
          "jmp 0x27f08"
        ]
      }, 
      {
        "basicblock_0x27efc": [
          "cmp ax, 0x66", 
          "ja 0x27f1c"
        ]
      }, 
      {
        "basicblock_0x27f02": [
          "movzx eax, ax", 
          "sub eax, 0x57", 
          "mov edi, dword ptr [edx]", 
          "shl edi, 4", 
          "add edi, eax", 
          "inc esi", 
          "mov dword ptr [edx], edi", 
          "cmp esi, dword ptr [ecx + 4]", 
          "jl 0x27ec8"
        ]
      }
    ]
  }, 
  {
    "func_0x3748b": [
      {
        "basicblock_0x3748b": [
          "push ebx", 
          "mov ebx, dword ptr [ecx + 8]", 
          "cmp ebx, 1", 
          "jle 0x374e5"
        ]
      }, 
      {
        "basicblock_0x37494": [
          "mov eax, ebx", 
          "push esi", 
          "mov esi, dword ptr [ecx + 0xc]", 
          "push edi", 
          "cdq ", 
          "sub eax, edx", 
          "sub esi, 4", 
          "mov edi, eax", 
          "sar edi, 1", 
          "push dword ptr [esp + 0x14]", 
          "mov edx, edi", 
          "mov ecx, esi", 
          "push dword ptr [esp + 0x14]", 
          "push ebx", 
          "call 0x374e9", 
          "dec edi", 
          "jne 0x374a5"
        ]
      }, 
      {
        "basicblock_0x374e5": [
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x374ba": [
          "lea edi, dword ptr [esi + ebx*4]", 
          "push dword ptr [esp + 0x14]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "dec ebx", 
          "push dword ptr [esp + 0x14]", 
          "mov dword ptr [edi], ecx", 
          "mov ecx, esi", 
          "sub edi, 4", 
          "push ebx", 
          "push 1", 
          "pop edx", 
          "mov dword ptr [esi + 4], eax", 
          "call 0x374e9", 
          "cmp ebx, 1", 
          "jg 0x374bd"
        ]
      }, 
      {
        "basicblock_0x374a5": [
          "push dword ptr [esp + 0x14]", 
          "mov edx, edi", 
          "mov ecx, esi", 
          "push dword ptr [esp + 0x14]", 
          "push ebx", 
          "call 0x374e9", 
          "dec edi", 
          "jne 0x374a5"
        ]
      }, 
      {
        "basicblock_0x374e3": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x374bd": [
          "push dword ptr [esp + 0x14]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov eax, dword ptr [edi]", 
          "dec ebx", 
          "push dword ptr [esp + 0x14]", 
          "mov dword ptr [edi], ecx", 
          "mov ecx, esi", 
          "sub edi, 4", 
          "push ebx", 
          "push 1", 
          "pop edx", 
          "mov dword ptr [esi + 4], eax", 
          "call 0x374e9", 
          "cmp ebx, 1", 
          "jg 0x374bd"
        ]
      }
    ]
  }, 
  {
    "func_0x28954": [
      {
        "basicblock_0x28954": [
          "cmp cl, 0x20", 
          "je 0x2896f"
        ]
      }, 
      {
        "basicblock_0x28959": [
          "cmp cl, 0xa", 
          "je 0x2896f"
        ]
      }, 
      {
        "basicblock_0x2896f": [
          "push 1", 
          "pop eax", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x2895e": [
          "cmp cl, 0xd", 
          "je 0x2896f"
        ]
      }, 
      {
        "basicblock_0x28963": [
          "test cl, cl", 
          "je 0x2896f"
        ]
      }, 
      {
        "basicblock_0x28967": [
          "cmp cl, 9", 
          "je 0x2896f"
        ]
      }, 
      {
        "basicblock_0x2896c": [
          "xor eax, eax", 
          "ret "
        ]
      }
    ]
  }, 
  {
    "func_0x28a98": [
      {
        "basicblock_0x28a98": [
          "push ebp", 
          "mov ebp, esp", 
          "sub esp, 0xc", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "xor edi, edi", 
          "cmp dword ptr [ebp + 0xc], edi", 
          "mov dword ptr [ebp - 0xc], edx", 
          "mov dword ptr [ebp - 8], ecx", 
          "mov dword ptr [ebp - 4], edi", 
          "je 0x28b75"
        ]
      }, 
      {
        "basicblock_0x28ab5": [
          "lea edx, dword ptr [ecx + 2]", 
          "mov eax, dword ptr [ebp + 8]", 
          "mov al, byte ptr [edi + eax]", 
          "inc edi", 
          "cmp al, 0x80", 
          "jae 0x28adc"
        ]
      }, 
      {
        "basicblock_0x28b75": [
          "push 1", 
          "pop eax", 
          "jmp 0x28b7c"
        ]
      }, 
      {
        "basicblock_0x28ac3": [
          "cmp dword ptr [ebp - 8], 0", 
          "je 0x28ad0"
        ]
      }, 
      {
        "basicblock_0x28adc": [
          "cmp al, 0xc0", 
          "jb 0x28b7a"
        ]
      }, 
      {
        "basicblock_0x28b7c": [
          "mov edx, dword ptr [ebp - 0xc]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [edx], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x28ac9": [
          "movzx ax, al", 
          "mov word ptr [ecx], ax", 
          "inc dword ptr [ebp - 4]", 
          "inc ecx", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "jmp 0x28b6c"
        ]
      }, 
      {
        "basicblock_0x28ad0": [
          "inc dword ptr [ebp - 4]", 
          "inc ecx", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "jmp 0x28b6c"
        ]
      }, 
      {
        "basicblock_0x28ae4": [
          "push 1", 
          "pop esi", 
          "cmp al, byte ptr [esi + 0x44c4f8]", 
          "jb 0x28af5"
        ]
      }, 
      {
        "basicblock_0x28b7a": [
          "xor eax, eax", 
          "mov edx, dword ptr [ebp - 0xc]", 
          "mov ecx, dword ptr [ebp - 4]", 
          "pop edi", 
          "pop esi", 
          "mov dword ptr [edx], ecx", 
          "pop ebx", 
          "leave ", 
          "ret 8"
        ]
      }, 
      {
        "basicblock_0x28b6c": [
          "cmp edi, dword ptr [ebp + 0xc]", 
          "jne 0x28ab8"
        ]
      }, 
      {
        "basicblock_0x28aef": [
          "inc esi", 
          "cmp esi, 5", 
          "jl 0x28ae7"
        ]
      }, 
      {
        "basicblock_0x28af5": [
          "movzx ebx, byte ptr [esi + 0x44c4f7]", 
          "movzx eax, al", 
          "sub eax, ebx", 
          "cmp edi, dword ptr [ebp + 0xc]", 
          "je 0x28b28"
        ]
      }, 
      {
        "basicblock_0x28ab8": [
          "mov eax, dword ptr [ebp + 8]", 
          "mov al, byte ptr [edi + eax]", 
          "inc edi", 
          "cmp al, 0x80", 
          "jae 0x28adc"
        ]
      }, 
      {
        "basicblock_0x28ae7": [
          "cmp al, byte ptr [esi + 0x44c4f8]", 
          "jb 0x28af5"
        ]
      }, 
      {
        "basicblock_0x28b06": [
          "mov ebx, dword ptr [ebp + 8]", 
          "mov bl, byte ptr [edi + ebx]", 
          "inc edi", 
          "cmp bl, 0x80", 
          "jb 0x28b28"
        ]
      }, 
      {
        "basicblock_0x28b28": [
          "mov esi, 0x10000", 
          "cmp eax, esi", 
          "jae 0x28b39"
        ]
      }, 
      {
        "basicblock_0x28b12": [
          "cmp bl, 0xc0", 
          "jae 0x28b28"
        ]
      }, 
      {
        "basicblock_0x28b31": [
          "cmp dword ptr [ebp - 8], 0", 
          "je 0x28ad0"
        ]
      }, 
      {
        "basicblock_0x28b39": [
          "sub eax, esi", 
          "cmp eax, 0x100000", 
          "jae 0x28b7a"
        ]
      }, 
      {
        "basicblock_0x28b17": [
          "movzx ebx, bl", 
          "sub ebx, 0x80", 
          "shl eax, 6", 
          "or eax, ebx", 
          "dec esi", 
          "jne 0x28b01"
        ]
      }, 
      {
        "basicblock_0x28b37": [
          "jmp 0x28acd"
        ]
      }, 
      {
        "basicblock_0x28b42": [
          "cmp dword ptr [ebp - 8], 0", 
          "je 0x28b62"
        ]
      }, 
      {
        "basicblock_0x28b01": [
          "cmp edi, dword ptr [ebp + 0xc]", 
          "je 0x28b28"
        ]
      }, 
      {
        "basicblock_0x28acd": [
          "mov word ptr [ecx], ax", 
          "inc dword ptr [ebp - 4]", 
          "inc ecx", 
          "inc ecx", 
          "inc edx", 
          "inc edx", 
          "jmp 0x28b6c"
        ]
      }, 
      {
        "basicblock_0x28b48": [
          "mov esi, eax", 
          "and ax, 0x3ff", 
          "shr esi, 0xa", 
          "sub esi, 0x2800", 
          "sub eax, 0x2400", 
          "mov word ptr [ecx], si", 
          "mov word ptr [edx], ax", 
          "add dword ptr [ebp - 4], 2", 
          "add ecx, 4", 
          "add edx, 4", 
          "cmp edi, dword ptr [ebp + 0xc]", 
          "jne 0x28ab8"
        ]
      }, 
      {
        "basicblock_0x28b62": [
          "add dword ptr [ebp - 4], 2", 
          "add ecx, 4", 
          "add edx, 4", 
          "cmp edi, dword ptr [ebp + 0xc]", 
          "jne 0x28ab8"
        ]
      }
    ]
  }, 
  {
    "func_0x28d08": [
      {
        "basicblock_0x28d08": [
          "mov eax, dword ptr [ecx]", 
          "xor edx, edx", 
          "cmp word ptr [eax], dx", 
          "je 0x28d1e"
        ]
      }, 
      {
        "basicblock_0x28d11": [
          "push esi", 
          "mov esi, eax", 
          "inc edx", 
          "inc esi", 
          "inc esi", 
          "cmp word ptr [esi], 0", 
          "jne 0x28d14"
        ]
      }, 
      {
        "basicblock_0x28d1e": [
          "and word ptr [eax + edx*2], 0", 
          "mov dword ptr [ecx + 4], edx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28d1d": [
          "pop esi", 
          "and word ptr [eax + edx*2], 0", 
          "mov dword ptr [ecx + 4], edx", 
          "ret "
        ]
      }, 
      {
        "basicblock_0x28d14": [
          "inc edx", 
          "inc esi", 
          "inc esi", 
          "cmp word ptr [esi], 0", 
          "jne 0x28d14"
        ]
      }
    ]
  }, 
  {
    "func_0x374e9": [
      {
        "basicblock_0x374e9": [
          "push ebp", 
          "mov ebp, esp", 
          "push ecx", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov ebx, edx", 
          "mov edi, ecx", 
          "lea esi, dword ptr [ebx + ebx]", 
          "mov eax, dword ptr [edi + ebx*4]", 
          "mov dword ptr [ebp - 4], eax", 
          "cmp esi, dword ptr [ebp + 8]", 
          "jg 0x3753a"
        ]
      }, 
      {
        "basicblock_0x37503": [
          "jge 0x3751e"
        ]
      }, 
      {
        "basicblock_0x3753a": [
          "mov eax, dword ptr [ebp - 4]", 
          "mov dword ptr [edi + ebx*4], eax", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "leave ", 
          "ret 0xc"
        ]
      }, 
      {
        "basicblock_0x37505": [
          "push dword ptr [ebp + 0x10]", 
          "lea eax, dword ptr [esi + 1]", 
          "lea edx, dword ptr [edi + esi*4]", 
          "mov dword ptr [ebp - 8], eax", 
          "lea ecx, dword ptr [edi + eax*4]", 
          "call dword ptr [ebp + 0xc]", 
          "test eax, eax", 
          "jle 0x3751e"
        ]
      }, 
      {
        "basicblock_0x3751e": [
          "push dword ptr [ebp + 0x10]", 
          "lea edx, dword ptr [edi + esi*4]", 
          "lea ecx, dword ptr [ebp - 4]", 
          "call dword ptr [ebp + 0xc]", 
          "test eax, eax", 
          "jge 0x3753a"
        ]
      }, 
      {
        "basicblock_0x3751b": [
          "mov esi, dword ptr [ebp - 8]", 
          "push dword ptr [ebp + 0x10]", 
          "lea edx, dword ptr [edi + esi*4]", 
          "lea ecx, dword ptr [ebp - 4]", 
          "call dword ptr [ebp + 0xc]", 
          "test eax, eax", 
          "jge 0x3753a"
        ]
      }, 
      {
        "basicblock_0x3752e": [
          "mov eax, dword ptr [edi + esi*4]", 
          "mov dword ptr [edi + ebx*4], eax", 
          "mov ebx, esi", 
          "shl esi, 1", 
          "jmp 0x374fe"
        ]
      }, 
      {
        "basicblock_0x374fe": [
          "cmp esi, dword ptr [ebp + 8]", 
          "jg 0x3753a"
        ]
      }
    ]
  }, 
  {
    "func_0x12848": [
      {
        "basicblock_0x12848": [
          "push esi", 
          "mov esi, ecx", 
          "push 1", 
          "call 0x12941", 
          "mov eax, dword ptr [esi]", 
          "mov ecx, dword ptr [esi + 4]", 
          "mov dl, byte ptr [esp + 8]", 
          "mov byte ptr [eax + ecx], dl", 
          "inc dword ptr [esi + 4]", 
          "mov eax, dword ptr [esi + 4]", 
          "mov ecx, dword ptr [esi]", 
          "and byte ptr [eax + ecx], 0", 
          "mov eax, esi", 
          "pop esi", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x41d88": [
      {
        "basicblock_0x41d88": [
          "jmp dword ptr [0x44b2bc]"
        ]
      }
    ]
  }, 
  {
    "func_0x12941": [
      {
        "basicblock_0x12941": [
          "push ebx", 
          "push esi", 
          "push edi", 
          "mov edi, dword ptr [ecx + 8]", 
          "mov ebx, dword ptr [esp + 0x10]", 
          "mov esi, edi", 
          "sub esi, dword ptr [ecx + 4]", 
          "dec esi", 
          "cmp ebx, esi", 
          "jle 0x12985"
        ]
      }, 
      {
        "basicblock_0x12955": [
          "cmp edi, 0x40", 
          "jle 0x12963"
        ]
      }, 
      {
        "basicblock_0x12985": [
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1295a": [
          "mov eax, edi", 
          "cdq ", 
          "sub eax, edx", 
          "sar eax, 1", 
          "jmp 0x12972"
        ]
      }, 
      {
        "basicblock_0x12963": [
          "xor eax, eax", 
          "cmp edi, 8", 
          "setle al", 
          "dec eax", 
          "and eax, 0xc", 
          "add eax, 4", 
          "lea edx, dword ptr [eax + esi]", 
          "cmp edx, ebx", 
          "jge 0x1297d"
        ]
      }, 
      {
        "basicblock_0x12972": [
          "lea edx, dword ptr [eax + esi]", 
          "cmp edx, ebx", 
          "jge 0x1297d"
        ]
      }, 
      {
        "basicblock_0x12979": [
          "sub ebx, esi", 
          "mov eax, ebx", 
          "add edi, eax", 
          "push edi", 
          "call 0x34e3", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x1297d": [
          "add edi, eax", 
          "push edi", 
          "call 0x34e3", 
          "pop edi", 
          "pop esi", 
          "pop ebx", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x289d2": [
      {
        "basicblock_0x289d2": [
          "mov eax, 0x4471ba", 
          "call 0x41b80", 
          "push ecx", 
          "push ebx", 
          "push esi", 
          "mov ebx, ecx", 
          "push 0x18", 
          "call 0x284b1", 
          "mov esi, eax", 
          "pop ecx", 
          "mov dword ptr [ebp - 0x10], esi", 
          "and dword ptr [ebp - 4], 0", 
          "test esi, esi", 
          "je 0x28a15"
        ]
      }, 
      {
        "basicblock_0x289f6": [
          "push edi", 
          "mov edi, dword ptr [ebp + 8]", 
          "push edi", 
          "mov ecx, esi", 
          "call 0x30f2", 
          "add edi, 0xc", 
          "lea ecx, dword ptr [esi + 0xc]", 
          "push edi", 
          "mov byte ptr [ebp - 4], 1", 
          "call 0x30f2", 
          "pop edi", 
          "jmp 0x28a17"
        ]
      }, 
      {
        "basicblock_0x28a15": [
          "xor esi, esi", 
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, ebx", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }, 
      {
        "basicblock_0x28a17": [
          "or dword ptr [ebp - 4], 0xffffffff", 
          "push esi", 
          "mov ecx, ebx", 
          "call 0x29907", 
          "mov ecx, dword ptr [ebp - 0xc]", 
          "pop esi", 
          "pop ebx", 
          "mov dword ptr fs:[0], ecx", 
          "leave ", 
          "ret 4"
        ]
      }
    ]
  }, 
  {
    "func_0x9444": [
      {
        "basicblock_0x9444": [
          "push esi", 
          "mov esi, ecx", 
          "push dword ptr [esi + 0xc]", 
          "call 0x284d8", 
          "push dword ptr [esi]", 
          "call 0x284d8", 
          "pop ecx", 
          "pop ecx", 
          "pop esi", 
          "ret "
        ]
      }
    ]
  }
]